// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_0_sliding_windo (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        out_V_V1_din,
        out_V_V1_full_n,
        out_V_V1_write,
        out_V_V2_din,
        out_V_V2_full_n,
        out_V_V2_write,
        out_V_V3_din,
        out_V_V3_full_n,
        out_V_V3_write,
        out_V_V4_din,
        out_V_V4_full_n,
        out_V_V4_write,
        out_V_V15_din,
        out_V_V15_full_n,
        out_V_V15_write,
        out_V_V16_din,
        out_V_V16_full_n,
        out_V_V16_write,
        out_V_V17_din,
        out_V_V17_full_n,
        out_V_V17_write,
        out_V_V18_din,
        out_V_V18_full_n,
        out_V_V18_write,
        out_V_V19_din,
        out_V_V19_full_n,
        out_V_V19_write,
        out_V_V210_din,
        out_V_V210_full_n,
        out_V_V210_write,
        out_V_V211_din,
        out_V_V211_full_n,
        out_V_V211_write,
        out_V_V212_din,
        out_V_V212_full_n,
        out_V_V212_write,
        out_V_V213_din,
        out_V_V213_full_n,
        out_V_V213_write,
        out_V_V214_din,
        out_V_V214_full_n,
        out_V_V214_write,
        out_V_V315_din,
        out_V_V315_full_n,
        out_V_V315_write,
        out_V_V316_din,
        out_V_V316_full_n,
        out_V_V316_write,
        out_V_V317_din,
        out_V_V317_full_n,
        out_V_V317_write,
        out_V_V318_din,
        out_V_V318_full_n,
        out_V_V318_write,
        out_V_V319_din,
        out_V_V319_full_n,
        out_V_V319_write,
        out_V_V420_din,
        out_V_V420_full_n,
        out_V_V420_write,
        out_V_V421_din,
        out_V_V421_full_n,
        out_V_V421_write,
        out_V_V422_din,
        out_V_V422_full_n,
        out_V_V422_write,
        out_V_V423_din,
        out_V_V423_full_n,
        out_V_V423_write,
        out_V_V424_din,
        out_V_V424_full_n,
        out_V_V424_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [15:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
output  [15:0] out_V_V1_din;
input   out_V_V1_full_n;
output   out_V_V1_write;
output  [15:0] out_V_V2_din;
input   out_V_V2_full_n;
output   out_V_V2_write;
output  [15:0] out_V_V3_din;
input   out_V_V3_full_n;
output   out_V_V3_write;
output  [15:0] out_V_V4_din;
input   out_V_V4_full_n;
output   out_V_V4_write;
output  [15:0] out_V_V15_din;
input   out_V_V15_full_n;
output   out_V_V15_write;
output  [15:0] out_V_V16_din;
input   out_V_V16_full_n;
output   out_V_V16_write;
output  [15:0] out_V_V17_din;
input   out_V_V17_full_n;
output   out_V_V17_write;
output  [15:0] out_V_V18_din;
input   out_V_V18_full_n;
output   out_V_V18_write;
output  [15:0] out_V_V19_din;
input   out_V_V19_full_n;
output   out_V_V19_write;
output  [15:0] out_V_V210_din;
input   out_V_V210_full_n;
output   out_V_V210_write;
output  [15:0] out_V_V211_din;
input   out_V_V211_full_n;
output   out_V_V211_write;
output  [15:0] out_V_V212_din;
input   out_V_V212_full_n;
output   out_V_V212_write;
output  [15:0] out_V_V213_din;
input   out_V_V213_full_n;
output   out_V_V213_write;
output  [15:0] out_V_V214_din;
input   out_V_V214_full_n;
output   out_V_V214_write;
output  [15:0] out_V_V315_din;
input   out_V_V315_full_n;
output   out_V_V315_write;
output  [15:0] out_V_V316_din;
input   out_V_V316_full_n;
output   out_V_V316_write;
output  [15:0] out_V_V317_din;
input   out_V_V317_full_n;
output   out_V_V317_write;
output  [15:0] out_V_V318_din;
input   out_V_V318_full_n;
output   out_V_V318_write;
output  [15:0] out_V_V319_din;
input   out_V_V319_full_n;
output   out_V_V319_write;
output  [15:0] out_V_V420_din;
input   out_V_V420_full_n;
output   out_V_V420_write;
output  [15:0] out_V_V421_din;
input   out_V_V421_full_n;
output   out_V_V421_write;
output  [15:0] out_V_V422_din;
input   out_V_V422_full_n;
output   out_V_V422_write;
output  [15:0] out_V_V423_din;
input   out_V_V423_full_n;
output   out_V_V423_write;
output  [15:0] out_V_V424_din;
input   out_V_V424_full_n;
output   out_V_V424_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;
reg out_V_V1_write;
reg out_V_V2_write;
reg out_V_V3_write;
reg out_V_V4_write;
reg out_V_V15_write;
reg out_V_V16_write;
reg out_V_V17_write;
reg out_V_V18_write;
reg out_V_V19_write;
reg out_V_V210_write;
reg out_V_V211_write;
reg out_V_V212_write;
reg out_V_V213_write;
reg out_V_V214_write;
reg out_V_V315_write;
reg out_V_V316_write;
reg out_V_V317_write;
reg out_V_V318_write;
reg out_V_V319_write;
reg out_V_V420_write;
reg out_V_V421_write;
reg out_V_V422_write;
reg out_V_V423_write;
reg out_V_V424_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire    grp_sliding_window_fu_66_in_V_V_read;
wire   [15:0] grp_sliding_window_fu_66_out_V_V_din;
wire    grp_sliding_window_fu_66_out_V_V_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V1_din;
wire    grp_sliding_window_fu_66_out_V_V1_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V2_din;
wire    grp_sliding_window_fu_66_out_V_V2_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V3_din;
wire    grp_sliding_window_fu_66_out_V_V3_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V4_din;
wire    grp_sliding_window_fu_66_out_V_V4_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V15_din;
wire    grp_sliding_window_fu_66_out_V_V15_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V16_din;
wire    grp_sliding_window_fu_66_out_V_V16_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V17_din;
wire    grp_sliding_window_fu_66_out_V_V17_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V18_din;
wire    grp_sliding_window_fu_66_out_V_V18_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V19_din;
wire    grp_sliding_window_fu_66_out_V_V19_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V210_din;
wire    grp_sliding_window_fu_66_out_V_V210_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V211_din;
wire    grp_sliding_window_fu_66_out_V_V211_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V212_din;
wire    grp_sliding_window_fu_66_out_V_V212_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V213_din;
wire    grp_sliding_window_fu_66_out_V_V213_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V214_din;
wire    grp_sliding_window_fu_66_out_V_V214_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V315_din;
wire    grp_sliding_window_fu_66_out_V_V315_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V316_din;
wire    grp_sliding_window_fu_66_out_V_V316_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V317_din;
wire    grp_sliding_window_fu_66_out_V_V317_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V318_din;
wire    grp_sliding_window_fu_66_out_V_V318_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V319_din;
wire    grp_sliding_window_fu_66_out_V_V319_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V420_din;
wire    grp_sliding_window_fu_66_out_V_V420_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V421_din;
wire    grp_sliding_window_fu_66_out_V_V421_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V422_din;
wire    grp_sliding_window_fu_66_out_V_V422_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V423_din;
wire    grp_sliding_window_fu_66_out_V_V423_write;
wire   [15:0] grp_sliding_window_fu_66_out_V_V424_din;
wire    grp_sliding_window_fu_66_out_V_V424_write;
wire    grp_sliding_window_fu_66_ap_start;
wire    grp_sliding_window_fu_66_ap_done;
wire    grp_sliding_window_fu_66_ap_ready;
wire    grp_sliding_window_fu_66_ap_idle;
reg    grp_sliding_window_fu_66_ap_continue;
reg    grp_sliding_window_fu_66_ap_start_reg;
reg    ap_block_state1_ignore_call26;
wire    ap_CS_fsm_state2;
wire    ap_sync_grp_sliding_window_fu_66_ap_ready;
wire    ap_sync_grp_sliding_window_fu_66_ap_done;
reg    ap_block_state2_on_subcall_done;
reg    ap_sync_reg_grp_sliding_window_fu_66_ap_ready;
reg    ap_sync_reg_grp_sliding_window_fu_66_ap_done;
reg   [1:0] ap_NS_fsm;
reg    ap_block_state1;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 grp_sliding_window_fu_66_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_sliding_window_fu_66_ap_ready = 1'b0;
#0 ap_sync_reg_grp_sliding_window_fu_66_ap_done = 1'b0;
end

sliding_window grp_sliding_window_fu_66(
    .in_V_V_dout(in_V_V_dout),
    .in_V_V_empty_n(in_V_V_empty_n),
    .in_V_V_read(grp_sliding_window_fu_66_in_V_V_read),
    .out_V_V_din(grp_sliding_window_fu_66_out_V_V_din),
    .out_V_V_full_n(out_V_V_full_n),
    .out_V_V_write(grp_sliding_window_fu_66_out_V_V_write),
    .out_V_V1_din(grp_sliding_window_fu_66_out_V_V1_din),
    .out_V_V1_full_n(out_V_V1_full_n),
    .out_V_V1_write(grp_sliding_window_fu_66_out_V_V1_write),
    .out_V_V2_din(grp_sliding_window_fu_66_out_V_V2_din),
    .out_V_V2_full_n(out_V_V2_full_n),
    .out_V_V2_write(grp_sliding_window_fu_66_out_V_V2_write),
    .out_V_V3_din(grp_sliding_window_fu_66_out_V_V3_din),
    .out_V_V3_full_n(out_V_V3_full_n),
    .out_V_V3_write(grp_sliding_window_fu_66_out_V_V3_write),
    .out_V_V4_din(grp_sliding_window_fu_66_out_V_V4_din),
    .out_V_V4_full_n(out_V_V4_full_n),
    .out_V_V4_write(grp_sliding_window_fu_66_out_V_V4_write),
    .out_V_V15_din(grp_sliding_window_fu_66_out_V_V15_din),
    .out_V_V15_full_n(out_V_V15_full_n),
    .out_V_V15_write(grp_sliding_window_fu_66_out_V_V15_write),
    .out_V_V16_din(grp_sliding_window_fu_66_out_V_V16_din),
    .out_V_V16_full_n(out_V_V16_full_n),
    .out_V_V16_write(grp_sliding_window_fu_66_out_V_V16_write),
    .out_V_V17_din(grp_sliding_window_fu_66_out_V_V17_din),
    .out_V_V17_full_n(out_V_V17_full_n),
    .out_V_V17_write(grp_sliding_window_fu_66_out_V_V17_write),
    .out_V_V18_din(grp_sliding_window_fu_66_out_V_V18_din),
    .out_V_V18_full_n(out_V_V18_full_n),
    .out_V_V18_write(grp_sliding_window_fu_66_out_V_V18_write),
    .out_V_V19_din(grp_sliding_window_fu_66_out_V_V19_din),
    .out_V_V19_full_n(out_V_V19_full_n),
    .out_V_V19_write(grp_sliding_window_fu_66_out_V_V19_write),
    .out_V_V210_din(grp_sliding_window_fu_66_out_V_V210_din),
    .out_V_V210_full_n(out_V_V210_full_n),
    .out_V_V210_write(grp_sliding_window_fu_66_out_V_V210_write),
    .out_V_V211_din(grp_sliding_window_fu_66_out_V_V211_din),
    .out_V_V211_full_n(out_V_V211_full_n),
    .out_V_V211_write(grp_sliding_window_fu_66_out_V_V211_write),
    .out_V_V212_din(grp_sliding_window_fu_66_out_V_V212_din),
    .out_V_V212_full_n(out_V_V212_full_n),
    .out_V_V212_write(grp_sliding_window_fu_66_out_V_V212_write),
    .out_V_V213_din(grp_sliding_window_fu_66_out_V_V213_din),
    .out_V_V213_full_n(out_V_V213_full_n),
    .out_V_V213_write(grp_sliding_window_fu_66_out_V_V213_write),
    .out_V_V214_din(grp_sliding_window_fu_66_out_V_V214_din),
    .out_V_V214_full_n(out_V_V214_full_n),
    .out_V_V214_write(grp_sliding_window_fu_66_out_V_V214_write),
    .out_V_V315_din(grp_sliding_window_fu_66_out_V_V315_din),
    .out_V_V315_full_n(out_V_V315_full_n),
    .out_V_V315_write(grp_sliding_window_fu_66_out_V_V315_write),
    .out_V_V316_din(grp_sliding_window_fu_66_out_V_V316_din),
    .out_V_V316_full_n(out_V_V316_full_n),
    .out_V_V316_write(grp_sliding_window_fu_66_out_V_V316_write),
    .out_V_V317_din(grp_sliding_window_fu_66_out_V_V317_din),
    .out_V_V317_full_n(out_V_V317_full_n),
    .out_V_V317_write(grp_sliding_window_fu_66_out_V_V317_write),
    .out_V_V318_din(grp_sliding_window_fu_66_out_V_V318_din),
    .out_V_V318_full_n(out_V_V318_full_n),
    .out_V_V318_write(grp_sliding_window_fu_66_out_V_V318_write),
    .out_V_V319_din(grp_sliding_window_fu_66_out_V_V319_din),
    .out_V_V319_full_n(out_V_V319_full_n),
    .out_V_V319_write(grp_sliding_window_fu_66_out_V_V319_write),
    .out_V_V420_din(grp_sliding_window_fu_66_out_V_V420_din),
    .out_V_V420_full_n(out_V_V420_full_n),
    .out_V_V420_write(grp_sliding_window_fu_66_out_V_V420_write),
    .out_V_V421_din(grp_sliding_window_fu_66_out_V_V421_din),
    .out_V_V421_full_n(out_V_V421_full_n),
    .out_V_V421_write(grp_sliding_window_fu_66_out_V_V421_write),
    .out_V_V422_din(grp_sliding_window_fu_66_out_V_V422_din),
    .out_V_V422_full_n(out_V_V422_full_n),
    .out_V_V422_write(grp_sliding_window_fu_66_out_V_V422_write),
    .out_V_V423_din(grp_sliding_window_fu_66_out_V_V423_din),
    .out_V_V423_full_n(out_V_V423_full_n),
    .out_V_V423_write(grp_sliding_window_fu_66_out_V_V423_write),
    .out_V_V424_din(grp_sliding_window_fu_66_out_V_V424_din),
    .out_V_V424_full_n(out_V_V424_full_n),
    .out_V_V424_write(grp_sliding_window_fu_66_out_V_V424_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_sliding_window_fu_66_ap_start),
    .ap_done(grp_sliding_window_fu_66_ap_done),
    .ap_ready(grp_sliding_window_fu_66_ap_ready),
    .ap_idle(grp_sliding_window_fu_66_ap_idle),
    .ap_continue(grp_sliding_window_fu_66_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_sliding_window_fu_66_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_sync_reg_grp_sliding_window_fu_66_ap_done <= 1'b0;
        end else if ((grp_sliding_window_fu_66_ap_done == 1'b1)) begin
            ap_sync_reg_grp_sliding_window_fu_66_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_sliding_window_fu_66_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_sync_reg_grp_sliding_window_fu_66_ap_ready <= 1'b0;
        end else if ((grp_sliding_window_fu_66_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_sliding_window_fu_66_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_sliding_window_fu_66_ap_start_reg <= 1'b0;
    end else begin
        if (((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_sync_grp_sliding_window_fu_66_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_sliding_window_fu_66_ap_start_reg <= 1'b1;
        end else if ((grp_sliding_window_fu_66_ap_ready == 1'b1)) begin
            grp_sliding_window_fu_66_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        grp_sliding_window_fu_66_ap_continue = 1'b1;
    end else begin
        grp_sliding_window_fu_66_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_V_V_read = grp_sliding_window_fu_66_in_V_V_read;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V15_write = grp_sliding_window_fu_66_out_V_V15_write;
    end else begin
        out_V_V15_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V16_write = grp_sliding_window_fu_66_out_V_V16_write;
    end else begin
        out_V_V16_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V17_write = grp_sliding_window_fu_66_out_V_V17_write;
    end else begin
        out_V_V17_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V18_write = grp_sliding_window_fu_66_out_V_V18_write;
    end else begin
        out_V_V18_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V19_write = grp_sliding_window_fu_66_out_V_V19_write;
    end else begin
        out_V_V19_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V1_write = grp_sliding_window_fu_66_out_V_V1_write;
    end else begin
        out_V_V1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V210_write = grp_sliding_window_fu_66_out_V_V210_write;
    end else begin
        out_V_V210_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V211_write = grp_sliding_window_fu_66_out_V_V211_write;
    end else begin
        out_V_V211_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V212_write = grp_sliding_window_fu_66_out_V_V212_write;
    end else begin
        out_V_V212_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V213_write = grp_sliding_window_fu_66_out_V_V213_write;
    end else begin
        out_V_V213_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V214_write = grp_sliding_window_fu_66_out_V_V214_write;
    end else begin
        out_V_V214_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V2_write = grp_sliding_window_fu_66_out_V_V2_write;
    end else begin
        out_V_V2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V315_write = grp_sliding_window_fu_66_out_V_V315_write;
    end else begin
        out_V_V315_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V316_write = grp_sliding_window_fu_66_out_V_V316_write;
    end else begin
        out_V_V316_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V317_write = grp_sliding_window_fu_66_out_V_V317_write;
    end else begin
        out_V_V317_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V318_write = grp_sliding_window_fu_66_out_V_V318_write;
    end else begin
        out_V_V318_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V319_write = grp_sliding_window_fu_66_out_V_V319_write;
    end else begin
        out_V_V319_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V3_write = grp_sliding_window_fu_66_out_V_V3_write;
    end else begin
        out_V_V3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V420_write = grp_sliding_window_fu_66_out_V_V420_write;
    end else begin
        out_V_V420_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V421_write = grp_sliding_window_fu_66_out_V_V421_write;
    end else begin
        out_V_V421_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V422_write = grp_sliding_window_fu_66_out_V_V422_write;
    end else begin
        out_V_V422_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V423_write = grp_sliding_window_fu_66_out_V_V423_write;
    end else begin
        out_V_V423_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V424_write = grp_sliding_window_fu_66_out_V_V424_write;
    end else begin
        out_V_V424_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V4_write = grp_sliding_window_fu_66_out_V_V4_write;
    end else begin
        out_V_V4_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_V_V_write = grp_sliding_window_fu_66_out_V_V_write;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call26 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = ((ap_sync_grp_sliding_window_fu_66_ap_ready & ap_sync_grp_sliding_window_fu_66_ap_done) == 1'b0);
end

assign ap_ready = internal_ap_ready;

assign ap_sync_grp_sliding_window_fu_66_ap_done = (grp_sliding_window_fu_66_ap_done | ap_sync_reg_grp_sliding_window_fu_66_ap_done);

assign ap_sync_grp_sliding_window_fu_66_ap_ready = (grp_sliding_window_fu_66_ap_ready | ap_sync_reg_grp_sliding_window_fu_66_ap_ready);

assign grp_sliding_window_fu_66_ap_start = grp_sliding_window_fu_66_ap_start_reg;

assign out_V_V15_din = grp_sliding_window_fu_66_out_V_V15_din;

assign out_V_V16_din = grp_sliding_window_fu_66_out_V_V16_din;

assign out_V_V17_din = grp_sliding_window_fu_66_out_V_V17_din;

assign out_V_V18_din = grp_sliding_window_fu_66_out_V_V18_din;

assign out_V_V19_din = grp_sliding_window_fu_66_out_V_V19_din;

assign out_V_V1_din = grp_sliding_window_fu_66_out_V_V1_din;

assign out_V_V210_din = grp_sliding_window_fu_66_out_V_V210_din;

assign out_V_V211_din = grp_sliding_window_fu_66_out_V_V211_din;

assign out_V_V212_din = grp_sliding_window_fu_66_out_V_V212_din;

assign out_V_V213_din = grp_sliding_window_fu_66_out_V_V213_din;

assign out_V_V214_din = grp_sliding_window_fu_66_out_V_V214_din;

assign out_V_V2_din = grp_sliding_window_fu_66_out_V_V2_din;

assign out_V_V315_din = grp_sliding_window_fu_66_out_V_V315_din;

assign out_V_V316_din = grp_sliding_window_fu_66_out_V_V316_din;

assign out_V_V317_din = grp_sliding_window_fu_66_out_V_V317_din;

assign out_V_V318_din = grp_sliding_window_fu_66_out_V_V318_din;

assign out_V_V319_din = grp_sliding_window_fu_66_out_V_V319_din;

assign out_V_V3_din = grp_sliding_window_fu_66_out_V_V3_din;

assign out_V_V420_din = grp_sliding_window_fu_66_out_V_V420_din;

assign out_V_V421_din = grp_sliding_window_fu_66_out_V_V421_din;

assign out_V_V422_din = grp_sliding_window_fu_66_out_V_V422_din;

assign out_V_V423_din = grp_sliding_window_fu_66_out_V_V423_din;

assign out_V_V424_din = grp_sliding_window_fu_66_out_V_V424_din;

assign out_V_V4_din = grp_sliding_window_fu_66_out_V_V4_din;

assign out_V_V_din = grp_sliding_window_fu_66_out_V_V_din;

assign start_out = real_start;

endmodule //Conv_0_sliding_windo
