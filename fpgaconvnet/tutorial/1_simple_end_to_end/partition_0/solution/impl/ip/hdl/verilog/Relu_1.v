// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Relu_1 (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        in_0_V_V_dout,
        in_0_V_V_empty_n,
        in_0_V_V_read,
        in_1_V_V_dout,
        in_1_V_V_empty_n,
        in_1_V_V_read,
        in_2_V_V_dout,
        in_2_V_V_empty_n,
        in_2_V_V_read,
        in_3_V_V_dout,
        in_3_V_V_empty_n,
        in_3_V_V_read,
        in_4_V_V_dout,
        in_4_V_V_empty_n,
        in_4_V_V_read,
        in_5_V_V_dout,
        in_5_V_V_empty_n,
        in_5_V_V_read,
        in_6_V_V_dout,
        in_6_V_V_empty_n,
        in_6_V_V_read,
        in_7_V_V_dout,
        in_7_V_V_empty_n,
        in_7_V_V_read,
        in_8_V_V_dout,
        in_8_V_V_empty_n,
        in_8_V_V_read,
        in_9_V_V_dout,
        in_9_V_V_empty_n,
        in_9_V_V_read,
        in_10_V_V_dout,
        in_10_V_V_empty_n,
        in_10_V_V_read,
        in_11_V_V_dout,
        in_11_V_V_empty_n,
        in_11_V_V_read,
        in_12_V_V_dout,
        in_12_V_V_empty_n,
        in_12_V_V_read,
        in_13_V_V_dout,
        in_13_V_V_empty_n,
        in_13_V_V_read,
        in_14_V_V_dout,
        in_14_V_V_empty_n,
        in_14_V_V_read,
        in_15_V_V_dout,
        in_15_V_V_empty_n,
        in_15_V_V_read,
        out_0_V_V_din,
        out_0_V_V_full_n,
        out_0_V_V_write,
        out_1_V_V_din,
        out_1_V_V_full_n,
        out_1_V_V_write,
        out_2_V_V_din,
        out_2_V_V_full_n,
        out_2_V_V_write,
        out_3_V_V_din,
        out_3_V_V_full_n,
        out_3_V_V_write,
        out_4_V_V_din,
        out_4_V_V_full_n,
        out_4_V_V_write,
        out_5_V_V_din,
        out_5_V_V_full_n,
        out_5_V_V_write,
        out_6_V_V_din,
        out_6_V_V_full_n,
        out_6_V_V_write,
        out_7_V_V_din,
        out_7_V_V_full_n,
        out_7_V_V_write,
        out_8_V_V_din,
        out_8_V_V_full_n,
        out_8_V_V_write,
        out_9_V_V_din,
        out_9_V_V_full_n,
        out_9_V_V_write,
        out_10_V_V_din,
        out_10_V_V_full_n,
        out_10_V_V_write,
        out_11_V_V_din,
        out_11_V_V_full_n,
        out_11_V_V_write,
        out_12_V_V_din,
        out_12_V_V_full_n,
        out_12_V_V_write,
        out_13_V_V_din,
        out_13_V_V_full_n,
        out_13_V_V_write,
        out_14_V_V_din,
        out_14_V_V_full_n,
        out_14_V_V_write,
        out_15_V_V_din,
        out_15_V_V_full_n,
        out_15_V_V_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [15:0] in_0_V_V_dout;
input   in_0_V_V_empty_n;
output   in_0_V_V_read;
input  [15:0] in_1_V_V_dout;
input   in_1_V_V_empty_n;
output   in_1_V_V_read;
input  [15:0] in_2_V_V_dout;
input   in_2_V_V_empty_n;
output   in_2_V_V_read;
input  [15:0] in_3_V_V_dout;
input   in_3_V_V_empty_n;
output   in_3_V_V_read;
input  [15:0] in_4_V_V_dout;
input   in_4_V_V_empty_n;
output   in_4_V_V_read;
input  [15:0] in_5_V_V_dout;
input   in_5_V_V_empty_n;
output   in_5_V_V_read;
input  [15:0] in_6_V_V_dout;
input   in_6_V_V_empty_n;
output   in_6_V_V_read;
input  [15:0] in_7_V_V_dout;
input   in_7_V_V_empty_n;
output   in_7_V_V_read;
input  [15:0] in_8_V_V_dout;
input   in_8_V_V_empty_n;
output   in_8_V_V_read;
input  [15:0] in_9_V_V_dout;
input   in_9_V_V_empty_n;
output   in_9_V_V_read;
input  [15:0] in_10_V_V_dout;
input   in_10_V_V_empty_n;
output   in_10_V_V_read;
input  [15:0] in_11_V_V_dout;
input   in_11_V_V_empty_n;
output   in_11_V_V_read;
input  [15:0] in_12_V_V_dout;
input   in_12_V_V_empty_n;
output   in_12_V_V_read;
input  [15:0] in_13_V_V_dout;
input   in_13_V_V_empty_n;
output   in_13_V_V_read;
input  [15:0] in_14_V_V_dout;
input   in_14_V_V_empty_n;
output   in_14_V_V_read;
input  [15:0] in_15_V_V_dout;
input   in_15_V_V_empty_n;
output   in_15_V_V_read;
output  [15:0] out_0_V_V_din;
input   out_0_V_V_full_n;
output   out_0_V_V_write;
output  [15:0] out_1_V_V_din;
input   out_1_V_V_full_n;
output   out_1_V_V_write;
output  [15:0] out_2_V_V_din;
input   out_2_V_V_full_n;
output   out_2_V_V_write;
output  [15:0] out_3_V_V_din;
input   out_3_V_V_full_n;
output   out_3_V_V_write;
output  [15:0] out_4_V_V_din;
input   out_4_V_V_full_n;
output   out_4_V_V_write;
output  [15:0] out_5_V_V_din;
input   out_5_V_V_full_n;
output   out_5_V_V_write;
output  [15:0] out_6_V_V_din;
input   out_6_V_V_full_n;
output   out_6_V_V_write;
output  [15:0] out_7_V_V_din;
input   out_7_V_V_full_n;
output   out_7_V_V_write;
output  [15:0] out_8_V_V_din;
input   out_8_V_V_full_n;
output   out_8_V_V_write;
output  [15:0] out_9_V_V_din;
input   out_9_V_V_full_n;
output   out_9_V_V_write;
output  [15:0] out_10_V_V_din;
input   out_10_V_V_full_n;
output   out_10_V_V_write;
output  [15:0] out_11_V_V_din;
input   out_11_V_V_full_n;
output   out_11_V_V_write;
output  [15:0] out_12_V_V_din;
input   out_12_V_V_full_n;
output   out_12_V_V_write;
output  [15:0] out_13_V_V_din;
input   out_13_V_V_full_n;
output   out_13_V_V_write;
output  [15:0] out_14_V_V_din;
input   out_14_V_V_full_n;
output   out_14_V_V_write;
output  [15:0] out_15_V_V_din;
input   out_15_V_V_full_n;
output   out_15_V_V_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    Relu_1_relu344_U0_ap_start;
wire    Relu_1_relu344_U0_ap_done;
wire    Relu_1_relu344_U0_ap_continue;
wire    Relu_1_relu344_U0_ap_idle;
wire    Relu_1_relu344_U0_ap_ready;
wire    Relu_1_relu344_U0_in_V_V_read;
wire   [15:0] Relu_1_relu344_U0_out_V_V_din;
wire    Relu_1_relu344_U0_out_V_V_write;
wire    ap_sync_continue;
wire    Relu_1_relu345_U0_ap_start;
wire    Relu_1_relu345_U0_ap_done;
wire    Relu_1_relu345_U0_ap_continue;
wire    Relu_1_relu345_U0_ap_idle;
wire    Relu_1_relu345_U0_ap_ready;
wire    Relu_1_relu345_U0_in_V_V1_read;
wire   [15:0] Relu_1_relu345_U0_out_V_V16_din;
wire    Relu_1_relu345_U0_out_V_V16_write;
wire    Relu_1_relu346_U0_ap_start;
wire    Relu_1_relu346_U0_ap_done;
wire    Relu_1_relu346_U0_ap_continue;
wire    Relu_1_relu346_U0_ap_idle;
wire    Relu_1_relu346_U0_ap_ready;
wire    Relu_1_relu346_U0_in_V_V2_read;
wire   [15:0] Relu_1_relu346_U0_out_V_V17_din;
wire    Relu_1_relu346_U0_out_V_V17_write;
wire    Relu_1_relu347_U0_ap_start;
wire    Relu_1_relu347_U0_ap_done;
wire    Relu_1_relu347_U0_ap_continue;
wire    Relu_1_relu347_U0_ap_idle;
wire    Relu_1_relu347_U0_ap_ready;
wire    Relu_1_relu347_U0_in_V_V3_read;
wire   [15:0] Relu_1_relu347_U0_out_V_V18_din;
wire    Relu_1_relu347_U0_out_V_V18_write;
wire    Relu_1_relu348_U0_ap_start;
wire    Relu_1_relu348_U0_ap_done;
wire    Relu_1_relu348_U0_ap_continue;
wire    Relu_1_relu348_U0_ap_idle;
wire    Relu_1_relu348_U0_ap_ready;
wire    Relu_1_relu348_U0_in_V_V4_read;
wire   [15:0] Relu_1_relu348_U0_out_V_V19_din;
wire    Relu_1_relu348_U0_out_V_V19_write;
wire    Relu_1_relu349_U0_ap_start;
wire    Relu_1_relu349_U0_ap_done;
wire    Relu_1_relu349_U0_ap_continue;
wire    Relu_1_relu349_U0_ap_idle;
wire    Relu_1_relu349_U0_ap_ready;
wire    Relu_1_relu349_U0_in_V_V5_read;
wire   [15:0] Relu_1_relu349_U0_out_V_V20_din;
wire    Relu_1_relu349_U0_out_V_V20_write;
wire    Relu_1_relu350_U0_ap_start;
wire    Relu_1_relu350_U0_ap_done;
wire    Relu_1_relu350_U0_ap_continue;
wire    Relu_1_relu350_U0_ap_idle;
wire    Relu_1_relu350_U0_ap_ready;
wire    Relu_1_relu350_U0_in_V_V6_read;
wire   [15:0] Relu_1_relu350_U0_out_V_V21_din;
wire    Relu_1_relu350_U0_out_V_V21_write;
wire    Relu_1_relu351_U0_ap_start;
wire    Relu_1_relu351_U0_ap_done;
wire    Relu_1_relu351_U0_ap_continue;
wire    Relu_1_relu351_U0_ap_idle;
wire    Relu_1_relu351_U0_ap_ready;
wire    Relu_1_relu351_U0_in_V_V7_read;
wire   [15:0] Relu_1_relu351_U0_out_V_V22_din;
wire    Relu_1_relu351_U0_out_V_V22_write;
wire    Relu_1_relu352_U0_ap_start;
wire    Relu_1_relu352_U0_ap_done;
wire    Relu_1_relu352_U0_ap_continue;
wire    Relu_1_relu352_U0_ap_idle;
wire    Relu_1_relu352_U0_ap_ready;
wire    Relu_1_relu352_U0_in_V_V8_read;
wire   [15:0] Relu_1_relu352_U0_out_V_V23_din;
wire    Relu_1_relu352_U0_out_V_V23_write;
wire    Relu_1_relu353_U0_ap_start;
wire    Relu_1_relu353_U0_ap_done;
wire    Relu_1_relu353_U0_ap_continue;
wire    Relu_1_relu353_U0_ap_idle;
wire    Relu_1_relu353_U0_ap_ready;
wire    Relu_1_relu353_U0_in_V_V9_read;
wire   [15:0] Relu_1_relu353_U0_out_V_V24_din;
wire    Relu_1_relu353_U0_out_V_V24_write;
wire    Relu_1_relu354_U0_ap_start;
wire    Relu_1_relu354_U0_ap_done;
wire    Relu_1_relu354_U0_ap_continue;
wire    Relu_1_relu354_U0_ap_idle;
wire    Relu_1_relu354_U0_ap_ready;
wire    Relu_1_relu354_U0_in_V_V10_read;
wire   [15:0] Relu_1_relu354_U0_out_V_V25_din;
wire    Relu_1_relu354_U0_out_V_V25_write;
wire    Relu_1_relu355_U0_ap_start;
wire    Relu_1_relu355_U0_ap_done;
wire    Relu_1_relu355_U0_ap_continue;
wire    Relu_1_relu355_U0_ap_idle;
wire    Relu_1_relu355_U0_ap_ready;
wire    Relu_1_relu355_U0_in_V_V11_read;
wire   [15:0] Relu_1_relu355_U0_out_V_V26_din;
wire    Relu_1_relu355_U0_out_V_V26_write;
wire    Relu_1_relu356_U0_ap_start;
wire    Relu_1_relu356_U0_ap_done;
wire    Relu_1_relu356_U0_ap_continue;
wire    Relu_1_relu356_U0_ap_idle;
wire    Relu_1_relu356_U0_ap_ready;
wire    Relu_1_relu356_U0_in_V_V12_read;
wire   [15:0] Relu_1_relu356_U0_out_V_V27_din;
wire    Relu_1_relu356_U0_out_V_V27_write;
wire    Relu_1_relu357_U0_ap_start;
wire    Relu_1_relu357_U0_ap_done;
wire    Relu_1_relu357_U0_ap_continue;
wire    Relu_1_relu357_U0_ap_idle;
wire    Relu_1_relu357_U0_ap_ready;
wire    Relu_1_relu357_U0_in_V_V13_read;
wire   [15:0] Relu_1_relu357_U0_out_V_V28_din;
wire    Relu_1_relu357_U0_out_V_V28_write;
wire    Relu_1_relu358_U0_ap_start;
wire    Relu_1_relu358_U0_ap_done;
wire    Relu_1_relu358_U0_ap_continue;
wire    Relu_1_relu358_U0_ap_idle;
wire    Relu_1_relu358_U0_ap_ready;
wire    Relu_1_relu358_U0_in_V_V14_read;
wire   [15:0] Relu_1_relu358_U0_out_V_V29_din;
wire    Relu_1_relu358_U0_out_V_V29_write;
wire    Relu_1_relu359_U0_ap_start;
wire    Relu_1_relu359_U0_ap_done;
wire    Relu_1_relu359_U0_ap_continue;
wire    Relu_1_relu359_U0_ap_idle;
wire    Relu_1_relu359_U0_ap_ready;
wire    Relu_1_relu359_U0_in_V_V15_read;
wire   [15:0] Relu_1_relu359_U0_out_V_V30_din;
wire    Relu_1_relu359_U0_out_V_V30_write;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Relu_1_relu344_U0_ap_ready;
wire    ap_sync_Relu_1_relu344_U0_ap_ready;
reg   [1:0] Relu_1_relu344_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu345_U0_ap_ready;
wire    ap_sync_Relu_1_relu345_U0_ap_ready;
reg   [1:0] Relu_1_relu345_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu346_U0_ap_ready;
wire    ap_sync_Relu_1_relu346_U0_ap_ready;
reg   [1:0] Relu_1_relu346_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu347_U0_ap_ready;
wire    ap_sync_Relu_1_relu347_U0_ap_ready;
reg   [1:0] Relu_1_relu347_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu348_U0_ap_ready;
wire    ap_sync_Relu_1_relu348_U0_ap_ready;
reg   [1:0] Relu_1_relu348_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu349_U0_ap_ready;
wire    ap_sync_Relu_1_relu349_U0_ap_ready;
reg   [1:0] Relu_1_relu349_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu350_U0_ap_ready;
wire    ap_sync_Relu_1_relu350_U0_ap_ready;
reg   [1:0] Relu_1_relu350_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu351_U0_ap_ready;
wire    ap_sync_Relu_1_relu351_U0_ap_ready;
reg   [1:0] Relu_1_relu351_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu352_U0_ap_ready;
wire    ap_sync_Relu_1_relu352_U0_ap_ready;
reg   [1:0] Relu_1_relu352_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu353_U0_ap_ready;
wire    ap_sync_Relu_1_relu353_U0_ap_ready;
reg   [1:0] Relu_1_relu353_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu354_U0_ap_ready;
wire    ap_sync_Relu_1_relu354_U0_ap_ready;
reg   [1:0] Relu_1_relu354_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu355_U0_ap_ready;
wire    ap_sync_Relu_1_relu355_U0_ap_ready;
reg   [1:0] Relu_1_relu355_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu356_U0_ap_ready;
wire    ap_sync_Relu_1_relu356_U0_ap_ready;
reg   [1:0] Relu_1_relu356_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu357_U0_ap_ready;
wire    ap_sync_Relu_1_relu357_U0_ap_ready;
reg   [1:0] Relu_1_relu357_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu358_U0_ap_ready;
wire    ap_sync_Relu_1_relu358_U0_ap_ready;
reg   [1:0] Relu_1_relu358_U0_ap_ready_count;
reg    ap_sync_reg_Relu_1_relu359_U0_ap_ready;
wire    ap_sync_Relu_1_relu359_U0_ap_ready;
reg   [1:0] Relu_1_relu359_U0_ap_ready_count;
wire    Relu_1_relu344_U0_start_full_n;
wire    Relu_1_relu344_U0_start_write;
wire    Relu_1_relu345_U0_start_full_n;
wire    Relu_1_relu345_U0_start_write;
wire    Relu_1_relu346_U0_start_full_n;
wire    Relu_1_relu346_U0_start_write;
wire    Relu_1_relu347_U0_start_full_n;
wire    Relu_1_relu347_U0_start_write;
wire    Relu_1_relu348_U0_start_full_n;
wire    Relu_1_relu348_U0_start_write;
wire    Relu_1_relu349_U0_start_full_n;
wire    Relu_1_relu349_U0_start_write;
wire    Relu_1_relu350_U0_start_full_n;
wire    Relu_1_relu350_U0_start_write;
wire    Relu_1_relu351_U0_start_full_n;
wire    Relu_1_relu351_U0_start_write;
wire    Relu_1_relu352_U0_start_full_n;
wire    Relu_1_relu352_U0_start_write;
wire    Relu_1_relu353_U0_start_full_n;
wire    Relu_1_relu353_U0_start_write;
wire    Relu_1_relu354_U0_start_full_n;
wire    Relu_1_relu354_U0_start_write;
wire    Relu_1_relu355_U0_start_full_n;
wire    Relu_1_relu355_U0_start_write;
wire    Relu_1_relu356_U0_start_full_n;
wire    Relu_1_relu356_U0_start_write;
wire    Relu_1_relu357_U0_start_full_n;
wire    Relu_1_relu357_U0_start_write;
wire    Relu_1_relu358_U0_start_full_n;
wire    Relu_1_relu358_U0_start_write;
wire    Relu_1_relu359_U0_start_full_n;
wire    Relu_1_relu359_U0_start_write;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_sync_reg_Relu_1_relu344_U0_ap_ready = 1'b0;
#0 Relu_1_relu344_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu345_U0_ap_ready = 1'b0;
#0 Relu_1_relu345_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu346_U0_ap_ready = 1'b0;
#0 Relu_1_relu346_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu347_U0_ap_ready = 1'b0;
#0 Relu_1_relu347_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu348_U0_ap_ready = 1'b0;
#0 Relu_1_relu348_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu349_U0_ap_ready = 1'b0;
#0 Relu_1_relu349_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu350_U0_ap_ready = 1'b0;
#0 Relu_1_relu350_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu351_U0_ap_ready = 1'b0;
#0 Relu_1_relu351_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu352_U0_ap_ready = 1'b0;
#0 Relu_1_relu352_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu353_U0_ap_ready = 1'b0;
#0 Relu_1_relu353_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu354_U0_ap_ready = 1'b0;
#0 Relu_1_relu354_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu355_U0_ap_ready = 1'b0;
#0 Relu_1_relu355_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu356_U0_ap_ready = 1'b0;
#0 Relu_1_relu356_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu357_U0_ap_ready = 1'b0;
#0 Relu_1_relu357_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu358_U0_ap_ready = 1'b0;
#0 Relu_1_relu358_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Relu_1_relu359_U0_ap_ready = 1'b0;
#0 Relu_1_relu359_U0_ap_ready_count = 2'd0;
end

Relu_1_relu344 Relu_1_relu344_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu344_U0_ap_start),
    .ap_done(Relu_1_relu344_U0_ap_done),
    .ap_continue(Relu_1_relu344_U0_ap_continue),
    .ap_idle(Relu_1_relu344_U0_ap_idle),
    .ap_ready(Relu_1_relu344_U0_ap_ready),
    .in_V_V_dout(in_0_V_V_dout),
    .in_V_V_empty_n(in_0_V_V_empty_n),
    .in_V_V_read(Relu_1_relu344_U0_in_V_V_read),
    .out_V_V_din(Relu_1_relu344_U0_out_V_V_din),
    .out_V_V_full_n(out_0_V_V_full_n),
    .out_V_V_write(Relu_1_relu344_U0_out_V_V_write)
);

Relu_1_relu345 Relu_1_relu345_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu345_U0_ap_start),
    .ap_done(Relu_1_relu345_U0_ap_done),
    .ap_continue(Relu_1_relu345_U0_ap_continue),
    .ap_idle(Relu_1_relu345_U0_ap_idle),
    .ap_ready(Relu_1_relu345_U0_ap_ready),
    .in_V_V1_dout(in_1_V_V_dout),
    .in_V_V1_empty_n(in_1_V_V_empty_n),
    .in_V_V1_read(Relu_1_relu345_U0_in_V_V1_read),
    .out_V_V16_din(Relu_1_relu345_U0_out_V_V16_din),
    .out_V_V16_full_n(out_1_V_V_full_n),
    .out_V_V16_write(Relu_1_relu345_U0_out_V_V16_write)
);

Relu_1_relu346 Relu_1_relu346_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu346_U0_ap_start),
    .ap_done(Relu_1_relu346_U0_ap_done),
    .ap_continue(Relu_1_relu346_U0_ap_continue),
    .ap_idle(Relu_1_relu346_U0_ap_idle),
    .ap_ready(Relu_1_relu346_U0_ap_ready),
    .in_V_V2_dout(in_2_V_V_dout),
    .in_V_V2_empty_n(in_2_V_V_empty_n),
    .in_V_V2_read(Relu_1_relu346_U0_in_V_V2_read),
    .out_V_V17_din(Relu_1_relu346_U0_out_V_V17_din),
    .out_V_V17_full_n(out_2_V_V_full_n),
    .out_V_V17_write(Relu_1_relu346_U0_out_V_V17_write)
);

Relu_1_relu347 Relu_1_relu347_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu347_U0_ap_start),
    .ap_done(Relu_1_relu347_U0_ap_done),
    .ap_continue(Relu_1_relu347_U0_ap_continue),
    .ap_idle(Relu_1_relu347_U0_ap_idle),
    .ap_ready(Relu_1_relu347_U0_ap_ready),
    .in_V_V3_dout(in_3_V_V_dout),
    .in_V_V3_empty_n(in_3_V_V_empty_n),
    .in_V_V3_read(Relu_1_relu347_U0_in_V_V3_read),
    .out_V_V18_din(Relu_1_relu347_U0_out_V_V18_din),
    .out_V_V18_full_n(out_3_V_V_full_n),
    .out_V_V18_write(Relu_1_relu347_U0_out_V_V18_write)
);

Relu_1_relu348 Relu_1_relu348_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu348_U0_ap_start),
    .ap_done(Relu_1_relu348_U0_ap_done),
    .ap_continue(Relu_1_relu348_U0_ap_continue),
    .ap_idle(Relu_1_relu348_U0_ap_idle),
    .ap_ready(Relu_1_relu348_U0_ap_ready),
    .in_V_V4_dout(in_4_V_V_dout),
    .in_V_V4_empty_n(in_4_V_V_empty_n),
    .in_V_V4_read(Relu_1_relu348_U0_in_V_V4_read),
    .out_V_V19_din(Relu_1_relu348_U0_out_V_V19_din),
    .out_V_V19_full_n(out_4_V_V_full_n),
    .out_V_V19_write(Relu_1_relu348_U0_out_V_V19_write)
);

Relu_1_relu349 Relu_1_relu349_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu349_U0_ap_start),
    .ap_done(Relu_1_relu349_U0_ap_done),
    .ap_continue(Relu_1_relu349_U0_ap_continue),
    .ap_idle(Relu_1_relu349_U0_ap_idle),
    .ap_ready(Relu_1_relu349_U0_ap_ready),
    .in_V_V5_dout(in_5_V_V_dout),
    .in_V_V5_empty_n(in_5_V_V_empty_n),
    .in_V_V5_read(Relu_1_relu349_U0_in_V_V5_read),
    .out_V_V20_din(Relu_1_relu349_U0_out_V_V20_din),
    .out_V_V20_full_n(out_5_V_V_full_n),
    .out_V_V20_write(Relu_1_relu349_U0_out_V_V20_write)
);

Relu_1_relu350 Relu_1_relu350_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu350_U0_ap_start),
    .ap_done(Relu_1_relu350_U0_ap_done),
    .ap_continue(Relu_1_relu350_U0_ap_continue),
    .ap_idle(Relu_1_relu350_U0_ap_idle),
    .ap_ready(Relu_1_relu350_U0_ap_ready),
    .in_V_V6_dout(in_6_V_V_dout),
    .in_V_V6_empty_n(in_6_V_V_empty_n),
    .in_V_V6_read(Relu_1_relu350_U0_in_V_V6_read),
    .out_V_V21_din(Relu_1_relu350_U0_out_V_V21_din),
    .out_V_V21_full_n(out_6_V_V_full_n),
    .out_V_V21_write(Relu_1_relu350_U0_out_V_V21_write)
);

Relu_1_relu351 Relu_1_relu351_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu351_U0_ap_start),
    .ap_done(Relu_1_relu351_U0_ap_done),
    .ap_continue(Relu_1_relu351_U0_ap_continue),
    .ap_idle(Relu_1_relu351_U0_ap_idle),
    .ap_ready(Relu_1_relu351_U0_ap_ready),
    .in_V_V7_dout(in_7_V_V_dout),
    .in_V_V7_empty_n(in_7_V_V_empty_n),
    .in_V_V7_read(Relu_1_relu351_U0_in_V_V7_read),
    .out_V_V22_din(Relu_1_relu351_U0_out_V_V22_din),
    .out_V_V22_full_n(out_7_V_V_full_n),
    .out_V_V22_write(Relu_1_relu351_U0_out_V_V22_write)
);

Relu_1_relu352 Relu_1_relu352_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu352_U0_ap_start),
    .ap_done(Relu_1_relu352_U0_ap_done),
    .ap_continue(Relu_1_relu352_U0_ap_continue),
    .ap_idle(Relu_1_relu352_U0_ap_idle),
    .ap_ready(Relu_1_relu352_U0_ap_ready),
    .in_V_V8_dout(in_8_V_V_dout),
    .in_V_V8_empty_n(in_8_V_V_empty_n),
    .in_V_V8_read(Relu_1_relu352_U0_in_V_V8_read),
    .out_V_V23_din(Relu_1_relu352_U0_out_V_V23_din),
    .out_V_V23_full_n(out_8_V_V_full_n),
    .out_V_V23_write(Relu_1_relu352_U0_out_V_V23_write)
);

Relu_1_relu353 Relu_1_relu353_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu353_U0_ap_start),
    .ap_done(Relu_1_relu353_U0_ap_done),
    .ap_continue(Relu_1_relu353_U0_ap_continue),
    .ap_idle(Relu_1_relu353_U0_ap_idle),
    .ap_ready(Relu_1_relu353_U0_ap_ready),
    .in_V_V9_dout(in_9_V_V_dout),
    .in_V_V9_empty_n(in_9_V_V_empty_n),
    .in_V_V9_read(Relu_1_relu353_U0_in_V_V9_read),
    .out_V_V24_din(Relu_1_relu353_U0_out_V_V24_din),
    .out_V_V24_full_n(out_9_V_V_full_n),
    .out_V_V24_write(Relu_1_relu353_U0_out_V_V24_write)
);

Relu_1_relu354 Relu_1_relu354_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu354_U0_ap_start),
    .ap_done(Relu_1_relu354_U0_ap_done),
    .ap_continue(Relu_1_relu354_U0_ap_continue),
    .ap_idle(Relu_1_relu354_U0_ap_idle),
    .ap_ready(Relu_1_relu354_U0_ap_ready),
    .in_V_V10_dout(in_10_V_V_dout),
    .in_V_V10_empty_n(in_10_V_V_empty_n),
    .in_V_V10_read(Relu_1_relu354_U0_in_V_V10_read),
    .out_V_V25_din(Relu_1_relu354_U0_out_V_V25_din),
    .out_V_V25_full_n(out_10_V_V_full_n),
    .out_V_V25_write(Relu_1_relu354_U0_out_V_V25_write)
);

Relu_1_relu355 Relu_1_relu355_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu355_U0_ap_start),
    .ap_done(Relu_1_relu355_U0_ap_done),
    .ap_continue(Relu_1_relu355_U0_ap_continue),
    .ap_idle(Relu_1_relu355_U0_ap_idle),
    .ap_ready(Relu_1_relu355_U0_ap_ready),
    .in_V_V11_dout(in_11_V_V_dout),
    .in_V_V11_empty_n(in_11_V_V_empty_n),
    .in_V_V11_read(Relu_1_relu355_U0_in_V_V11_read),
    .out_V_V26_din(Relu_1_relu355_U0_out_V_V26_din),
    .out_V_V26_full_n(out_11_V_V_full_n),
    .out_V_V26_write(Relu_1_relu355_U0_out_V_V26_write)
);

Relu_1_relu356 Relu_1_relu356_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu356_U0_ap_start),
    .ap_done(Relu_1_relu356_U0_ap_done),
    .ap_continue(Relu_1_relu356_U0_ap_continue),
    .ap_idle(Relu_1_relu356_U0_ap_idle),
    .ap_ready(Relu_1_relu356_U0_ap_ready),
    .in_V_V12_dout(in_12_V_V_dout),
    .in_V_V12_empty_n(in_12_V_V_empty_n),
    .in_V_V12_read(Relu_1_relu356_U0_in_V_V12_read),
    .out_V_V27_din(Relu_1_relu356_U0_out_V_V27_din),
    .out_V_V27_full_n(out_12_V_V_full_n),
    .out_V_V27_write(Relu_1_relu356_U0_out_V_V27_write)
);

Relu_1_relu357 Relu_1_relu357_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu357_U0_ap_start),
    .ap_done(Relu_1_relu357_U0_ap_done),
    .ap_continue(Relu_1_relu357_U0_ap_continue),
    .ap_idle(Relu_1_relu357_U0_ap_idle),
    .ap_ready(Relu_1_relu357_U0_ap_ready),
    .in_V_V13_dout(in_13_V_V_dout),
    .in_V_V13_empty_n(in_13_V_V_empty_n),
    .in_V_V13_read(Relu_1_relu357_U0_in_V_V13_read),
    .out_V_V28_din(Relu_1_relu357_U0_out_V_V28_din),
    .out_V_V28_full_n(out_13_V_V_full_n),
    .out_V_V28_write(Relu_1_relu357_U0_out_V_V28_write)
);

Relu_1_relu358 Relu_1_relu358_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu358_U0_ap_start),
    .ap_done(Relu_1_relu358_U0_ap_done),
    .ap_continue(Relu_1_relu358_U0_ap_continue),
    .ap_idle(Relu_1_relu358_U0_ap_idle),
    .ap_ready(Relu_1_relu358_U0_ap_ready),
    .in_V_V14_dout(in_14_V_V_dout),
    .in_V_V14_empty_n(in_14_V_V_empty_n),
    .in_V_V14_read(Relu_1_relu358_U0_in_V_V14_read),
    .out_V_V29_din(Relu_1_relu358_U0_out_V_V29_din),
    .out_V_V29_full_n(out_14_V_V_full_n),
    .out_V_V29_write(Relu_1_relu358_U0_out_V_V29_write)
);

Relu_1_relu359 Relu_1_relu359_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Relu_1_relu359_U0_ap_start),
    .ap_done(Relu_1_relu359_U0_ap_done),
    .ap_continue(Relu_1_relu359_U0_ap_continue),
    .ap_idle(Relu_1_relu359_U0_ap_idle),
    .ap_ready(Relu_1_relu359_U0_ap_ready),
    .in_V_V15_dout(in_15_V_V_dout),
    .in_V_V15_empty_n(in_15_V_V_empty_n),
    .in_V_V15_read(Relu_1_relu359_U0_in_V_V15_read),
    .out_V_V30_din(Relu_1_relu359_U0_out_V_V30_din),
    .out_V_V30_full_n(out_15_V_V_full_n),
    .out_V_V30_write(Relu_1_relu359_U0_out_V_V30_write)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu344_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu344_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu344_U0_ap_ready <= ap_sync_Relu_1_relu344_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu345_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu345_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu345_U0_ap_ready <= ap_sync_Relu_1_relu345_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu346_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu346_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu346_U0_ap_ready <= ap_sync_Relu_1_relu346_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu347_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu347_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu347_U0_ap_ready <= ap_sync_Relu_1_relu347_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu348_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu348_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu348_U0_ap_ready <= ap_sync_Relu_1_relu348_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu349_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu349_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu349_U0_ap_ready <= ap_sync_Relu_1_relu349_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu350_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu350_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu350_U0_ap_ready <= ap_sync_Relu_1_relu350_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu351_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu351_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu351_U0_ap_ready <= ap_sync_Relu_1_relu351_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu352_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu352_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu352_U0_ap_ready <= ap_sync_Relu_1_relu352_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu353_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu353_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu353_U0_ap_ready <= ap_sync_Relu_1_relu353_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu354_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu354_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu354_U0_ap_ready <= ap_sync_Relu_1_relu354_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu355_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu355_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu355_U0_ap_ready <= ap_sync_Relu_1_relu355_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu356_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu356_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu356_U0_ap_ready <= ap_sync_Relu_1_relu356_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu357_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu357_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu357_U0_ap_ready <= ap_sync_Relu_1_relu357_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu358_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu358_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu358_U0_ap_ready <= ap_sync_Relu_1_relu358_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_Relu_1_relu359_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_Relu_1_relu359_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Relu_1_relu359_U0_ap_ready <= ap_sync_Relu_1_relu359_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu344_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu344_U0_ap_ready_count <= (Relu_1_relu344_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu344_U0_ap_ready))) begin
        Relu_1_relu344_U0_ap_ready_count <= (Relu_1_relu344_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu345_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu345_U0_ap_ready_count <= (Relu_1_relu345_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu345_U0_ap_ready))) begin
        Relu_1_relu345_U0_ap_ready_count <= (Relu_1_relu345_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu346_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu346_U0_ap_ready_count <= (Relu_1_relu346_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu346_U0_ap_ready))) begin
        Relu_1_relu346_U0_ap_ready_count <= (Relu_1_relu346_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu347_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu347_U0_ap_ready_count <= (Relu_1_relu347_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu347_U0_ap_ready))) begin
        Relu_1_relu347_U0_ap_ready_count <= (Relu_1_relu347_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu348_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu348_U0_ap_ready_count <= (Relu_1_relu348_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu348_U0_ap_ready))) begin
        Relu_1_relu348_U0_ap_ready_count <= (Relu_1_relu348_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu349_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu349_U0_ap_ready_count <= (Relu_1_relu349_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu349_U0_ap_ready))) begin
        Relu_1_relu349_U0_ap_ready_count <= (Relu_1_relu349_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu350_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu350_U0_ap_ready_count <= (Relu_1_relu350_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu350_U0_ap_ready))) begin
        Relu_1_relu350_U0_ap_ready_count <= (Relu_1_relu350_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu351_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu351_U0_ap_ready_count <= (Relu_1_relu351_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu351_U0_ap_ready))) begin
        Relu_1_relu351_U0_ap_ready_count <= (Relu_1_relu351_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu352_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu352_U0_ap_ready_count <= (Relu_1_relu352_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu352_U0_ap_ready))) begin
        Relu_1_relu352_U0_ap_ready_count <= (Relu_1_relu352_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu353_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu353_U0_ap_ready_count <= (Relu_1_relu353_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu353_U0_ap_ready))) begin
        Relu_1_relu353_U0_ap_ready_count <= (Relu_1_relu353_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu354_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu354_U0_ap_ready_count <= (Relu_1_relu354_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu354_U0_ap_ready))) begin
        Relu_1_relu354_U0_ap_ready_count <= (Relu_1_relu354_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu355_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu355_U0_ap_ready_count <= (Relu_1_relu355_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu355_U0_ap_ready))) begin
        Relu_1_relu355_U0_ap_ready_count <= (Relu_1_relu355_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu356_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu356_U0_ap_ready_count <= (Relu_1_relu356_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu356_U0_ap_ready))) begin
        Relu_1_relu356_U0_ap_ready_count <= (Relu_1_relu356_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu357_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu357_U0_ap_ready_count <= (Relu_1_relu357_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu357_U0_ap_ready))) begin
        Relu_1_relu357_U0_ap_ready_count <= (Relu_1_relu357_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu358_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu358_U0_ap_ready_count <= (Relu_1_relu358_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu358_U0_ap_ready))) begin
        Relu_1_relu358_U0_ap_ready_count <= (Relu_1_relu358_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Relu_1_relu359_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Relu_1_relu359_U0_ap_ready_count <= (Relu_1_relu359_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Relu_1_relu359_U0_ap_ready))) begin
        Relu_1_relu359_U0_ap_ready_count <= (Relu_1_relu359_U0_ap_ready_count + 2'd1);
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign Relu_1_relu344_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu344_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu344_U0_ap_ready ^ 1'b1));

assign Relu_1_relu344_U0_start_full_n = 1'b1;

assign Relu_1_relu344_U0_start_write = 1'b0;

assign Relu_1_relu345_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu345_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu345_U0_ap_ready ^ 1'b1));

assign Relu_1_relu345_U0_start_full_n = 1'b1;

assign Relu_1_relu345_U0_start_write = 1'b0;

assign Relu_1_relu346_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu346_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu346_U0_ap_ready ^ 1'b1));

assign Relu_1_relu346_U0_start_full_n = 1'b1;

assign Relu_1_relu346_U0_start_write = 1'b0;

assign Relu_1_relu347_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu347_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu347_U0_ap_ready ^ 1'b1));

assign Relu_1_relu347_U0_start_full_n = 1'b1;

assign Relu_1_relu347_U0_start_write = 1'b0;

assign Relu_1_relu348_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu348_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu348_U0_ap_ready ^ 1'b1));

assign Relu_1_relu348_U0_start_full_n = 1'b1;

assign Relu_1_relu348_U0_start_write = 1'b0;

assign Relu_1_relu349_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu349_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu349_U0_ap_ready ^ 1'b1));

assign Relu_1_relu349_U0_start_full_n = 1'b1;

assign Relu_1_relu349_U0_start_write = 1'b0;

assign Relu_1_relu350_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu350_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu350_U0_ap_ready ^ 1'b1));

assign Relu_1_relu350_U0_start_full_n = 1'b1;

assign Relu_1_relu350_U0_start_write = 1'b0;

assign Relu_1_relu351_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu351_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu351_U0_ap_ready ^ 1'b1));

assign Relu_1_relu351_U0_start_full_n = 1'b1;

assign Relu_1_relu351_U0_start_write = 1'b0;

assign Relu_1_relu352_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu352_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu352_U0_ap_ready ^ 1'b1));

assign Relu_1_relu352_U0_start_full_n = 1'b1;

assign Relu_1_relu352_U0_start_write = 1'b0;

assign Relu_1_relu353_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu353_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu353_U0_ap_ready ^ 1'b1));

assign Relu_1_relu353_U0_start_full_n = 1'b1;

assign Relu_1_relu353_U0_start_write = 1'b0;

assign Relu_1_relu354_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu354_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu354_U0_ap_ready ^ 1'b1));

assign Relu_1_relu354_U0_start_full_n = 1'b1;

assign Relu_1_relu354_U0_start_write = 1'b0;

assign Relu_1_relu355_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu355_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu355_U0_ap_ready ^ 1'b1));

assign Relu_1_relu355_U0_start_full_n = 1'b1;

assign Relu_1_relu355_U0_start_write = 1'b0;

assign Relu_1_relu356_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu356_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu356_U0_ap_ready ^ 1'b1));

assign Relu_1_relu356_U0_start_full_n = 1'b1;

assign Relu_1_relu356_U0_start_write = 1'b0;

assign Relu_1_relu357_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu357_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu357_U0_ap_ready ^ 1'b1));

assign Relu_1_relu357_U0_start_full_n = 1'b1;

assign Relu_1_relu357_U0_start_write = 1'b0;

assign Relu_1_relu358_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu358_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu358_U0_ap_ready ^ 1'b1));

assign Relu_1_relu358_U0_start_full_n = 1'b1;

assign Relu_1_relu358_U0_start_write = 1'b0;

assign Relu_1_relu359_U0_ap_continue = ap_sync_continue;

assign Relu_1_relu359_U0_ap_start = (real_start & (ap_sync_reg_Relu_1_relu359_U0_ap_ready ^ 1'b1));

assign Relu_1_relu359_U0_start_full_n = 1'b1;

assign Relu_1_relu359_U0_start_write = 1'b0;

assign ap_done = ap_sync_done;

assign ap_idle = (Relu_1_relu359_U0_ap_idle & Relu_1_relu358_U0_ap_idle & Relu_1_relu357_U0_ap_idle & Relu_1_relu356_U0_ap_idle & Relu_1_relu355_U0_ap_idle & Relu_1_relu354_U0_ap_idle & Relu_1_relu353_U0_ap_idle & Relu_1_relu352_U0_ap_idle & Relu_1_relu351_U0_ap_idle & Relu_1_relu350_U0_ap_idle & Relu_1_relu349_U0_ap_idle & Relu_1_relu348_U0_ap_idle & Relu_1_relu347_U0_ap_idle & Relu_1_relu346_U0_ap_idle & Relu_1_relu345_U0_ap_idle & Relu_1_relu344_U0_ap_idle);

assign ap_ready = internal_ap_ready;

assign ap_sync_Relu_1_relu344_U0_ap_ready = (ap_sync_reg_Relu_1_relu344_U0_ap_ready | Relu_1_relu344_U0_ap_ready);

assign ap_sync_Relu_1_relu345_U0_ap_ready = (ap_sync_reg_Relu_1_relu345_U0_ap_ready | Relu_1_relu345_U0_ap_ready);

assign ap_sync_Relu_1_relu346_U0_ap_ready = (ap_sync_reg_Relu_1_relu346_U0_ap_ready | Relu_1_relu346_U0_ap_ready);

assign ap_sync_Relu_1_relu347_U0_ap_ready = (ap_sync_reg_Relu_1_relu347_U0_ap_ready | Relu_1_relu347_U0_ap_ready);

assign ap_sync_Relu_1_relu348_U0_ap_ready = (ap_sync_reg_Relu_1_relu348_U0_ap_ready | Relu_1_relu348_U0_ap_ready);

assign ap_sync_Relu_1_relu349_U0_ap_ready = (ap_sync_reg_Relu_1_relu349_U0_ap_ready | Relu_1_relu349_U0_ap_ready);

assign ap_sync_Relu_1_relu350_U0_ap_ready = (ap_sync_reg_Relu_1_relu350_U0_ap_ready | Relu_1_relu350_U0_ap_ready);

assign ap_sync_Relu_1_relu351_U0_ap_ready = (ap_sync_reg_Relu_1_relu351_U0_ap_ready | Relu_1_relu351_U0_ap_ready);

assign ap_sync_Relu_1_relu352_U0_ap_ready = (ap_sync_reg_Relu_1_relu352_U0_ap_ready | Relu_1_relu352_U0_ap_ready);

assign ap_sync_Relu_1_relu353_U0_ap_ready = (ap_sync_reg_Relu_1_relu353_U0_ap_ready | Relu_1_relu353_U0_ap_ready);

assign ap_sync_Relu_1_relu354_U0_ap_ready = (ap_sync_reg_Relu_1_relu354_U0_ap_ready | Relu_1_relu354_U0_ap_ready);

assign ap_sync_Relu_1_relu355_U0_ap_ready = (ap_sync_reg_Relu_1_relu355_U0_ap_ready | Relu_1_relu355_U0_ap_ready);

assign ap_sync_Relu_1_relu356_U0_ap_ready = (ap_sync_reg_Relu_1_relu356_U0_ap_ready | Relu_1_relu356_U0_ap_ready);

assign ap_sync_Relu_1_relu357_U0_ap_ready = (ap_sync_reg_Relu_1_relu357_U0_ap_ready | Relu_1_relu357_U0_ap_ready);

assign ap_sync_Relu_1_relu358_U0_ap_ready = (ap_sync_reg_Relu_1_relu358_U0_ap_ready | Relu_1_relu358_U0_ap_ready);

assign ap_sync_Relu_1_relu359_U0_ap_ready = (ap_sync_reg_Relu_1_relu359_U0_ap_ready | Relu_1_relu359_U0_ap_ready);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (Relu_1_relu359_U0_ap_done & Relu_1_relu358_U0_ap_done & Relu_1_relu357_U0_ap_done & Relu_1_relu356_U0_ap_done & Relu_1_relu355_U0_ap_done & Relu_1_relu354_U0_ap_done & Relu_1_relu353_U0_ap_done & Relu_1_relu352_U0_ap_done & Relu_1_relu351_U0_ap_done & Relu_1_relu350_U0_ap_done & Relu_1_relu349_U0_ap_done & Relu_1_relu348_U0_ap_done & Relu_1_relu347_U0_ap_done & Relu_1_relu346_U0_ap_done & Relu_1_relu345_U0_ap_done & Relu_1_relu344_U0_ap_done);

assign ap_sync_ready = (ap_sync_Relu_1_relu359_U0_ap_ready & ap_sync_Relu_1_relu358_U0_ap_ready & ap_sync_Relu_1_relu357_U0_ap_ready & ap_sync_Relu_1_relu356_U0_ap_ready & ap_sync_Relu_1_relu355_U0_ap_ready & ap_sync_Relu_1_relu354_U0_ap_ready & ap_sync_Relu_1_relu353_U0_ap_ready & ap_sync_Relu_1_relu352_U0_ap_ready & ap_sync_Relu_1_relu351_U0_ap_ready & ap_sync_Relu_1_relu350_U0_ap_ready & ap_sync_Relu_1_relu349_U0_ap_ready & ap_sync_Relu_1_relu348_U0_ap_ready & ap_sync_Relu_1_relu347_U0_ap_ready & ap_sync_Relu_1_relu346_U0_ap_ready & ap_sync_Relu_1_relu345_U0_ap_ready & ap_sync_Relu_1_relu344_U0_ap_ready);

assign in_0_V_V_read = Relu_1_relu344_U0_in_V_V_read;

assign in_10_V_V_read = Relu_1_relu354_U0_in_V_V10_read;

assign in_11_V_V_read = Relu_1_relu355_U0_in_V_V11_read;

assign in_12_V_V_read = Relu_1_relu356_U0_in_V_V12_read;

assign in_13_V_V_read = Relu_1_relu357_U0_in_V_V13_read;

assign in_14_V_V_read = Relu_1_relu358_U0_in_V_V14_read;

assign in_15_V_V_read = Relu_1_relu359_U0_in_V_V15_read;

assign in_1_V_V_read = Relu_1_relu345_U0_in_V_V1_read;

assign in_2_V_V_read = Relu_1_relu346_U0_in_V_V2_read;

assign in_3_V_V_read = Relu_1_relu347_U0_in_V_V3_read;

assign in_4_V_V_read = Relu_1_relu348_U0_in_V_V4_read;

assign in_5_V_V_read = Relu_1_relu349_U0_in_V_V5_read;

assign in_6_V_V_read = Relu_1_relu350_U0_in_V_V6_read;

assign in_7_V_V_read = Relu_1_relu351_U0_in_V_V7_read;

assign in_8_V_V_read = Relu_1_relu352_U0_in_V_V8_read;

assign in_9_V_V_read = Relu_1_relu353_U0_in_V_V9_read;

assign internal_ap_ready = ap_sync_ready;

assign out_0_V_V_din = Relu_1_relu344_U0_out_V_V_din;

assign out_0_V_V_write = Relu_1_relu344_U0_out_V_V_write;

assign out_10_V_V_din = Relu_1_relu354_U0_out_V_V25_din;

assign out_10_V_V_write = Relu_1_relu354_U0_out_V_V25_write;

assign out_11_V_V_din = Relu_1_relu355_U0_out_V_V26_din;

assign out_11_V_V_write = Relu_1_relu355_U0_out_V_V26_write;

assign out_12_V_V_din = Relu_1_relu356_U0_out_V_V27_din;

assign out_12_V_V_write = Relu_1_relu356_U0_out_V_V27_write;

assign out_13_V_V_din = Relu_1_relu357_U0_out_V_V28_din;

assign out_13_V_V_write = Relu_1_relu357_U0_out_V_V28_write;

assign out_14_V_V_din = Relu_1_relu358_U0_out_V_V29_din;

assign out_14_V_V_write = Relu_1_relu358_U0_out_V_V29_write;

assign out_15_V_V_din = Relu_1_relu359_U0_out_V_V30_din;

assign out_15_V_V_write = Relu_1_relu359_U0_out_V_V30_write;

assign out_1_V_V_din = Relu_1_relu345_U0_out_V_V16_din;

assign out_1_V_V_write = Relu_1_relu345_U0_out_V_V16_write;

assign out_2_V_V_din = Relu_1_relu346_U0_out_V_V17_din;

assign out_2_V_V_write = Relu_1_relu346_U0_out_V_V17_write;

assign out_3_V_V_din = Relu_1_relu347_U0_out_V_V18_din;

assign out_3_V_V_write = Relu_1_relu347_U0_out_V_V18_write;

assign out_4_V_V_din = Relu_1_relu348_U0_out_V_V19_din;

assign out_4_V_V_write = Relu_1_relu348_U0_out_V_V19_write;

assign out_5_V_V_din = Relu_1_relu349_U0_out_V_V20_din;

assign out_5_V_V_write = Relu_1_relu349_U0_out_V_V20_write;

assign out_6_V_V_din = Relu_1_relu350_U0_out_V_V21_din;

assign out_6_V_V_write = Relu_1_relu350_U0_out_V_V21_write;

assign out_7_V_V_din = Relu_1_relu351_U0_out_V_V22_din;

assign out_7_V_V_write = Relu_1_relu351_U0_out_V_V22_write;

assign out_8_V_V_din = Relu_1_relu352_U0_out_V_V23_din;

assign out_8_V_V_write = Relu_1_relu352_U0_out_V_V23_write;

assign out_9_V_V_din = Relu_1_relu353_U0_out_V_V24_din;

assign out_9_V_V_write = Relu_1_relu353_U0_out_V_V24_write;

assign start_out = real_start;

endmodule //Relu_1
