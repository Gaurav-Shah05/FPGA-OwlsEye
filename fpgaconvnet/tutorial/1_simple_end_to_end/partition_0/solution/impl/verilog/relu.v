// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module relu (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [15:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg[15:0] out_V_V_din;
reg out_V_V_write;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln49_fu_161_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
reg   [0:0] icmp_ln885_reg_494;
reg   [0:0] icmp_ln885_reg_494_pp0_iter12_reg;
reg   [0:0] and_ln924_reg_640;
reg    ap_predicate_op30_write_state3;
reg    ap_predicate_op32_write_state3;
reg    ap_block_state3_pp0_stage0_iter13;
reg    ap_enable_reg_pp0_iter13;
reg    ap_block_pp0_stage0_11001;
reg    in_V_V_blk_n;
wire    ap_block_pp0_stage0;
reg    out_V_V_blk_n;
reg   [9:0] pixel_index_01_reg_136;
reg   [15:0] tmp_V_132_reg_476;
reg   [15:0] tmp_V_132_reg_476_pp0_iter1_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter2_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter3_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter4_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter5_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter6_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter7_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter8_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter9_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter10_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter11_reg;
reg   [15:0] tmp_V_132_reg_476_pp0_iter12_reg;
wire   [9:0] pixel_index_fu_155_p2;
reg   [9:0] pixel_index_reg_485;
reg   [0:0] icmp_ln49_reg_490;
reg   [0:0] icmp_ln49_reg_490_pp0_iter1_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter2_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter3_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter4_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter5_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter6_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter7_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter8_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter9_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter10_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter11_reg;
reg   [0:0] icmp_ln49_reg_490_pp0_iter12_reg;
wire   [0:0] icmp_ln885_fu_169_p2;
reg   [0:0] icmp_ln885_reg_494_pp0_iter2_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter3_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter4_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter5_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter6_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter7_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter8_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter9_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter10_reg;
reg   [0:0] icmp_ln885_reg_494_pp0_iter11_reg;
wire   [15:0] tmp_V_fu_174_p2;
reg   [15:0] tmp_V_reg_498;
wire   [0:0] p_Result_6_fu_179_p3;
reg   [0:0] p_Result_6_reg_503;
reg   [0:0] p_Result_6_reg_503_pp0_iter3_reg;
reg   [0:0] p_Result_6_reg_503_pp0_iter4_reg;
reg   [0:0] p_Result_6_reg_503_pp0_iter5_reg;
reg   [0:0] p_Result_6_reg_503_pp0_iter6_reg;
reg   [0:0] p_Result_6_reg_503_pp0_iter7_reg;
reg   [0:0] p_Result_6_reg_503_pp0_iter8_reg;
wire   [15:0] tmp_V_133_fu_186_p3;
reg   [15:0] tmp_V_133_reg_508;
reg   [15:0] tmp_V_133_reg_508_pp0_iter3_reg;
reg   [15:0] tmp_V_133_reg_508_pp0_iter4_reg;
reg   [31:0] l_fu_210_p3;
reg   [31:0] l_reg_516;
wire   [10:0] trunc_ln893_fu_218_p1;
reg   [10:0] trunc_ln893_reg_521;
reg   [10:0] trunc_ln893_reg_521_pp0_iter3_reg;
reg   [10:0] trunc_ln893_reg_521_pp0_iter4_reg;
reg   [10:0] trunc_ln893_reg_521_pp0_iter5_reg;
reg   [10:0] trunc_ln893_reg_521_pp0_iter6_reg;
reg   [10:0] trunc_ln893_reg_521_pp0_iter7_reg;
wire   [31:0] sub_ln894_fu_222_p2;
reg   [31:0] sub_ln894_reg_526;
wire   [15:0] trunc_ln894_fu_227_p1;
reg   [15:0] trunc_ln894_reg_533;
reg   [15:0] trunc_ln894_reg_533_pp0_iter4_reg;
wire   [4:0] sub_ln897_fu_235_p2;
reg   [4:0] sub_ln897_reg_538;
wire   [31:0] lsb_index_fu_241_p2;
reg   [31:0] lsb_index_reg_543;
reg   [30:0] tmp_10_reg_549;
wire   [0:0] icmp_ln897_1_fu_270_p2;
reg   [0:0] icmp_ln897_1_reg_554;
wire   [31:0] add_ln908_fu_276_p2;
reg   [31:0] add_ln908_reg_559;
wire   [31:0] sub_ln908_fu_281_p2;
reg   [31:0] sub_ln908_reg_564;
wire   [31:0] or_ln_fu_333_p3;
reg   [31:0] or_ln_reg_569;
reg   [31:0] or_ln_reg_569_pp0_iter6_reg;
wire   [0:0] icmp_ln908_fu_347_p2;
reg   [0:0] icmp_ln908_reg_584;
reg   [0:0] icmp_ln908_reg_584_pp0_iter6_reg;
wire   [31:0] grp_fu_352_p2;
reg   [31:0] lshr_ln908_reg_594;
wire   [63:0] grp_fu_360_p2;
reg   [63:0] shl_ln908_reg_599;
reg   [62:0] m_5_reg_604;
reg   [62:0] m_5_reg_604_pp0_iter8_reg;
wire   [10:0] select_ln915_fu_402_p3;
reg   [10:0] select_ln915_reg_609;
reg   [51:0] trunc_ln4_reg_614;
wire   [10:0] add_ln915_fu_425_p2;
reg   [10:0] add_ln915_reg_619;
wire   [0:0] icmp_ln924_1_fu_430_p2;
reg   [0:0] icmp_ln924_1_reg_625;
reg   [0:0] icmp_ln924_1_reg_625_pp0_iter9_reg;
reg   [0:0] icmp_ln924_1_reg_625_pp0_iter10_reg;
reg   [0:0] icmp_ln924_1_reg_625_pp0_iter11_reg;
wire   [0:0] icmp_ln924_fu_461_p2;
reg   [0:0] icmp_ln924_reg_635;
reg   [0:0] icmp_ln924_reg_635_pp0_iter10_reg;
reg   [0:0] icmp_ln924_reg_635_pp0_iter11_reg;
wire   [0:0] and_ln924_fu_470_p2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg   [9:0] ap_phi_mux_pixel_index_01_phi_fu_140_p6;
reg    ap_block_pp0_stage0_01001;
wire   [63:0] grp_fu_150_p0;
reg   [15:0] p_Result_s_fu_192_p4;
wire   [31:0] p_Result_7_fu_202_p3;
wire   [4:0] trunc_ln897_fu_231_p1;
wire   [15:0] zext_ln897_fu_256_p1;
wire   [15:0] lshr_ln897_fu_259_p2;
wire   [15:0] p_Result_4_fu_265_p2;
wire   [0:0] icmp_ln897_fu_286_p2;
wire   [0:0] tmp_11_fu_296_p3;
wire   [15:0] add_ln899_fu_309_p2;
wire   [0:0] p_Result_3_fu_314_p3;
wire   [0:0] xor_ln899_fu_303_p2;
wire   [0:0] and_ln899_fu_321_p2;
wire   [0:0] a_fu_291_p2;
wire   [0:0] or_ln899_fu_327_p2;
wire   [31:0] grp_fu_352_p0;
wire   [63:0] grp_fu_360_p0;
wire   [63:0] grp_fu_360_p1;
wire   [63:0] zext_ln908_fu_366_p1;
wire   [63:0] zext_ln911_fu_375_p1;
wire   [63:0] m_1_fu_369_p3;
wire   [63:0] m_2_fu_378_p2;
wire   [0:0] tmp_12_fu_394_p3;
wire   [10:0] sub_ln915_fu_420_p2;
wire   [63:0] m_6_fu_435_p1;
wire   [11:0] tmp_2_fu_438_p3;
wire   [63:0] p_Result_8_fu_444_p5;
wire   [0:0] or_ln924_fu_466_p2;
wire   [0:0] grp_fu_150_p2;
reg    grp_fu_150_ce;
reg    ap_block_pp0_stage0_00001;
reg    grp_fu_352_ce;
reg    grp_fu_360_ce;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to12;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_290;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

fpgaconvnet_ip_dcfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
fpgaconvnet_ip_dcfYi_U2548(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_150_p0),
    .din1(64'd0),
    .ce(grp_fu_150_ce),
    .opcode(5'd4),
    .dout(grp_fu_150_p2)
);

fpgaconvnet_ip_ls9j0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fpgaconvnet_ip_ls9j0_U2549(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_352_p0),
    .din1(add_ln908_reg_559),
    .ce(grp_fu_352_ce),
    .dout(grp_fu_352_p2)
);

fpgaconvnet_ip_shbak #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpgaconvnet_ip_shbak_U2550(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_360_p0),
    .din1(grp_fu_360_p1),
    .ce(grp_fu_360_ce),
    .dout(grp_fu_360_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_reg_490 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        pixel_index_01_reg_136 <= pixel_index_reg_485;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_reg_490 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        pixel_index_01_reg_136 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494_pp0_iter3_reg == 1'd0))) begin
        add_ln908_reg_559 <= add_ln908_fu_276_p2;
        icmp_ln897_1_reg_554 <= icmp_ln897_1_fu_270_p2;
        lsb_index_reg_543 <= lsb_index_fu_241_p2;
        sub_ln908_reg_564 <= sub_ln908_fu_281_p2;
        tmp_10_reg_549 <= {{lsb_index_fu_241_p2[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494_pp0_iter7_reg == 1'd0))) begin
        add_ln915_reg_619 <= add_ln915_fu_425_p2;
        icmp_ln924_1_reg_625 <= icmp_ln924_1_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494_pp0_iter11_reg == 1'd0))) begin
        and_ln924_reg_640 <= and_ln924_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln49_reg_490 <= icmp_ln49_fu_161_p2;
        icmp_ln49_reg_490_pp0_iter1_reg <= icmp_ln49_reg_490;
        icmp_ln885_reg_494 <= icmp_ln885_fu_169_p2;
        tmp_V_132_reg_476 <= in_V_V_dout;
        tmp_V_132_reg_476_pp0_iter1_reg <= tmp_V_132_reg_476;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln49_reg_490_pp0_iter10_reg <= icmp_ln49_reg_490_pp0_iter9_reg;
        icmp_ln49_reg_490_pp0_iter11_reg <= icmp_ln49_reg_490_pp0_iter10_reg;
        icmp_ln49_reg_490_pp0_iter12_reg <= icmp_ln49_reg_490_pp0_iter11_reg;
        icmp_ln49_reg_490_pp0_iter2_reg <= icmp_ln49_reg_490_pp0_iter1_reg;
        icmp_ln49_reg_490_pp0_iter3_reg <= icmp_ln49_reg_490_pp0_iter2_reg;
        icmp_ln49_reg_490_pp0_iter4_reg <= icmp_ln49_reg_490_pp0_iter3_reg;
        icmp_ln49_reg_490_pp0_iter5_reg <= icmp_ln49_reg_490_pp0_iter4_reg;
        icmp_ln49_reg_490_pp0_iter6_reg <= icmp_ln49_reg_490_pp0_iter5_reg;
        icmp_ln49_reg_490_pp0_iter7_reg <= icmp_ln49_reg_490_pp0_iter6_reg;
        icmp_ln49_reg_490_pp0_iter8_reg <= icmp_ln49_reg_490_pp0_iter7_reg;
        icmp_ln49_reg_490_pp0_iter9_reg <= icmp_ln49_reg_490_pp0_iter8_reg;
        icmp_ln885_reg_494_pp0_iter10_reg <= icmp_ln885_reg_494_pp0_iter9_reg;
        icmp_ln885_reg_494_pp0_iter11_reg <= icmp_ln885_reg_494_pp0_iter10_reg;
        icmp_ln885_reg_494_pp0_iter12_reg <= icmp_ln885_reg_494_pp0_iter11_reg;
        icmp_ln885_reg_494_pp0_iter2_reg <= icmp_ln885_reg_494;
        icmp_ln885_reg_494_pp0_iter3_reg <= icmp_ln885_reg_494_pp0_iter2_reg;
        icmp_ln885_reg_494_pp0_iter4_reg <= icmp_ln885_reg_494_pp0_iter3_reg;
        icmp_ln885_reg_494_pp0_iter5_reg <= icmp_ln885_reg_494_pp0_iter4_reg;
        icmp_ln885_reg_494_pp0_iter6_reg <= icmp_ln885_reg_494_pp0_iter5_reg;
        icmp_ln885_reg_494_pp0_iter7_reg <= icmp_ln885_reg_494_pp0_iter6_reg;
        icmp_ln885_reg_494_pp0_iter8_reg <= icmp_ln885_reg_494_pp0_iter7_reg;
        icmp_ln885_reg_494_pp0_iter9_reg <= icmp_ln885_reg_494_pp0_iter8_reg;
        icmp_ln908_reg_584_pp0_iter6_reg <= icmp_ln908_reg_584;
        icmp_ln924_1_reg_625_pp0_iter10_reg <= icmp_ln924_1_reg_625_pp0_iter9_reg;
        icmp_ln924_1_reg_625_pp0_iter11_reg <= icmp_ln924_1_reg_625_pp0_iter10_reg;
        icmp_ln924_1_reg_625_pp0_iter9_reg <= icmp_ln924_1_reg_625;
        icmp_ln924_reg_635_pp0_iter10_reg <= icmp_ln924_reg_635;
        icmp_ln924_reg_635_pp0_iter11_reg <= icmp_ln924_reg_635_pp0_iter10_reg;
        m_5_reg_604_pp0_iter8_reg <= m_5_reg_604;
        or_ln_reg_569_pp0_iter6_reg[0] <= or_ln_reg_569[0];
        p_Result_6_reg_503_pp0_iter3_reg <= p_Result_6_reg_503;
        p_Result_6_reg_503_pp0_iter4_reg <= p_Result_6_reg_503_pp0_iter3_reg;
        p_Result_6_reg_503_pp0_iter5_reg <= p_Result_6_reg_503_pp0_iter4_reg;
        p_Result_6_reg_503_pp0_iter6_reg <= p_Result_6_reg_503_pp0_iter5_reg;
        p_Result_6_reg_503_pp0_iter7_reg <= p_Result_6_reg_503_pp0_iter6_reg;
        p_Result_6_reg_503_pp0_iter8_reg <= p_Result_6_reg_503_pp0_iter7_reg;
        tmp_V_132_reg_476_pp0_iter10_reg <= tmp_V_132_reg_476_pp0_iter9_reg;
        tmp_V_132_reg_476_pp0_iter11_reg <= tmp_V_132_reg_476_pp0_iter10_reg;
        tmp_V_132_reg_476_pp0_iter12_reg <= tmp_V_132_reg_476_pp0_iter11_reg;
        tmp_V_132_reg_476_pp0_iter2_reg <= tmp_V_132_reg_476_pp0_iter1_reg;
        tmp_V_132_reg_476_pp0_iter3_reg <= tmp_V_132_reg_476_pp0_iter2_reg;
        tmp_V_132_reg_476_pp0_iter4_reg <= tmp_V_132_reg_476_pp0_iter3_reg;
        tmp_V_132_reg_476_pp0_iter5_reg <= tmp_V_132_reg_476_pp0_iter4_reg;
        tmp_V_132_reg_476_pp0_iter6_reg <= tmp_V_132_reg_476_pp0_iter5_reg;
        tmp_V_132_reg_476_pp0_iter7_reg <= tmp_V_132_reg_476_pp0_iter6_reg;
        tmp_V_132_reg_476_pp0_iter8_reg <= tmp_V_132_reg_476_pp0_iter7_reg;
        tmp_V_132_reg_476_pp0_iter9_reg <= tmp_V_132_reg_476_pp0_iter8_reg;
        tmp_V_133_reg_508_pp0_iter3_reg <= tmp_V_133_reg_508;
        tmp_V_133_reg_508_pp0_iter4_reg <= tmp_V_133_reg_508_pp0_iter3_reg;
        trunc_ln893_reg_521_pp0_iter3_reg <= trunc_ln893_reg_521;
        trunc_ln893_reg_521_pp0_iter4_reg <= trunc_ln893_reg_521_pp0_iter3_reg;
        trunc_ln893_reg_521_pp0_iter5_reg <= trunc_ln893_reg_521_pp0_iter4_reg;
        trunc_ln893_reg_521_pp0_iter6_reg <= trunc_ln893_reg_521_pp0_iter5_reg;
        trunc_ln893_reg_521_pp0_iter7_reg <= trunc_ln893_reg_521_pp0_iter6_reg;
        trunc_ln894_reg_533_pp0_iter4_reg <= trunc_ln894_reg_533;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494_pp0_iter4_reg == 1'd0))) begin
        icmp_ln908_reg_584 <= icmp_ln908_fu_347_p2;
        or_ln_reg_569[0] <= or_ln_fu_333_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494_pp0_iter8_reg == 1'd0))) begin
        icmp_ln924_reg_635 <= icmp_ln924_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494 == 1'd0))) begin
        l_reg_516 <= l_fu_210_p3;
        p_Result_6_reg_503 <= tmp_V_132_reg_476_pp0_iter1_reg[32'd15];
        tmp_V_133_reg_508 <= tmp_V_133_fu_186_p3;
        trunc_ln893_reg_521 <= trunc_ln893_fu_218_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494_pp0_iter5_reg == 1'd0))) begin
        lshr_ln908_reg_594 <= grp_fu_352_p2;
        shl_ln908_reg_599 <= grp_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494_pp0_iter6_reg == 1'd0))) begin
        m_5_reg_604 <= {{m_2_fu_378_p2[63:1]}};
        select_ln915_reg_609[0] <= select_ln915_fu_402_p3[0];
        trunc_ln4_reg_614 <= {{m_2_fu_378_p2[52:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pixel_index_reg_485 <= pixel_index_fu_155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_reg_494_pp0_iter2_reg == 1'd0))) begin
        sub_ln894_reg_526 <= sub_ln894_fu_222_p2;
        sub_ln897_reg_538 <= sub_ln897_fu_235_p2;
        trunc_ln894_reg_533 <= trunc_ln894_fu_227_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_fu_169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_V_reg_498 <= tmp_V_fu_174_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_reg_490_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_0to12 = 1'b1;
    end else begin
        ap_idle_pp0_0to12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_290)) begin
        if ((icmp_ln49_reg_490 == 1'd1)) begin
            ap_phi_mux_pixel_index_01_phi_fu_140_p6 = 10'd0;
        end else if ((icmp_ln49_reg_490 == 1'd0)) begin
            ap_phi_mux_pixel_index_01_phi_fu_140_p6 = pixel_index_reg_485;
        end else begin
            ap_phi_mux_pixel_index_01_phi_fu_140_p6 = pixel_index_01_reg_136;
        end
    end else begin
        ap_phi_mux_pixel_index_01_phi_fu_140_p6 = pixel_index_01_reg_136;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln49_fu_161_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to12 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_150_ce = 1'b1;
    end else begin
        grp_fu_150_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_352_ce = 1'b1;
    end else begin
        grp_fu_352_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_360_ce = 1'b1;
    end else begin
        grp_fu_360_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (ap_predicate_op32_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (ap_predicate_op30_write_state3 == 1'b1)))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        if ((ap_predicate_op32_write_state3 == 1'b1)) begin
            out_V_V_din = tmp_V_132_reg_476_pp0_iter12_reg;
        end else if ((ap_predicate_op30_write_state3 == 1'b1)) begin
            out_V_V_din = 16'd0;
        end else begin
            out_V_V_din = 'bx;
        end
    end else begin
        out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (ap_predicate_op32_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1) & (ap_predicate_op30_write_state3 == 1'b1)))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_291_p2 = (icmp_ln897_fu_286_p2 & icmp_ln897_1_reg_554);

assign add_ln899_fu_309_p2 = ($signed(16'd65483) + $signed(trunc_ln894_reg_533_pp0_iter4_reg));

assign add_ln908_fu_276_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_526));

assign add_ln915_fu_425_p2 = (sub_ln915_fu_420_p2 + select_ln915_reg_609);

assign and_ln899_fu_321_p2 = (xor_ln899_fu_303_p2 & p_Result_3_fu_314_p3);

assign and_ln924_fu_470_p2 = (or_ln924_fu_466_p2 & grp_fu_150_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = (((ap_enable_reg_pp0_iter13 == 1'b1) & (((out_V_V_full_n == 1'b0) & (ap_predicate_op32_write_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op30_write_state3 == 1'b1)))) | ((in_V_V_empty_n == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter13 == 1'b1) & (((out_V_V_full_n == 1'b0) & (ap_predicate_op32_write_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op30_write_state3 == 1'b1)))) | ((in_V_V_empty_n == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter13 == 1'b1) & (((out_V_V_full_n == 1'b0) & (ap_predicate_op32_write_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op30_write_state3 == 1'b1)))) | ((in_V_V_empty_n == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter13 == 1'b1) & (((out_V_V_full_n == 1'b0) & (ap_predicate_op32_write_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op30_write_state3 == 1'b1)))) | ((in_V_V_empty_n == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = (in_V_V_empty_n == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter13 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op32_write_state3 == 1'b1)) | ((out_V_V_full_n == 1'b0) & (ap_predicate_op30_write_state3 == 1'b1)));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_290 = ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op30_write_state3 = ((icmp_ln885_reg_494_pp0_iter12_reg == 1'd0) & (1'd1 == and_ln924_reg_640));
end

always @ (*) begin
    ap_predicate_op32_write_state3 = ((1'd0 == and_ln924_reg_640) | (icmp_ln885_reg_494_pp0_iter12_reg == 1'd1));
end

assign grp_fu_150_p0 = p_Result_8_fu_444_p5;

assign grp_fu_352_p0 = tmp_V_133_reg_508_pp0_iter4_reg;

assign grp_fu_360_p0 = tmp_V_133_reg_508_pp0_iter4_reg;

assign grp_fu_360_p1 = sub_ln908_reg_564;

assign icmp_ln49_fu_161_p2 = ((ap_phi_mux_pixel_index_01_phi_fu_140_p6 == 10'd575) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_169_p2 = ((tmp_V_132_reg_476 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_270_p2 = ((p_Result_4_fu_265_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_286_p2 = (($signed(tmp_10_reg_549) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_347_p2 = (($signed(lsb_index_reg_543) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_1_fu_430_p2 = ((trunc_ln4_reg_614 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_461_p2 = ((add_ln915_reg_619 != 11'd2047) ? 1'b1 : 1'b0);


always @ (p_Result_7_fu_202_p3) begin
    if (p_Result_7_fu_202_p3[0] == 1'b1) begin
        l_fu_210_p3 = 32'd0;
    end else if (p_Result_7_fu_202_p3[1] == 1'b1) begin
        l_fu_210_p3 = 32'd1;
    end else if (p_Result_7_fu_202_p3[2] == 1'b1) begin
        l_fu_210_p3 = 32'd2;
    end else if (p_Result_7_fu_202_p3[3] == 1'b1) begin
        l_fu_210_p3 = 32'd3;
    end else if (p_Result_7_fu_202_p3[4] == 1'b1) begin
        l_fu_210_p3 = 32'd4;
    end else if (p_Result_7_fu_202_p3[5] == 1'b1) begin
        l_fu_210_p3 = 32'd5;
    end else if (p_Result_7_fu_202_p3[6] == 1'b1) begin
        l_fu_210_p3 = 32'd6;
    end else if (p_Result_7_fu_202_p3[7] == 1'b1) begin
        l_fu_210_p3 = 32'd7;
    end else if (p_Result_7_fu_202_p3[8] == 1'b1) begin
        l_fu_210_p3 = 32'd8;
    end else if (p_Result_7_fu_202_p3[9] == 1'b1) begin
        l_fu_210_p3 = 32'd9;
    end else if (p_Result_7_fu_202_p3[10] == 1'b1) begin
        l_fu_210_p3 = 32'd10;
    end else if (p_Result_7_fu_202_p3[11] == 1'b1) begin
        l_fu_210_p3 = 32'd11;
    end else if (p_Result_7_fu_202_p3[12] == 1'b1) begin
        l_fu_210_p3 = 32'd12;
    end else if (p_Result_7_fu_202_p3[13] == 1'b1) begin
        l_fu_210_p3 = 32'd13;
    end else if (p_Result_7_fu_202_p3[14] == 1'b1) begin
        l_fu_210_p3 = 32'd14;
    end else if (p_Result_7_fu_202_p3[15] == 1'b1) begin
        l_fu_210_p3 = 32'd15;
    end else if (p_Result_7_fu_202_p3[16] == 1'b1) begin
        l_fu_210_p3 = 32'd16;
    end else if (p_Result_7_fu_202_p3[17] == 1'b1) begin
        l_fu_210_p3 = 32'd17;
    end else if (p_Result_7_fu_202_p3[18] == 1'b1) begin
        l_fu_210_p3 = 32'd18;
    end else if (p_Result_7_fu_202_p3[19] == 1'b1) begin
        l_fu_210_p3 = 32'd19;
    end else if (p_Result_7_fu_202_p3[20] == 1'b1) begin
        l_fu_210_p3 = 32'd20;
    end else if (p_Result_7_fu_202_p3[21] == 1'b1) begin
        l_fu_210_p3 = 32'd21;
    end else if (p_Result_7_fu_202_p3[22] == 1'b1) begin
        l_fu_210_p3 = 32'd22;
    end else if (p_Result_7_fu_202_p3[23] == 1'b1) begin
        l_fu_210_p3 = 32'd23;
    end else if (p_Result_7_fu_202_p3[24] == 1'b1) begin
        l_fu_210_p3 = 32'd24;
    end else if (p_Result_7_fu_202_p3[25] == 1'b1) begin
        l_fu_210_p3 = 32'd25;
    end else if (p_Result_7_fu_202_p3[26] == 1'b1) begin
        l_fu_210_p3 = 32'd26;
    end else if (p_Result_7_fu_202_p3[27] == 1'b1) begin
        l_fu_210_p3 = 32'd27;
    end else if (p_Result_7_fu_202_p3[28] == 1'b1) begin
        l_fu_210_p3 = 32'd28;
    end else if (p_Result_7_fu_202_p3[29] == 1'b1) begin
        l_fu_210_p3 = 32'd29;
    end else if (p_Result_7_fu_202_p3[30] == 1'b1) begin
        l_fu_210_p3 = 32'd30;
    end else if (p_Result_7_fu_202_p3[31] == 1'b1) begin
        l_fu_210_p3 = 32'd31;
    end else begin
        l_fu_210_p3 = 32'd32;
    end
end

assign lsb_index_fu_241_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_reg_526));

assign lshr_ln897_fu_259_p2 = 16'd65535 >> zext_ln897_fu_256_p1;

assign m_1_fu_369_p3 = ((icmp_ln908_reg_584_pp0_iter6_reg[0:0] === 1'b1) ? zext_ln908_fu_366_p1 : shl_ln908_reg_599);

assign m_2_fu_378_p2 = (zext_ln911_fu_375_p1 + m_1_fu_369_p3);

assign m_6_fu_435_p1 = m_5_reg_604_pp0_iter8_reg;

assign or_ln899_fu_327_p2 = (and_ln899_fu_321_p2 | a_fu_291_p2);

assign or_ln924_fu_466_p2 = (icmp_ln924_reg_635_pp0_iter11_reg | icmp_ln924_1_reg_625_pp0_iter11_reg);

assign or_ln_fu_333_p3 = {{31'd0}, {or_ln899_fu_327_p2}};

assign p_Result_3_fu_314_p3 = tmp_V_133_reg_508_pp0_iter4_reg[add_ln899_fu_309_p2];

assign p_Result_4_fu_265_p2 = (tmp_V_133_reg_508_pp0_iter3_reg & lshr_ln897_fu_259_p2);

assign p_Result_6_fu_179_p3 = tmp_V_132_reg_476_pp0_iter1_reg[32'd15];

assign p_Result_7_fu_202_p3 = {{16'd65535}, {p_Result_s_fu_192_p4}};

assign p_Result_8_fu_444_p5 = {{tmp_2_fu_438_p3}, {m_6_fu_435_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_133_fu_186_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_s_fu_192_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_192_p4[ap_tvar_int_0] = tmp_V_133_fu_186_p3[15 - ap_tvar_int_0];
        end
    end
end

assign pixel_index_fu_155_p2 = (ap_phi_mux_pixel_index_01_phi_fu_140_p6 + 10'd1);

assign select_ln915_fu_402_p3 = ((tmp_12_fu_394_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sub_ln894_fu_222_p2 = (32'd16 - l_reg_516);

assign sub_ln897_fu_235_p2 = (5'd6 - trunc_ln897_fu_231_p1);

assign sub_ln908_fu_281_p2 = (32'd54 - sub_ln894_reg_526);

assign sub_ln915_fu_420_p2 = (11'd8 - trunc_ln893_reg_521_pp0_iter7_reg);

assign tmp_11_fu_296_p3 = lsb_index_reg_543[32'd31];

assign tmp_12_fu_394_p3 = m_2_fu_378_p2[32'd54];

assign tmp_2_fu_438_p3 = {{p_Result_6_reg_503_pp0_iter8_reg}, {add_ln915_reg_619}};

assign tmp_V_133_fu_186_p3 = ((p_Result_6_fu_179_p3[0:0] === 1'b1) ? tmp_V_reg_498 : tmp_V_132_reg_476_pp0_iter1_reg);

assign tmp_V_fu_174_p2 = (16'd0 - tmp_V_132_reg_476);

assign trunc_ln893_fu_218_p1 = l_fu_210_p3[10:0];

assign trunc_ln894_fu_227_p1 = sub_ln894_fu_222_p2[15:0];

assign trunc_ln897_fu_231_p1 = sub_ln894_fu_222_p2[4:0];

assign xor_ln899_fu_303_p2 = (tmp_11_fu_296_p3 ^ 1'd1);

assign zext_ln897_fu_256_p1 = sub_ln897_reg_538;

assign zext_ln908_fu_366_p1 = lshr_ln908_reg_594;

assign zext_ln911_fu_375_p1 = or_ln_reg_569_pp0_iter6_reg;

always @ (posedge ap_clk) begin
    or_ln_reg_569[31:1] <= 31'b0000000000000000000000000000000;
    or_ln_reg_569_pp0_iter6_reg[31:1] <= 31'b0000000000000000000000000000000;
    select_ln915_reg_609[10:1] <= 10'b0111111111;
end

endmodule //relu
