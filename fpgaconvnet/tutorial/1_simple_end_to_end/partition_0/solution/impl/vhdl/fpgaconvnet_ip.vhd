-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fpgaconvnet_ip is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FPGACONVNET_PORT_WR_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_FPGACONVNET_PORT_WR_ID_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_WR_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_WR_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_FPGACONVNET_PORT_WR_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_WR_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_WR_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_WR_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_IN_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_FPGACONVNET_PORT_IN_ID_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_IN_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_IN_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_FPGACONVNET_PORT_IN_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_IN_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_IN_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_IN_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_OUT_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_FPGACONVNET_PORT_OUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_OUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_OUT_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_FPGACONVNET_PORT_OUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_OUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_OUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_OUT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FPGACONVNET_PORT_WR_USER_VALUE : INTEGER := 0;
    C_M_AXI_FPGACONVNET_PORT_WR_PROT_VALUE : INTEGER := 0;
    C_M_AXI_FPGACONVNET_PORT_WR_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_FPGACONVNET_PORT_IN_USER_VALUE : INTEGER := 0;
    C_M_AXI_FPGACONVNET_PORT_IN_PROT_VALUE : INTEGER := 0;
    C_M_AXI_FPGACONVNET_PORT_IN_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_FPGACONVNET_PORT_OUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_FPGACONVNET_PORT_OUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_FPGACONVNET_PORT_OUT_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_AWVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_AWREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_ADDR_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fpgaconvnet_port_wr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_wr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_wr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_wr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_wr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_wr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_wr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_wr_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_AWUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_WVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_WREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_DATA_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_DATA_WIDTH/8-1 downto 0);
    m_axi_fpgaconvnet_port_wr_WLAST : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_WUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_ARVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_ARREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_ADDR_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fpgaconvnet_port_wr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_wr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_wr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_wr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_wr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_wr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_wr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_wr_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_ARUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_RVALID : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_RREADY : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_DATA_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_RLAST : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_RID : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_RUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_wr_BVALID : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_BREADY : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_wr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_wr_BID : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_wr_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_WR_BUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_AWVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_in_AWREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_in_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_ADDR_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fpgaconvnet_port_in_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_in_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_in_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_in_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_in_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_in_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_in_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_in_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_AWUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_WVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_in_WREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_in_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_DATA_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_DATA_WIDTH/8-1 downto 0);
    m_axi_fpgaconvnet_port_in_WLAST : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_in_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_WUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_ARVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_in_ARREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_in_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_ADDR_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fpgaconvnet_port_in_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_in_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_in_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_in_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_in_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_in_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_in_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_in_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_ARUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_RVALID : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_in_RREADY : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_in_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_DATA_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_RLAST : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_in_RID : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_RUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_in_BVALID : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_in_BREADY : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_in_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_in_BID : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_in_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_IN_BUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_AWVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_out_AWREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_out_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fpgaconvnet_port_out_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_out_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_out_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_out_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_out_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_out_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_out_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_out_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_AWUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_WVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_out_WREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_out_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_DATA_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_DATA_WIDTH/8-1 downto 0);
    m_axi_fpgaconvnet_port_out_WLAST : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_out_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_WUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_ARVALID : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_out_ARREADY : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_out_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_ADDR_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fpgaconvnet_port_out_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_out_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_out_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_out_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_out_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fpgaconvnet_port_out_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_out_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fpgaconvnet_port_out_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_ARUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_RVALID : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_out_RREADY : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_out_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_DATA_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_RLAST : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_out_RID : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_RUSER_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_out_BVALID : IN STD_LOGIC;
    m_axi_fpgaconvnet_port_out_BREADY : OUT STD_LOGIC;
    m_axi_fpgaconvnet_port_out_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fpgaconvnet_port_out_BID : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_ID_WIDTH-1 downto 0);
    m_axi_fpgaconvnet_port_out_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FPGACONVNET_PORT_OUT_BUSER_WIDTH-1 downto 0) );
end;


architecture behav of fpgaconvnet_ip is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fpgaconvnet_ip,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.562000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=42666,HLS_SYN_DSP=60960,HLS_SYN_FF=29962826,HLS_SYN_LUT=11416175,HLS_VERSION=2019_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_ID_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_M_AXI_AWUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_ARUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_WUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_RUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant C_M_AXI_BUSER_WIDTH : INTEGER range 63 downto 0 := 1;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal mode : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_reloading_index : STD_LOGIC_VECTOR (31 downto 0);
    signal fpgaconvnet_wr_0_V : STD_LOGIC_VECTOR (31 downto 0);
    signal fpgaconvnet_in_0_V : STD_LOGIC_VECTOR (31 downto 0);
    signal fpgaconvnet_out_0_V : STD_LOGIC_VECTOR (31 downto 0);
    signal fpgaconvnet_port_wr_AWREADY : STD_LOGIC;
    signal fpgaconvnet_port_wr_WREADY : STD_LOGIC;
    signal fpgaconvnet_port_wr_ARREADY : STD_LOGIC;
    signal fpgaconvnet_port_wr_RVALID : STD_LOGIC;
    signal fpgaconvnet_port_wr_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal fpgaconvnet_port_wr_RLAST : STD_LOGIC;
    signal fpgaconvnet_port_wr_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_wr_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_wr_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fpgaconvnet_port_wr_BVALID : STD_LOGIC;
    signal fpgaconvnet_port_wr_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fpgaconvnet_port_wr_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_wr_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_in_AWREADY : STD_LOGIC;
    signal fpgaconvnet_port_in_WREADY : STD_LOGIC;
    signal fpgaconvnet_port_in_ARREADY : STD_LOGIC;
    signal fpgaconvnet_port_in_RVALID : STD_LOGIC;
    signal fpgaconvnet_port_in_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal fpgaconvnet_port_in_RLAST : STD_LOGIC;
    signal fpgaconvnet_port_in_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_in_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_in_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fpgaconvnet_port_in_BVALID : STD_LOGIC;
    signal fpgaconvnet_port_in_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fpgaconvnet_port_in_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_in_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_out_AWREADY : STD_LOGIC;
    signal fpgaconvnet_port_out_WREADY : STD_LOGIC;
    signal fpgaconvnet_port_out_ARREADY : STD_LOGIC;
    signal fpgaconvnet_port_out_RVALID : STD_LOGIC;
    signal fpgaconvnet_port_out_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal fpgaconvnet_port_out_RLAST : STD_LOGIC;
    signal fpgaconvnet_port_out_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_out_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_out_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fpgaconvnet_port_out_BVALID : STD_LOGIC;
    signal fpgaconvnet_port_out_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fpgaconvnet_port_out_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal fpgaconvnet_port_out_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_ap_start : STD_LOGIC;
    signal Block_proc_U0_ap_done : STD_LOGIC;
    signal Block_proc_U0_ap_continue : STD_LOGIC;
    signal Block_proc_U0_ap_idle : STD_LOGIC;
    signal Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WLAST : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_RREADY : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_in_0_V_BREADY : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WLAST : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_RREADY : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_out_0_V_BREADY : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WLAST : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARVALID : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_RREADY : STD_LOGIC;
    signal Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_BREADY : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal Block_proc_U0_start_full_n : STD_LOGIC;
    signal Block_proc_U0_start_write : STD_LOGIC;

    component Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mode : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_reloading_index : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_AWREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_in_0_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_WVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_WREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fpgaconvnet_in_0_V_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_fpgaconvnet_in_0_V_WLAST : OUT STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_ARREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_in_0_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_RVALID : IN STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_RREADY : OUT STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fpgaconvnet_in_0_V_RLAST : IN STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_in_0_V_BVALID : IN STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_BREADY : OUT STD_LOGIC;
        m_axi_fpgaconvnet_in_0_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_in_0_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_in_0_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fpgaconvnet_in_0_V_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_AWREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_out_0_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_WVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_WREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fpgaconvnet_out_0_V_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_fpgaconvnet_out_0_V_WLAST : OUT STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_ARREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_out_0_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_RVALID : IN STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_RREADY : OUT STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fpgaconvnet_out_0_V_RLAST : IN STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_out_0_V_BVALID : IN STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_BREADY : OUT STD_LOGIC;
        m_axi_fpgaconvnet_out_0_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_out_0_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_out_0_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fpgaconvnet_out_0_V_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_AWREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_wr_0_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_WVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_WREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fpgaconvnet_wr_0_V_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_fpgaconvnet_wr_0_V_WLAST : OUT STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARVALID : OUT STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_ARREADY : IN STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fpgaconvnet_wr_0_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_RVALID : IN STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_RREADY : OUT STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fpgaconvnet_wr_0_V_RLAST : IN STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_wr_0_V_BVALID : IN STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_BREADY : OUT STD_LOGIC;
        m_axi_fpgaconvnet_wr_0_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fpgaconvnet_wr_0_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fpgaconvnet_wr_0_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fpgaconvnet_wr_0_V_offset : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fpgaconvnet_ip_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        mode : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_reloading_index : OUT STD_LOGIC_VECTOR (31 downto 0);
        fpgaconvnet_wr_0_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        fpgaconvnet_in_0_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        fpgaconvnet_out_0_V : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fpgaconvnet_ip_fpgaconvnet_port_wr_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fpgaconvnet_ip_fpgaconvnet_port_in_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fpgaconvnet_ip_fpgaconvnet_port_out_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    fpgaconvnet_ip_ctrl_s_axi_U : component fpgaconvnet_ip_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        mode => mode,
        weights_reloading_index => weights_reloading_index,
        fpgaconvnet_wr_0_V => fpgaconvnet_wr_0_V,
        fpgaconvnet_in_0_V => fpgaconvnet_in_0_V,
        fpgaconvnet_out_0_V => fpgaconvnet_out_0_V);

    fpgaconvnet_ip_fpgaconvnet_port_wr_m_axi_U : component fpgaconvnet_ip_fpgaconvnet_port_wr_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 64,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 1,
        NUM_WRITE_OUTSTANDING => 1,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_FPGACONVNET_PORT_WR_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_FPGACONVNET_PORT_WR_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_FPGACONVNET_PORT_WR_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_WR_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_WR_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_WR_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_WR_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_WR_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_FPGACONVNET_PORT_WR_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_FPGACONVNET_PORT_WR_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_FPGACONVNET_PORT_WR_CACHE_VALUE)
    port map (
        AWVALID => m_axi_fpgaconvnet_port_wr_AWVALID,
        AWREADY => m_axi_fpgaconvnet_port_wr_AWREADY,
        AWADDR => m_axi_fpgaconvnet_port_wr_AWADDR,
        AWID => m_axi_fpgaconvnet_port_wr_AWID,
        AWLEN => m_axi_fpgaconvnet_port_wr_AWLEN,
        AWSIZE => m_axi_fpgaconvnet_port_wr_AWSIZE,
        AWBURST => m_axi_fpgaconvnet_port_wr_AWBURST,
        AWLOCK => m_axi_fpgaconvnet_port_wr_AWLOCK,
        AWCACHE => m_axi_fpgaconvnet_port_wr_AWCACHE,
        AWPROT => m_axi_fpgaconvnet_port_wr_AWPROT,
        AWQOS => m_axi_fpgaconvnet_port_wr_AWQOS,
        AWREGION => m_axi_fpgaconvnet_port_wr_AWREGION,
        AWUSER => m_axi_fpgaconvnet_port_wr_AWUSER,
        WVALID => m_axi_fpgaconvnet_port_wr_WVALID,
        WREADY => m_axi_fpgaconvnet_port_wr_WREADY,
        WDATA => m_axi_fpgaconvnet_port_wr_WDATA,
        WSTRB => m_axi_fpgaconvnet_port_wr_WSTRB,
        WLAST => m_axi_fpgaconvnet_port_wr_WLAST,
        WID => m_axi_fpgaconvnet_port_wr_WID,
        WUSER => m_axi_fpgaconvnet_port_wr_WUSER,
        ARVALID => m_axi_fpgaconvnet_port_wr_ARVALID,
        ARREADY => m_axi_fpgaconvnet_port_wr_ARREADY,
        ARADDR => m_axi_fpgaconvnet_port_wr_ARADDR,
        ARID => m_axi_fpgaconvnet_port_wr_ARID,
        ARLEN => m_axi_fpgaconvnet_port_wr_ARLEN,
        ARSIZE => m_axi_fpgaconvnet_port_wr_ARSIZE,
        ARBURST => m_axi_fpgaconvnet_port_wr_ARBURST,
        ARLOCK => m_axi_fpgaconvnet_port_wr_ARLOCK,
        ARCACHE => m_axi_fpgaconvnet_port_wr_ARCACHE,
        ARPROT => m_axi_fpgaconvnet_port_wr_ARPROT,
        ARQOS => m_axi_fpgaconvnet_port_wr_ARQOS,
        ARREGION => m_axi_fpgaconvnet_port_wr_ARREGION,
        ARUSER => m_axi_fpgaconvnet_port_wr_ARUSER,
        RVALID => m_axi_fpgaconvnet_port_wr_RVALID,
        RREADY => m_axi_fpgaconvnet_port_wr_RREADY,
        RDATA => m_axi_fpgaconvnet_port_wr_RDATA,
        RLAST => m_axi_fpgaconvnet_port_wr_RLAST,
        RID => m_axi_fpgaconvnet_port_wr_RID,
        RUSER => m_axi_fpgaconvnet_port_wr_RUSER,
        RRESP => m_axi_fpgaconvnet_port_wr_RRESP,
        BVALID => m_axi_fpgaconvnet_port_wr_BVALID,
        BREADY => m_axi_fpgaconvnet_port_wr_BREADY,
        BRESP => m_axi_fpgaconvnet_port_wr_BRESP,
        BID => m_axi_fpgaconvnet_port_wr_BID,
        BUSER => m_axi_fpgaconvnet_port_wr_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARVALID,
        I_ARREADY => fpgaconvnet_port_wr_ARREADY,
        I_ARADDR => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARADDR,
        I_ARID => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARID,
        I_ARLEN => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARLEN,
        I_ARSIZE => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARSIZE,
        I_ARLOCK => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARLOCK,
        I_ARCACHE => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARCACHE,
        I_ARQOS => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARQOS,
        I_ARPROT => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARPROT,
        I_ARUSER => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARUSER,
        I_ARBURST => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARBURST,
        I_ARREGION => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARREGION,
        I_RVALID => fpgaconvnet_port_wr_RVALID,
        I_RREADY => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_RREADY,
        I_RDATA => fpgaconvnet_port_wr_RDATA,
        I_RID => fpgaconvnet_port_wr_RID,
        I_RUSER => fpgaconvnet_port_wr_RUSER,
        I_RRESP => fpgaconvnet_port_wr_RRESP,
        I_RLAST => fpgaconvnet_port_wr_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => fpgaconvnet_port_wr_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => fpgaconvnet_port_wr_WREADY,
        I_WDATA => ap_const_lv64_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv8_0,
        I_BVALID => fpgaconvnet_port_wr_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => fpgaconvnet_port_wr_BRESP,
        I_BID => fpgaconvnet_port_wr_BID,
        I_BUSER => fpgaconvnet_port_wr_BUSER);

    fpgaconvnet_ip_fpgaconvnet_port_in_m_axi_U : component fpgaconvnet_ip_fpgaconvnet_port_in_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 64,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 1,
        NUM_WRITE_OUTSTANDING => 1,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_FPGACONVNET_PORT_IN_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_FPGACONVNET_PORT_IN_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_FPGACONVNET_PORT_IN_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_IN_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_IN_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_IN_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_IN_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_IN_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_FPGACONVNET_PORT_IN_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_FPGACONVNET_PORT_IN_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_FPGACONVNET_PORT_IN_CACHE_VALUE)
    port map (
        AWVALID => m_axi_fpgaconvnet_port_in_AWVALID,
        AWREADY => m_axi_fpgaconvnet_port_in_AWREADY,
        AWADDR => m_axi_fpgaconvnet_port_in_AWADDR,
        AWID => m_axi_fpgaconvnet_port_in_AWID,
        AWLEN => m_axi_fpgaconvnet_port_in_AWLEN,
        AWSIZE => m_axi_fpgaconvnet_port_in_AWSIZE,
        AWBURST => m_axi_fpgaconvnet_port_in_AWBURST,
        AWLOCK => m_axi_fpgaconvnet_port_in_AWLOCK,
        AWCACHE => m_axi_fpgaconvnet_port_in_AWCACHE,
        AWPROT => m_axi_fpgaconvnet_port_in_AWPROT,
        AWQOS => m_axi_fpgaconvnet_port_in_AWQOS,
        AWREGION => m_axi_fpgaconvnet_port_in_AWREGION,
        AWUSER => m_axi_fpgaconvnet_port_in_AWUSER,
        WVALID => m_axi_fpgaconvnet_port_in_WVALID,
        WREADY => m_axi_fpgaconvnet_port_in_WREADY,
        WDATA => m_axi_fpgaconvnet_port_in_WDATA,
        WSTRB => m_axi_fpgaconvnet_port_in_WSTRB,
        WLAST => m_axi_fpgaconvnet_port_in_WLAST,
        WID => m_axi_fpgaconvnet_port_in_WID,
        WUSER => m_axi_fpgaconvnet_port_in_WUSER,
        ARVALID => m_axi_fpgaconvnet_port_in_ARVALID,
        ARREADY => m_axi_fpgaconvnet_port_in_ARREADY,
        ARADDR => m_axi_fpgaconvnet_port_in_ARADDR,
        ARID => m_axi_fpgaconvnet_port_in_ARID,
        ARLEN => m_axi_fpgaconvnet_port_in_ARLEN,
        ARSIZE => m_axi_fpgaconvnet_port_in_ARSIZE,
        ARBURST => m_axi_fpgaconvnet_port_in_ARBURST,
        ARLOCK => m_axi_fpgaconvnet_port_in_ARLOCK,
        ARCACHE => m_axi_fpgaconvnet_port_in_ARCACHE,
        ARPROT => m_axi_fpgaconvnet_port_in_ARPROT,
        ARQOS => m_axi_fpgaconvnet_port_in_ARQOS,
        ARREGION => m_axi_fpgaconvnet_port_in_ARREGION,
        ARUSER => m_axi_fpgaconvnet_port_in_ARUSER,
        RVALID => m_axi_fpgaconvnet_port_in_RVALID,
        RREADY => m_axi_fpgaconvnet_port_in_RREADY,
        RDATA => m_axi_fpgaconvnet_port_in_RDATA,
        RLAST => m_axi_fpgaconvnet_port_in_RLAST,
        RID => m_axi_fpgaconvnet_port_in_RID,
        RUSER => m_axi_fpgaconvnet_port_in_RUSER,
        RRESP => m_axi_fpgaconvnet_port_in_RRESP,
        BVALID => m_axi_fpgaconvnet_port_in_BVALID,
        BREADY => m_axi_fpgaconvnet_port_in_BREADY,
        BRESP => m_axi_fpgaconvnet_port_in_BRESP,
        BID => m_axi_fpgaconvnet_port_in_BID,
        BUSER => m_axi_fpgaconvnet_port_in_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARVALID,
        I_ARREADY => fpgaconvnet_port_in_ARREADY,
        I_ARADDR => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARADDR,
        I_ARID => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARID,
        I_ARLEN => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARLEN,
        I_ARSIZE => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARSIZE,
        I_ARLOCK => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARLOCK,
        I_ARCACHE => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARCACHE,
        I_ARQOS => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARQOS,
        I_ARPROT => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARPROT,
        I_ARUSER => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARUSER,
        I_ARBURST => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARBURST,
        I_ARREGION => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARREGION,
        I_RVALID => fpgaconvnet_port_in_RVALID,
        I_RREADY => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_RREADY,
        I_RDATA => fpgaconvnet_port_in_RDATA,
        I_RID => fpgaconvnet_port_in_RID,
        I_RUSER => fpgaconvnet_port_in_RUSER,
        I_RRESP => fpgaconvnet_port_in_RRESP,
        I_RLAST => fpgaconvnet_port_in_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => fpgaconvnet_port_in_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => fpgaconvnet_port_in_WREADY,
        I_WDATA => ap_const_lv64_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv8_0,
        I_BVALID => fpgaconvnet_port_in_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => fpgaconvnet_port_in_BRESP,
        I_BID => fpgaconvnet_port_in_BID,
        I_BUSER => fpgaconvnet_port_in_BUSER);

    fpgaconvnet_ip_fpgaconvnet_port_out_m_axi_U : component fpgaconvnet_ip_fpgaconvnet_port_out_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 64,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 1,
        NUM_WRITE_OUTSTANDING => 1,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_FPGACONVNET_PORT_OUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_FPGACONVNET_PORT_OUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_FPGACONVNET_PORT_OUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_OUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_OUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_OUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_OUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_FPGACONVNET_PORT_OUT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_FPGACONVNET_PORT_OUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_FPGACONVNET_PORT_OUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_FPGACONVNET_PORT_OUT_CACHE_VALUE)
    port map (
        AWVALID => m_axi_fpgaconvnet_port_out_AWVALID,
        AWREADY => m_axi_fpgaconvnet_port_out_AWREADY,
        AWADDR => m_axi_fpgaconvnet_port_out_AWADDR,
        AWID => m_axi_fpgaconvnet_port_out_AWID,
        AWLEN => m_axi_fpgaconvnet_port_out_AWLEN,
        AWSIZE => m_axi_fpgaconvnet_port_out_AWSIZE,
        AWBURST => m_axi_fpgaconvnet_port_out_AWBURST,
        AWLOCK => m_axi_fpgaconvnet_port_out_AWLOCK,
        AWCACHE => m_axi_fpgaconvnet_port_out_AWCACHE,
        AWPROT => m_axi_fpgaconvnet_port_out_AWPROT,
        AWQOS => m_axi_fpgaconvnet_port_out_AWQOS,
        AWREGION => m_axi_fpgaconvnet_port_out_AWREGION,
        AWUSER => m_axi_fpgaconvnet_port_out_AWUSER,
        WVALID => m_axi_fpgaconvnet_port_out_WVALID,
        WREADY => m_axi_fpgaconvnet_port_out_WREADY,
        WDATA => m_axi_fpgaconvnet_port_out_WDATA,
        WSTRB => m_axi_fpgaconvnet_port_out_WSTRB,
        WLAST => m_axi_fpgaconvnet_port_out_WLAST,
        WID => m_axi_fpgaconvnet_port_out_WID,
        WUSER => m_axi_fpgaconvnet_port_out_WUSER,
        ARVALID => m_axi_fpgaconvnet_port_out_ARVALID,
        ARREADY => m_axi_fpgaconvnet_port_out_ARREADY,
        ARADDR => m_axi_fpgaconvnet_port_out_ARADDR,
        ARID => m_axi_fpgaconvnet_port_out_ARID,
        ARLEN => m_axi_fpgaconvnet_port_out_ARLEN,
        ARSIZE => m_axi_fpgaconvnet_port_out_ARSIZE,
        ARBURST => m_axi_fpgaconvnet_port_out_ARBURST,
        ARLOCK => m_axi_fpgaconvnet_port_out_ARLOCK,
        ARCACHE => m_axi_fpgaconvnet_port_out_ARCACHE,
        ARPROT => m_axi_fpgaconvnet_port_out_ARPROT,
        ARQOS => m_axi_fpgaconvnet_port_out_ARQOS,
        ARREGION => m_axi_fpgaconvnet_port_out_ARREGION,
        ARUSER => m_axi_fpgaconvnet_port_out_ARUSER,
        RVALID => m_axi_fpgaconvnet_port_out_RVALID,
        RREADY => m_axi_fpgaconvnet_port_out_RREADY,
        RDATA => m_axi_fpgaconvnet_port_out_RDATA,
        RLAST => m_axi_fpgaconvnet_port_out_RLAST,
        RID => m_axi_fpgaconvnet_port_out_RID,
        RUSER => m_axi_fpgaconvnet_port_out_RUSER,
        RRESP => m_axi_fpgaconvnet_port_out_RRESP,
        BVALID => m_axi_fpgaconvnet_port_out_BVALID,
        BREADY => m_axi_fpgaconvnet_port_out_BREADY,
        BRESP => m_axi_fpgaconvnet_port_out_BRESP,
        BID => m_axi_fpgaconvnet_port_out_BID,
        BUSER => m_axi_fpgaconvnet_port_out_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => fpgaconvnet_port_out_ARREADY,
        I_ARADDR => ap_const_lv32_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => fpgaconvnet_port_out_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => fpgaconvnet_port_out_RDATA,
        I_RID => fpgaconvnet_port_out_RID,
        I_RUSER => fpgaconvnet_port_out_RUSER,
        I_RRESP => fpgaconvnet_port_out_RRESP,
        I_RLAST => fpgaconvnet_port_out_RLAST,
        I_AWVALID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWVALID,
        I_AWREADY => fpgaconvnet_port_out_AWREADY,
        I_AWADDR => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWADDR,
        I_AWID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWID,
        I_AWLEN => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWLEN,
        I_AWSIZE => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWSIZE,
        I_AWLOCK => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWLOCK,
        I_AWCACHE => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWCACHE,
        I_AWQOS => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWQOS,
        I_AWPROT => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWPROT,
        I_AWUSER => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWUSER,
        I_AWBURST => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWBURST,
        I_AWREGION => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWREGION,
        I_WVALID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WVALID,
        I_WREADY => fpgaconvnet_port_out_WREADY,
        I_WDATA => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WDATA,
        I_WID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WID,
        I_WUSER => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WUSER,
        I_WLAST => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WLAST,
        I_WSTRB => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WSTRB,
        I_BVALID => fpgaconvnet_port_out_BVALID,
        I_BREADY => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_BREADY,
        I_BRESP => fpgaconvnet_port_out_BRESP,
        I_BID => fpgaconvnet_port_out_BID,
        I_BUSER => fpgaconvnet_port_out_BUSER);

    Block_proc_U0 : component Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc_U0_ap_start,
        ap_done => Block_proc_U0_ap_done,
        ap_continue => Block_proc_U0_ap_continue,
        ap_idle => Block_proc_U0_ap_idle,
        ap_ready => Block_proc_U0_ap_ready,
        mode => mode,
        weights_reloading_index => weights_reloading_index,
        m_axi_fpgaconvnet_in_0_V_AWVALID => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWVALID,
        m_axi_fpgaconvnet_in_0_V_AWREADY => ap_const_logic_0,
        m_axi_fpgaconvnet_in_0_V_AWADDR => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWADDR,
        m_axi_fpgaconvnet_in_0_V_AWID => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWID,
        m_axi_fpgaconvnet_in_0_V_AWLEN => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWLEN,
        m_axi_fpgaconvnet_in_0_V_AWSIZE => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWSIZE,
        m_axi_fpgaconvnet_in_0_V_AWBURST => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWBURST,
        m_axi_fpgaconvnet_in_0_V_AWLOCK => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWLOCK,
        m_axi_fpgaconvnet_in_0_V_AWCACHE => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWCACHE,
        m_axi_fpgaconvnet_in_0_V_AWPROT => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWPROT,
        m_axi_fpgaconvnet_in_0_V_AWQOS => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWQOS,
        m_axi_fpgaconvnet_in_0_V_AWREGION => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWREGION,
        m_axi_fpgaconvnet_in_0_V_AWUSER => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_AWUSER,
        m_axi_fpgaconvnet_in_0_V_WVALID => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WVALID,
        m_axi_fpgaconvnet_in_0_V_WREADY => ap_const_logic_0,
        m_axi_fpgaconvnet_in_0_V_WDATA => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WDATA,
        m_axi_fpgaconvnet_in_0_V_WSTRB => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WSTRB,
        m_axi_fpgaconvnet_in_0_V_WLAST => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WLAST,
        m_axi_fpgaconvnet_in_0_V_WID => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WID,
        m_axi_fpgaconvnet_in_0_V_WUSER => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_WUSER,
        m_axi_fpgaconvnet_in_0_V_ARVALID => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARVALID,
        m_axi_fpgaconvnet_in_0_V_ARREADY => fpgaconvnet_port_in_ARREADY,
        m_axi_fpgaconvnet_in_0_V_ARADDR => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARADDR,
        m_axi_fpgaconvnet_in_0_V_ARID => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARID,
        m_axi_fpgaconvnet_in_0_V_ARLEN => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARLEN,
        m_axi_fpgaconvnet_in_0_V_ARSIZE => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARSIZE,
        m_axi_fpgaconvnet_in_0_V_ARBURST => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARBURST,
        m_axi_fpgaconvnet_in_0_V_ARLOCK => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARLOCK,
        m_axi_fpgaconvnet_in_0_V_ARCACHE => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARCACHE,
        m_axi_fpgaconvnet_in_0_V_ARPROT => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARPROT,
        m_axi_fpgaconvnet_in_0_V_ARQOS => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARQOS,
        m_axi_fpgaconvnet_in_0_V_ARREGION => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARREGION,
        m_axi_fpgaconvnet_in_0_V_ARUSER => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_ARUSER,
        m_axi_fpgaconvnet_in_0_V_RVALID => fpgaconvnet_port_in_RVALID,
        m_axi_fpgaconvnet_in_0_V_RREADY => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_RREADY,
        m_axi_fpgaconvnet_in_0_V_RDATA => fpgaconvnet_port_in_RDATA,
        m_axi_fpgaconvnet_in_0_V_RLAST => fpgaconvnet_port_in_RLAST,
        m_axi_fpgaconvnet_in_0_V_RID => fpgaconvnet_port_in_RID,
        m_axi_fpgaconvnet_in_0_V_RUSER => fpgaconvnet_port_in_RUSER,
        m_axi_fpgaconvnet_in_0_V_RRESP => fpgaconvnet_port_in_RRESP,
        m_axi_fpgaconvnet_in_0_V_BVALID => ap_const_logic_0,
        m_axi_fpgaconvnet_in_0_V_BREADY => Block_proc_U0_m_axi_fpgaconvnet_in_0_V_BREADY,
        m_axi_fpgaconvnet_in_0_V_BRESP => ap_const_lv2_0,
        m_axi_fpgaconvnet_in_0_V_BID => ap_const_lv1_0,
        m_axi_fpgaconvnet_in_0_V_BUSER => ap_const_lv1_0,
        fpgaconvnet_in_0_V_offset => fpgaconvnet_in_0_V,
        m_axi_fpgaconvnet_out_0_V_AWVALID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWVALID,
        m_axi_fpgaconvnet_out_0_V_AWREADY => fpgaconvnet_port_out_AWREADY,
        m_axi_fpgaconvnet_out_0_V_AWADDR => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWADDR,
        m_axi_fpgaconvnet_out_0_V_AWID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWID,
        m_axi_fpgaconvnet_out_0_V_AWLEN => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWLEN,
        m_axi_fpgaconvnet_out_0_V_AWSIZE => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWSIZE,
        m_axi_fpgaconvnet_out_0_V_AWBURST => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWBURST,
        m_axi_fpgaconvnet_out_0_V_AWLOCK => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWLOCK,
        m_axi_fpgaconvnet_out_0_V_AWCACHE => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWCACHE,
        m_axi_fpgaconvnet_out_0_V_AWPROT => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWPROT,
        m_axi_fpgaconvnet_out_0_V_AWQOS => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWQOS,
        m_axi_fpgaconvnet_out_0_V_AWREGION => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWREGION,
        m_axi_fpgaconvnet_out_0_V_AWUSER => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_AWUSER,
        m_axi_fpgaconvnet_out_0_V_WVALID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WVALID,
        m_axi_fpgaconvnet_out_0_V_WREADY => fpgaconvnet_port_out_WREADY,
        m_axi_fpgaconvnet_out_0_V_WDATA => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WDATA,
        m_axi_fpgaconvnet_out_0_V_WSTRB => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WSTRB,
        m_axi_fpgaconvnet_out_0_V_WLAST => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WLAST,
        m_axi_fpgaconvnet_out_0_V_WID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WID,
        m_axi_fpgaconvnet_out_0_V_WUSER => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_WUSER,
        m_axi_fpgaconvnet_out_0_V_ARVALID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARVALID,
        m_axi_fpgaconvnet_out_0_V_ARREADY => ap_const_logic_0,
        m_axi_fpgaconvnet_out_0_V_ARADDR => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARADDR,
        m_axi_fpgaconvnet_out_0_V_ARID => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARID,
        m_axi_fpgaconvnet_out_0_V_ARLEN => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARLEN,
        m_axi_fpgaconvnet_out_0_V_ARSIZE => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARSIZE,
        m_axi_fpgaconvnet_out_0_V_ARBURST => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARBURST,
        m_axi_fpgaconvnet_out_0_V_ARLOCK => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARLOCK,
        m_axi_fpgaconvnet_out_0_V_ARCACHE => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARCACHE,
        m_axi_fpgaconvnet_out_0_V_ARPROT => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARPROT,
        m_axi_fpgaconvnet_out_0_V_ARQOS => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARQOS,
        m_axi_fpgaconvnet_out_0_V_ARREGION => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARREGION,
        m_axi_fpgaconvnet_out_0_V_ARUSER => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_ARUSER,
        m_axi_fpgaconvnet_out_0_V_RVALID => ap_const_logic_0,
        m_axi_fpgaconvnet_out_0_V_RREADY => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_RREADY,
        m_axi_fpgaconvnet_out_0_V_RDATA => ap_const_lv64_0,
        m_axi_fpgaconvnet_out_0_V_RLAST => ap_const_logic_0,
        m_axi_fpgaconvnet_out_0_V_RID => ap_const_lv1_0,
        m_axi_fpgaconvnet_out_0_V_RUSER => ap_const_lv1_0,
        m_axi_fpgaconvnet_out_0_V_RRESP => ap_const_lv2_0,
        m_axi_fpgaconvnet_out_0_V_BVALID => fpgaconvnet_port_out_BVALID,
        m_axi_fpgaconvnet_out_0_V_BREADY => Block_proc_U0_m_axi_fpgaconvnet_out_0_V_BREADY,
        m_axi_fpgaconvnet_out_0_V_BRESP => fpgaconvnet_port_out_BRESP,
        m_axi_fpgaconvnet_out_0_V_BID => fpgaconvnet_port_out_BID,
        m_axi_fpgaconvnet_out_0_V_BUSER => fpgaconvnet_port_out_BUSER,
        fpgaconvnet_out_0_V_offset => fpgaconvnet_out_0_V,
        m_axi_fpgaconvnet_wr_0_V_AWVALID => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWVALID,
        m_axi_fpgaconvnet_wr_0_V_AWREADY => ap_const_logic_0,
        m_axi_fpgaconvnet_wr_0_V_AWADDR => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWADDR,
        m_axi_fpgaconvnet_wr_0_V_AWID => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWID,
        m_axi_fpgaconvnet_wr_0_V_AWLEN => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWLEN,
        m_axi_fpgaconvnet_wr_0_V_AWSIZE => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWSIZE,
        m_axi_fpgaconvnet_wr_0_V_AWBURST => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWBURST,
        m_axi_fpgaconvnet_wr_0_V_AWLOCK => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWLOCK,
        m_axi_fpgaconvnet_wr_0_V_AWCACHE => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWCACHE,
        m_axi_fpgaconvnet_wr_0_V_AWPROT => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWPROT,
        m_axi_fpgaconvnet_wr_0_V_AWQOS => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWQOS,
        m_axi_fpgaconvnet_wr_0_V_AWREGION => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWREGION,
        m_axi_fpgaconvnet_wr_0_V_AWUSER => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_AWUSER,
        m_axi_fpgaconvnet_wr_0_V_WVALID => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WVALID,
        m_axi_fpgaconvnet_wr_0_V_WREADY => ap_const_logic_0,
        m_axi_fpgaconvnet_wr_0_V_WDATA => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WDATA,
        m_axi_fpgaconvnet_wr_0_V_WSTRB => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WSTRB,
        m_axi_fpgaconvnet_wr_0_V_WLAST => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WLAST,
        m_axi_fpgaconvnet_wr_0_V_WID => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WID,
        m_axi_fpgaconvnet_wr_0_V_WUSER => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_WUSER,
        m_axi_fpgaconvnet_wr_0_V_ARVALID => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARVALID,
        m_axi_fpgaconvnet_wr_0_V_ARREADY => fpgaconvnet_port_wr_ARREADY,
        m_axi_fpgaconvnet_wr_0_V_ARADDR => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARADDR,
        m_axi_fpgaconvnet_wr_0_V_ARID => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARID,
        m_axi_fpgaconvnet_wr_0_V_ARLEN => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARLEN,
        m_axi_fpgaconvnet_wr_0_V_ARSIZE => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARSIZE,
        m_axi_fpgaconvnet_wr_0_V_ARBURST => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARBURST,
        m_axi_fpgaconvnet_wr_0_V_ARLOCK => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARLOCK,
        m_axi_fpgaconvnet_wr_0_V_ARCACHE => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARCACHE,
        m_axi_fpgaconvnet_wr_0_V_ARPROT => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARPROT,
        m_axi_fpgaconvnet_wr_0_V_ARQOS => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARQOS,
        m_axi_fpgaconvnet_wr_0_V_ARREGION => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARREGION,
        m_axi_fpgaconvnet_wr_0_V_ARUSER => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_ARUSER,
        m_axi_fpgaconvnet_wr_0_V_RVALID => fpgaconvnet_port_wr_RVALID,
        m_axi_fpgaconvnet_wr_0_V_RREADY => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_RREADY,
        m_axi_fpgaconvnet_wr_0_V_RDATA => fpgaconvnet_port_wr_RDATA,
        m_axi_fpgaconvnet_wr_0_V_RLAST => fpgaconvnet_port_wr_RLAST,
        m_axi_fpgaconvnet_wr_0_V_RID => fpgaconvnet_port_wr_RID,
        m_axi_fpgaconvnet_wr_0_V_RUSER => fpgaconvnet_port_wr_RUSER,
        m_axi_fpgaconvnet_wr_0_V_RRESP => fpgaconvnet_port_wr_RRESP,
        m_axi_fpgaconvnet_wr_0_V_BVALID => ap_const_logic_0,
        m_axi_fpgaconvnet_wr_0_V_BREADY => Block_proc_U0_m_axi_fpgaconvnet_wr_0_V_BREADY,
        m_axi_fpgaconvnet_wr_0_V_BRESP => ap_const_lv2_0,
        m_axi_fpgaconvnet_wr_0_V_BID => ap_const_lv1_0,
        m_axi_fpgaconvnet_wr_0_V_BUSER => ap_const_lv1_0,
        fpgaconvnet_wr_0_V_offset => fpgaconvnet_wr_0_V);




    Block_proc_U0_ap_continue <= ap_const_logic_1;
    Block_proc_U0_ap_start <= ap_start;
    Block_proc_U0_start_full_n <= ap_const_logic_1;
    Block_proc_U0_start_write <= ap_const_logic_0;
    ap_done <= Block_proc_U0_ap_done;
    ap_idle <= Block_proc_U0_ap_idle;
    ap_ready <= Block_proc_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_proc_U0_ap_done;
    ap_sync_ready <= Block_proc_U0_ap_ready;
end behav;
