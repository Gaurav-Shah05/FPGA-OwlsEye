-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity squeeze_1 is
port (
    in_0_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_0_V_V_empty_n : IN STD_LOGIC;
    in_0_V_V_read : OUT STD_LOGIC;
    in_1_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_1_V_V_empty_n : IN STD_LOGIC;
    in_1_V_V_read : OUT STD_LOGIC;
    in_2_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_2_V_V_empty_n : IN STD_LOGIC;
    in_2_V_V_read : OUT STD_LOGIC;
    in_3_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_3_V_V_empty_n : IN STD_LOGIC;
    in_3_V_V_read : OUT STD_LOGIC;
    in_4_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_4_V_V_empty_n : IN STD_LOGIC;
    in_4_V_V_read : OUT STD_LOGIC;
    in_5_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_5_V_V_empty_n : IN STD_LOGIC;
    in_5_V_V_read : OUT STD_LOGIC;
    in_6_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_6_V_V_empty_n : IN STD_LOGIC;
    in_6_V_V_read : OUT STD_LOGIC;
    in_7_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_7_V_V_empty_n : IN STD_LOGIC;
    in_7_V_V_read : OUT STD_LOGIC;
    in_8_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_8_V_V_empty_n : IN STD_LOGIC;
    in_8_V_V_read : OUT STD_LOGIC;
    in_9_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_9_V_V_empty_n : IN STD_LOGIC;
    in_9_V_V_read : OUT STD_LOGIC;
    in_10_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_10_V_V_empty_n : IN STD_LOGIC;
    in_10_V_V_read : OUT STD_LOGIC;
    in_11_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_11_V_V_empty_n : IN STD_LOGIC;
    in_11_V_V_read : OUT STD_LOGIC;
    in_12_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_12_V_V_empty_n : IN STD_LOGIC;
    in_12_V_V_read : OUT STD_LOGIC;
    in_13_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_13_V_V_empty_n : IN STD_LOGIC;
    in_13_V_V_read : OUT STD_LOGIC;
    in_14_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_14_V_V_empty_n : IN STD_LOGIC;
    in_14_V_V_read : OUT STD_LOGIC;
    in_15_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_15_V_V_empty_n : IN STD_LOGIC;
    in_15_V_V_read : OUT STD_LOGIC;
    out_0_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_0_V_V_full_n : IN STD_LOGIC;
    out_0_V_V_write : OUT STD_LOGIC;
    out_1_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_1_V_V_full_n : IN STD_LOGIC;
    out_1_V_V_write : OUT STD_LOGIC;
    out_2_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_2_V_V_full_n : IN STD_LOGIC;
    out_2_V_V_write : OUT STD_LOGIC;
    out_3_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_3_V_V_full_n : IN STD_LOGIC;
    out_3_V_V_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of squeeze_1 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal squeeze_in_1_U0_ap_start : STD_LOGIC;
    signal squeeze_in_1_U0_ap_done : STD_LOGIC;
    signal squeeze_in_1_U0_ap_continue : STD_LOGIC;
    signal squeeze_in_1_U0_ap_idle : STD_LOGIC;
    signal squeeze_in_1_U0_ap_ready : STD_LOGIC;
    signal squeeze_in_1_U0_start_out : STD_LOGIC;
    signal squeeze_in_1_U0_start_write : STD_LOGIC;
    signal squeeze_in_1_U0_in_0_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_1_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_2_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_3_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_4_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_5_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_6_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_7_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_8_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_9_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_10_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_11_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_12_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_13_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_14_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_in_15_V_V_read : STD_LOGIC;
    signal squeeze_in_1_U0_out_0_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_0_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_1_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_1_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_2_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_2_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_3_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_3_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_4_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_4_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_5_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_5_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_6_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_6_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_7_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_7_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_8_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_8_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_9_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_9_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_10_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_10_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_11_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_11_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_12_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_12_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_13_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_13_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_14_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_14_V_V_write : STD_LOGIC;
    signal squeeze_in_1_U0_out_15_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_in_1_U0_out_15_V_V_write : STD_LOGIC;
    signal squeeze_out_U0_ap_start : STD_LOGIC;
    signal squeeze_out_U0_ap_done : STD_LOGIC;
    signal squeeze_out_U0_ap_continue : STD_LOGIC;
    signal squeeze_out_U0_ap_idle : STD_LOGIC;
    signal squeeze_out_U0_ap_ready : STD_LOGIC;
    signal squeeze_out_U0_in_9_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_13_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_5_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_1_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_15_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_0_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_2_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_3_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_4_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_6_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_7_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_8_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_10_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_11_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_12_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_in_14_V_V_read : STD_LOGIC;
    signal squeeze_out_U0_out_0_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_out_U0_out_0_V_V_write : STD_LOGIC;
    signal squeeze_out_U0_out_1_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_out_U0_out_1_V_V_write : STD_LOGIC;
    signal squeeze_out_U0_out_2_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_out_U0_out_2_V_V_write : STD_LOGIC;
    signal squeeze_out_U0_out_3_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_out_U0_out_3_V_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal cache_0_full_n : STD_LOGIC;
    signal cache_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_0_empty_n : STD_LOGIC;
    signal cache_1_full_n : STD_LOGIC;
    signal cache_1_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_1_empty_n : STD_LOGIC;
    signal cache_2_full_n : STD_LOGIC;
    signal cache_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_2_empty_n : STD_LOGIC;
    signal cache_3_full_n : STD_LOGIC;
    signal cache_3_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_3_empty_n : STD_LOGIC;
    signal cache_4_full_n : STD_LOGIC;
    signal cache_4_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_4_empty_n : STD_LOGIC;
    signal cache_5_full_n : STD_LOGIC;
    signal cache_5_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_5_empty_n : STD_LOGIC;
    signal cache_6_full_n : STD_LOGIC;
    signal cache_6_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_6_empty_n : STD_LOGIC;
    signal cache_7_full_n : STD_LOGIC;
    signal cache_7_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_7_empty_n : STD_LOGIC;
    signal cache_8_full_n : STD_LOGIC;
    signal cache_8_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_8_empty_n : STD_LOGIC;
    signal cache_9_full_n : STD_LOGIC;
    signal cache_9_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_9_empty_n : STD_LOGIC;
    signal cache_10_full_n : STD_LOGIC;
    signal cache_10_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_10_empty_n : STD_LOGIC;
    signal cache_11_full_n : STD_LOGIC;
    signal cache_11_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_11_empty_n : STD_LOGIC;
    signal cache_12_full_n : STD_LOGIC;
    signal cache_12_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_12_empty_n : STD_LOGIC;
    signal cache_13_full_n : STD_LOGIC;
    signal cache_13_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_13_empty_n : STD_LOGIC;
    signal cache_14_full_n : STD_LOGIC;
    signal cache_14_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_14_empty_n : STD_LOGIC;
    signal cache_15_full_n : STD_LOGIC;
    signal cache_15_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal cache_15_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_squeeze_out_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_squeeze_out_U0_full_n : STD_LOGIC;
    signal start_for_squeeze_out_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_squeeze_out_U0_empty_n : STD_LOGIC;
    signal squeeze_out_U0_start_full_n : STD_LOGIC;
    signal squeeze_out_U0_start_write : STD_LOGIC;

    component squeeze_in_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        in_0_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_0_V_V_empty_n : IN STD_LOGIC;
        in_0_V_V_read : OUT STD_LOGIC;
        in_1_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_1_V_V_empty_n : IN STD_LOGIC;
        in_1_V_V_read : OUT STD_LOGIC;
        in_2_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_2_V_V_empty_n : IN STD_LOGIC;
        in_2_V_V_read : OUT STD_LOGIC;
        in_3_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_3_V_V_empty_n : IN STD_LOGIC;
        in_3_V_V_read : OUT STD_LOGIC;
        in_4_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_4_V_V_empty_n : IN STD_LOGIC;
        in_4_V_V_read : OUT STD_LOGIC;
        in_5_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_5_V_V_empty_n : IN STD_LOGIC;
        in_5_V_V_read : OUT STD_LOGIC;
        in_6_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_6_V_V_empty_n : IN STD_LOGIC;
        in_6_V_V_read : OUT STD_LOGIC;
        in_7_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_7_V_V_empty_n : IN STD_LOGIC;
        in_7_V_V_read : OUT STD_LOGIC;
        in_8_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_8_V_V_empty_n : IN STD_LOGIC;
        in_8_V_V_read : OUT STD_LOGIC;
        in_9_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_9_V_V_empty_n : IN STD_LOGIC;
        in_9_V_V_read : OUT STD_LOGIC;
        in_10_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_10_V_V_empty_n : IN STD_LOGIC;
        in_10_V_V_read : OUT STD_LOGIC;
        in_11_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_11_V_V_empty_n : IN STD_LOGIC;
        in_11_V_V_read : OUT STD_LOGIC;
        in_12_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_12_V_V_empty_n : IN STD_LOGIC;
        in_12_V_V_read : OUT STD_LOGIC;
        in_13_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_13_V_V_empty_n : IN STD_LOGIC;
        in_13_V_V_read : OUT STD_LOGIC;
        in_14_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_14_V_V_empty_n : IN STD_LOGIC;
        in_14_V_V_read : OUT STD_LOGIC;
        in_15_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_15_V_V_empty_n : IN STD_LOGIC;
        in_15_V_V_read : OUT STD_LOGIC;
        out_0_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_0_V_V_full_n : IN STD_LOGIC;
        out_0_V_V_write : OUT STD_LOGIC;
        out_1_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_1_V_V_full_n : IN STD_LOGIC;
        out_1_V_V_write : OUT STD_LOGIC;
        out_2_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_2_V_V_full_n : IN STD_LOGIC;
        out_2_V_V_write : OUT STD_LOGIC;
        out_3_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_3_V_V_full_n : IN STD_LOGIC;
        out_3_V_V_write : OUT STD_LOGIC;
        out_4_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_4_V_V_full_n : IN STD_LOGIC;
        out_4_V_V_write : OUT STD_LOGIC;
        out_5_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_5_V_V_full_n : IN STD_LOGIC;
        out_5_V_V_write : OUT STD_LOGIC;
        out_6_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_6_V_V_full_n : IN STD_LOGIC;
        out_6_V_V_write : OUT STD_LOGIC;
        out_7_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_7_V_V_full_n : IN STD_LOGIC;
        out_7_V_V_write : OUT STD_LOGIC;
        out_8_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_8_V_V_full_n : IN STD_LOGIC;
        out_8_V_V_write : OUT STD_LOGIC;
        out_9_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_9_V_V_full_n : IN STD_LOGIC;
        out_9_V_V_write : OUT STD_LOGIC;
        out_10_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_10_V_V_full_n : IN STD_LOGIC;
        out_10_V_V_write : OUT STD_LOGIC;
        out_11_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_11_V_V_full_n : IN STD_LOGIC;
        out_11_V_V_write : OUT STD_LOGIC;
        out_12_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_12_V_V_full_n : IN STD_LOGIC;
        out_12_V_V_write : OUT STD_LOGIC;
        out_13_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_13_V_V_full_n : IN STD_LOGIC;
        out_13_V_V_write : OUT STD_LOGIC;
        out_14_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_14_V_V_full_n : IN STD_LOGIC;
        out_14_V_V_write : OUT STD_LOGIC;
        out_15_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_15_V_V_full_n : IN STD_LOGIC;
        out_15_V_V_write : OUT STD_LOGIC );
    end component;


    component squeeze_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_9_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_9_V_V_empty_n : IN STD_LOGIC;
        in_9_V_V_read : OUT STD_LOGIC;
        in_13_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_13_V_V_empty_n : IN STD_LOGIC;
        in_13_V_V_read : OUT STD_LOGIC;
        in_5_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_5_V_V_empty_n : IN STD_LOGIC;
        in_5_V_V_read : OUT STD_LOGIC;
        in_1_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_1_V_V_empty_n : IN STD_LOGIC;
        in_1_V_V_read : OUT STD_LOGIC;
        in_15_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_15_V_V_empty_n : IN STD_LOGIC;
        in_15_V_V_read : OUT STD_LOGIC;
        in_0_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_0_V_V_empty_n : IN STD_LOGIC;
        in_0_V_V_read : OUT STD_LOGIC;
        in_2_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_2_V_V_empty_n : IN STD_LOGIC;
        in_2_V_V_read : OUT STD_LOGIC;
        in_3_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_3_V_V_empty_n : IN STD_LOGIC;
        in_3_V_V_read : OUT STD_LOGIC;
        in_4_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_4_V_V_empty_n : IN STD_LOGIC;
        in_4_V_V_read : OUT STD_LOGIC;
        in_6_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_6_V_V_empty_n : IN STD_LOGIC;
        in_6_V_V_read : OUT STD_LOGIC;
        in_7_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_7_V_V_empty_n : IN STD_LOGIC;
        in_7_V_V_read : OUT STD_LOGIC;
        in_8_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_8_V_V_empty_n : IN STD_LOGIC;
        in_8_V_V_read : OUT STD_LOGIC;
        in_10_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_10_V_V_empty_n : IN STD_LOGIC;
        in_10_V_V_read : OUT STD_LOGIC;
        in_11_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_11_V_V_empty_n : IN STD_LOGIC;
        in_11_V_V_read : OUT STD_LOGIC;
        in_12_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_12_V_V_empty_n : IN STD_LOGIC;
        in_12_V_V_read : OUT STD_LOGIC;
        in_14_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_14_V_V_empty_n : IN STD_LOGIC;
        in_14_V_V_read : OUT STD_LOGIC;
        out_0_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_0_V_V_full_n : IN STD_LOGIC;
        out_0_V_V_write : OUT STD_LOGIC;
        out_1_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_1_V_V_full_n : IN STD_LOGIC;
        out_1_V_V_write : OUT STD_LOGIC;
        out_2_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_2_V_V_full_n : IN STD_LOGIC;
        out_2_V_V_write : OUT STD_LOGIC;
        out_3_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_3_V_V_full_n : IN STD_LOGIC;
        out_3_V_V_write : OUT STD_LOGIC );
    end component;


    component fifo_w16_d2_A_x5 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_squeezebzo IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    squeeze_in_1_U0 : component squeeze_in_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => squeeze_in_1_U0_ap_start,
        start_full_n => start_for_squeeze_out_U0_full_n,
        ap_done => squeeze_in_1_U0_ap_done,
        ap_continue => squeeze_in_1_U0_ap_continue,
        ap_idle => squeeze_in_1_U0_ap_idle,
        ap_ready => squeeze_in_1_U0_ap_ready,
        start_out => squeeze_in_1_U0_start_out,
        start_write => squeeze_in_1_U0_start_write,
        in_0_V_V_dout => in_0_V_V_dout,
        in_0_V_V_empty_n => in_0_V_V_empty_n,
        in_0_V_V_read => squeeze_in_1_U0_in_0_V_V_read,
        in_1_V_V_dout => in_1_V_V_dout,
        in_1_V_V_empty_n => in_1_V_V_empty_n,
        in_1_V_V_read => squeeze_in_1_U0_in_1_V_V_read,
        in_2_V_V_dout => in_2_V_V_dout,
        in_2_V_V_empty_n => in_2_V_V_empty_n,
        in_2_V_V_read => squeeze_in_1_U0_in_2_V_V_read,
        in_3_V_V_dout => in_3_V_V_dout,
        in_3_V_V_empty_n => in_3_V_V_empty_n,
        in_3_V_V_read => squeeze_in_1_U0_in_3_V_V_read,
        in_4_V_V_dout => in_4_V_V_dout,
        in_4_V_V_empty_n => in_4_V_V_empty_n,
        in_4_V_V_read => squeeze_in_1_U0_in_4_V_V_read,
        in_5_V_V_dout => in_5_V_V_dout,
        in_5_V_V_empty_n => in_5_V_V_empty_n,
        in_5_V_V_read => squeeze_in_1_U0_in_5_V_V_read,
        in_6_V_V_dout => in_6_V_V_dout,
        in_6_V_V_empty_n => in_6_V_V_empty_n,
        in_6_V_V_read => squeeze_in_1_U0_in_6_V_V_read,
        in_7_V_V_dout => in_7_V_V_dout,
        in_7_V_V_empty_n => in_7_V_V_empty_n,
        in_7_V_V_read => squeeze_in_1_U0_in_7_V_V_read,
        in_8_V_V_dout => in_8_V_V_dout,
        in_8_V_V_empty_n => in_8_V_V_empty_n,
        in_8_V_V_read => squeeze_in_1_U0_in_8_V_V_read,
        in_9_V_V_dout => in_9_V_V_dout,
        in_9_V_V_empty_n => in_9_V_V_empty_n,
        in_9_V_V_read => squeeze_in_1_U0_in_9_V_V_read,
        in_10_V_V_dout => in_10_V_V_dout,
        in_10_V_V_empty_n => in_10_V_V_empty_n,
        in_10_V_V_read => squeeze_in_1_U0_in_10_V_V_read,
        in_11_V_V_dout => in_11_V_V_dout,
        in_11_V_V_empty_n => in_11_V_V_empty_n,
        in_11_V_V_read => squeeze_in_1_U0_in_11_V_V_read,
        in_12_V_V_dout => in_12_V_V_dout,
        in_12_V_V_empty_n => in_12_V_V_empty_n,
        in_12_V_V_read => squeeze_in_1_U0_in_12_V_V_read,
        in_13_V_V_dout => in_13_V_V_dout,
        in_13_V_V_empty_n => in_13_V_V_empty_n,
        in_13_V_V_read => squeeze_in_1_U0_in_13_V_V_read,
        in_14_V_V_dout => in_14_V_V_dout,
        in_14_V_V_empty_n => in_14_V_V_empty_n,
        in_14_V_V_read => squeeze_in_1_U0_in_14_V_V_read,
        in_15_V_V_dout => in_15_V_V_dout,
        in_15_V_V_empty_n => in_15_V_V_empty_n,
        in_15_V_V_read => squeeze_in_1_U0_in_15_V_V_read,
        out_0_V_V_din => squeeze_in_1_U0_out_0_V_V_din,
        out_0_V_V_full_n => cache_0_full_n,
        out_0_V_V_write => squeeze_in_1_U0_out_0_V_V_write,
        out_1_V_V_din => squeeze_in_1_U0_out_1_V_V_din,
        out_1_V_V_full_n => cache_1_full_n,
        out_1_V_V_write => squeeze_in_1_U0_out_1_V_V_write,
        out_2_V_V_din => squeeze_in_1_U0_out_2_V_V_din,
        out_2_V_V_full_n => cache_2_full_n,
        out_2_V_V_write => squeeze_in_1_U0_out_2_V_V_write,
        out_3_V_V_din => squeeze_in_1_U0_out_3_V_V_din,
        out_3_V_V_full_n => cache_3_full_n,
        out_3_V_V_write => squeeze_in_1_U0_out_3_V_V_write,
        out_4_V_V_din => squeeze_in_1_U0_out_4_V_V_din,
        out_4_V_V_full_n => cache_4_full_n,
        out_4_V_V_write => squeeze_in_1_U0_out_4_V_V_write,
        out_5_V_V_din => squeeze_in_1_U0_out_5_V_V_din,
        out_5_V_V_full_n => cache_5_full_n,
        out_5_V_V_write => squeeze_in_1_U0_out_5_V_V_write,
        out_6_V_V_din => squeeze_in_1_U0_out_6_V_V_din,
        out_6_V_V_full_n => cache_6_full_n,
        out_6_V_V_write => squeeze_in_1_U0_out_6_V_V_write,
        out_7_V_V_din => squeeze_in_1_U0_out_7_V_V_din,
        out_7_V_V_full_n => cache_7_full_n,
        out_7_V_V_write => squeeze_in_1_U0_out_7_V_V_write,
        out_8_V_V_din => squeeze_in_1_U0_out_8_V_V_din,
        out_8_V_V_full_n => cache_8_full_n,
        out_8_V_V_write => squeeze_in_1_U0_out_8_V_V_write,
        out_9_V_V_din => squeeze_in_1_U0_out_9_V_V_din,
        out_9_V_V_full_n => cache_9_full_n,
        out_9_V_V_write => squeeze_in_1_U0_out_9_V_V_write,
        out_10_V_V_din => squeeze_in_1_U0_out_10_V_V_din,
        out_10_V_V_full_n => cache_10_full_n,
        out_10_V_V_write => squeeze_in_1_U0_out_10_V_V_write,
        out_11_V_V_din => squeeze_in_1_U0_out_11_V_V_din,
        out_11_V_V_full_n => cache_11_full_n,
        out_11_V_V_write => squeeze_in_1_U0_out_11_V_V_write,
        out_12_V_V_din => squeeze_in_1_U0_out_12_V_V_din,
        out_12_V_V_full_n => cache_12_full_n,
        out_12_V_V_write => squeeze_in_1_U0_out_12_V_V_write,
        out_13_V_V_din => squeeze_in_1_U0_out_13_V_V_din,
        out_13_V_V_full_n => cache_13_full_n,
        out_13_V_V_write => squeeze_in_1_U0_out_13_V_V_write,
        out_14_V_V_din => squeeze_in_1_U0_out_14_V_V_din,
        out_14_V_V_full_n => cache_14_full_n,
        out_14_V_V_write => squeeze_in_1_U0_out_14_V_V_write,
        out_15_V_V_din => squeeze_in_1_U0_out_15_V_V_din,
        out_15_V_V_full_n => cache_15_full_n,
        out_15_V_V_write => squeeze_in_1_U0_out_15_V_V_write);

    squeeze_out_U0 : component squeeze_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => squeeze_out_U0_ap_start,
        ap_done => squeeze_out_U0_ap_done,
        ap_continue => squeeze_out_U0_ap_continue,
        ap_idle => squeeze_out_U0_ap_idle,
        ap_ready => squeeze_out_U0_ap_ready,
        in_9_V_V_dout => cache_9_dout,
        in_9_V_V_empty_n => cache_9_empty_n,
        in_9_V_V_read => squeeze_out_U0_in_9_V_V_read,
        in_13_V_V_dout => cache_13_dout,
        in_13_V_V_empty_n => cache_13_empty_n,
        in_13_V_V_read => squeeze_out_U0_in_13_V_V_read,
        in_5_V_V_dout => cache_5_dout,
        in_5_V_V_empty_n => cache_5_empty_n,
        in_5_V_V_read => squeeze_out_U0_in_5_V_V_read,
        in_1_V_V_dout => cache_1_dout,
        in_1_V_V_empty_n => cache_1_empty_n,
        in_1_V_V_read => squeeze_out_U0_in_1_V_V_read,
        in_15_V_V_dout => cache_15_dout,
        in_15_V_V_empty_n => cache_15_empty_n,
        in_15_V_V_read => squeeze_out_U0_in_15_V_V_read,
        in_0_V_V_dout => cache_0_dout,
        in_0_V_V_empty_n => cache_0_empty_n,
        in_0_V_V_read => squeeze_out_U0_in_0_V_V_read,
        in_2_V_V_dout => cache_2_dout,
        in_2_V_V_empty_n => cache_2_empty_n,
        in_2_V_V_read => squeeze_out_U0_in_2_V_V_read,
        in_3_V_V_dout => cache_3_dout,
        in_3_V_V_empty_n => cache_3_empty_n,
        in_3_V_V_read => squeeze_out_U0_in_3_V_V_read,
        in_4_V_V_dout => cache_4_dout,
        in_4_V_V_empty_n => cache_4_empty_n,
        in_4_V_V_read => squeeze_out_U0_in_4_V_V_read,
        in_6_V_V_dout => cache_6_dout,
        in_6_V_V_empty_n => cache_6_empty_n,
        in_6_V_V_read => squeeze_out_U0_in_6_V_V_read,
        in_7_V_V_dout => cache_7_dout,
        in_7_V_V_empty_n => cache_7_empty_n,
        in_7_V_V_read => squeeze_out_U0_in_7_V_V_read,
        in_8_V_V_dout => cache_8_dout,
        in_8_V_V_empty_n => cache_8_empty_n,
        in_8_V_V_read => squeeze_out_U0_in_8_V_V_read,
        in_10_V_V_dout => cache_10_dout,
        in_10_V_V_empty_n => cache_10_empty_n,
        in_10_V_V_read => squeeze_out_U0_in_10_V_V_read,
        in_11_V_V_dout => cache_11_dout,
        in_11_V_V_empty_n => cache_11_empty_n,
        in_11_V_V_read => squeeze_out_U0_in_11_V_V_read,
        in_12_V_V_dout => cache_12_dout,
        in_12_V_V_empty_n => cache_12_empty_n,
        in_12_V_V_read => squeeze_out_U0_in_12_V_V_read,
        in_14_V_V_dout => cache_14_dout,
        in_14_V_V_empty_n => cache_14_empty_n,
        in_14_V_V_read => squeeze_out_U0_in_14_V_V_read,
        out_0_V_V_din => squeeze_out_U0_out_0_V_V_din,
        out_0_V_V_full_n => out_0_V_V_full_n,
        out_0_V_V_write => squeeze_out_U0_out_0_V_V_write,
        out_1_V_V_din => squeeze_out_U0_out_1_V_V_din,
        out_1_V_V_full_n => out_1_V_V_full_n,
        out_1_V_V_write => squeeze_out_U0_out_1_V_V_write,
        out_2_V_V_din => squeeze_out_U0_out_2_V_V_din,
        out_2_V_V_full_n => out_2_V_V_full_n,
        out_2_V_V_write => squeeze_out_U0_out_2_V_V_write,
        out_3_V_V_din => squeeze_out_U0_out_3_V_V_din,
        out_3_V_V_full_n => out_3_V_V_full_n,
        out_3_V_V_write => squeeze_out_U0_out_3_V_V_write);

    cache_0_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_0_V_V_din,
        if_full_n => cache_0_full_n,
        if_write => squeeze_in_1_U0_out_0_V_V_write,
        if_dout => cache_0_dout,
        if_empty_n => cache_0_empty_n,
        if_read => squeeze_out_U0_in_0_V_V_read);

    cache_1_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_1_V_V_din,
        if_full_n => cache_1_full_n,
        if_write => squeeze_in_1_U0_out_1_V_V_write,
        if_dout => cache_1_dout,
        if_empty_n => cache_1_empty_n,
        if_read => squeeze_out_U0_in_1_V_V_read);

    cache_2_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_2_V_V_din,
        if_full_n => cache_2_full_n,
        if_write => squeeze_in_1_U0_out_2_V_V_write,
        if_dout => cache_2_dout,
        if_empty_n => cache_2_empty_n,
        if_read => squeeze_out_U0_in_2_V_V_read);

    cache_3_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_3_V_V_din,
        if_full_n => cache_3_full_n,
        if_write => squeeze_in_1_U0_out_3_V_V_write,
        if_dout => cache_3_dout,
        if_empty_n => cache_3_empty_n,
        if_read => squeeze_out_U0_in_3_V_V_read);

    cache_4_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_4_V_V_din,
        if_full_n => cache_4_full_n,
        if_write => squeeze_in_1_U0_out_4_V_V_write,
        if_dout => cache_4_dout,
        if_empty_n => cache_4_empty_n,
        if_read => squeeze_out_U0_in_4_V_V_read);

    cache_5_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_5_V_V_din,
        if_full_n => cache_5_full_n,
        if_write => squeeze_in_1_U0_out_5_V_V_write,
        if_dout => cache_5_dout,
        if_empty_n => cache_5_empty_n,
        if_read => squeeze_out_U0_in_5_V_V_read);

    cache_6_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_6_V_V_din,
        if_full_n => cache_6_full_n,
        if_write => squeeze_in_1_U0_out_6_V_V_write,
        if_dout => cache_6_dout,
        if_empty_n => cache_6_empty_n,
        if_read => squeeze_out_U0_in_6_V_V_read);

    cache_7_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_7_V_V_din,
        if_full_n => cache_7_full_n,
        if_write => squeeze_in_1_U0_out_7_V_V_write,
        if_dout => cache_7_dout,
        if_empty_n => cache_7_empty_n,
        if_read => squeeze_out_U0_in_7_V_V_read);

    cache_8_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_8_V_V_din,
        if_full_n => cache_8_full_n,
        if_write => squeeze_in_1_U0_out_8_V_V_write,
        if_dout => cache_8_dout,
        if_empty_n => cache_8_empty_n,
        if_read => squeeze_out_U0_in_8_V_V_read);

    cache_9_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_9_V_V_din,
        if_full_n => cache_9_full_n,
        if_write => squeeze_in_1_U0_out_9_V_V_write,
        if_dout => cache_9_dout,
        if_empty_n => cache_9_empty_n,
        if_read => squeeze_out_U0_in_9_V_V_read);

    cache_10_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_10_V_V_din,
        if_full_n => cache_10_full_n,
        if_write => squeeze_in_1_U0_out_10_V_V_write,
        if_dout => cache_10_dout,
        if_empty_n => cache_10_empty_n,
        if_read => squeeze_out_U0_in_10_V_V_read);

    cache_11_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_11_V_V_din,
        if_full_n => cache_11_full_n,
        if_write => squeeze_in_1_U0_out_11_V_V_write,
        if_dout => cache_11_dout,
        if_empty_n => cache_11_empty_n,
        if_read => squeeze_out_U0_in_11_V_V_read);

    cache_12_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_12_V_V_din,
        if_full_n => cache_12_full_n,
        if_write => squeeze_in_1_U0_out_12_V_V_write,
        if_dout => cache_12_dout,
        if_empty_n => cache_12_empty_n,
        if_read => squeeze_out_U0_in_12_V_V_read);

    cache_13_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_13_V_V_din,
        if_full_n => cache_13_full_n,
        if_write => squeeze_in_1_U0_out_13_V_V_write,
        if_dout => cache_13_dout,
        if_empty_n => cache_13_empty_n,
        if_read => squeeze_out_U0_in_13_V_V_read);

    cache_14_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_14_V_V_din,
        if_full_n => cache_14_full_n,
        if_write => squeeze_in_1_U0_out_14_V_V_write,
        if_dout => cache_14_dout,
        if_empty_n => cache_14_empty_n,
        if_read => squeeze_out_U0_in_14_V_V_read);

    cache_15_U : component fifo_w16_d2_A_x5
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => squeeze_in_1_U0_out_15_V_V_din,
        if_full_n => cache_15_full_n,
        if_write => squeeze_in_1_U0_out_15_V_V_write,
        if_dout => cache_15_dout,
        if_empty_n => cache_15_empty_n,
        if_read => squeeze_out_U0_in_15_V_V_read);

    start_for_squeezebzo_U : component start_for_squeezebzo
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_squeeze_out_U0_din,
        if_full_n => start_for_squeeze_out_U0_full_n,
        if_write => squeeze_in_1_U0_start_write,
        if_dout => start_for_squeeze_out_U0_dout,
        if_empty_n => start_for_squeeze_out_U0_empty_n,
        if_read => squeeze_out_U0_ap_ready);




    ap_done <= squeeze_out_U0_ap_done;
    ap_idle <= (squeeze_out_U0_ap_idle and squeeze_in_1_U0_ap_idle);
    ap_ready <= squeeze_in_1_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= squeeze_out_U0_ap_done;
    ap_sync_ready <= squeeze_in_1_U0_ap_ready;
    in_0_V_V_read <= squeeze_in_1_U0_in_0_V_V_read;
    in_10_V_V_read <= squeeze_in_1_U0_in_10_V_V_read;
    in_11_V_V_read <= squeeze_in_1_U0_in_11_V_V_read;
    in_12_V_V_read <= squeeze_in_1_U0_in_12_V_V_read;
    in_13_V_V_read <= squeeze_in_1_U0_in_13_V_V_read;
    in_14_V_V_read <= squeeze_in_1_U0_in_14_V_V_read;
    in_15_V_V_read <= squeeze_in_1_U0_in_15_V_V_read;
    in_1_V_V_read <= squeeze_in_1_U0_in_1_V_V_read;
    in_2_V_V_read <= squeeze_in_1_U0_in_2_V_V_read;
    in_3_V_V_read <= squeeze_in_1_U0_in_3_V_V_read;
    in_4_V_V_read <= squeeze_in_1_U0_in_4_V_V_read;
    in_5_V_V_read <= squeeze_in_1_U0_in_5_V_V_read;
    in_6_V_V_read <= squeeze_in_1_U0_in_6_V_V_read;
    in_7_V_V_read <= squeeze_in_1_U0_in_7_V_V_read;
    in_8_V_V_read <= squeeze_in_1_U0_in_8_V_V_read;
    in_9_V_V_read <= squeeze_in_1_U0_in_9_V_V_read;
    out_0_V_V_din <= squeeze_out_U0_out_0_V_V_din;
    out_0_V_V_write <= squeeze_out_U0_out_0_V_V_write;
    out_1_V_V_din <= squeeze_out_U0_out_1_V_V_din;
    out_1_V_V_write <= squeeze_out_U0_out_1_V_V_write;
    out_2_V_V_din <= squeeze_out_U0_out_2_V_V_din;
    out_2_V_V_write <= squeeze_out_U0_out_2_V_V_write;
    out_3_V_V_din <= squeeze_out_U0_out_3_V_V_din;
    out_3_V_V_write <= squeeze_out_U0_out_3_V_V_write;
    squeeze_in_1_U0_ap_continue <= ap_const_logic_1;
    squeeze_in_1_U0_ap_start <= ap_start;
    squeeze_out_U0_ap_continue <= ap_continue;
    squeeze_out_U0_ap_start <= start_for_squeeze_out_U0_empty_n;
    squeeze_out_U0_start_full_n <= ap_const_logic_1;
    squeeze_out_U0_start_write <= ap_const_logic_0;
    start_for_squeeze_out_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
