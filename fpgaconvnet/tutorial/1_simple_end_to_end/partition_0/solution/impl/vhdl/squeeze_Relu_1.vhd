-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity squeeze_Relu_1 is
port (
    in_0_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_0_V_V_empty_n : IN STD_LOGIC;
    in_0_V_V_read : OUT STD_LOGIC;
    in_1_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_1_V_V_empty_n : IN STD_LOGIC;
    in_1_V_V_read : OUT STD_LOGIC;
    in_2_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_2_V_V_empty_n : IN STD_LOGIC;
    in_2_V_V_read : OUT STD_LOGIC;
    in_3_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_3_V_V_empty_n : IN STD_LOGIC;
    in_3_V_V_read : OUT STD_LOGIC;
    in_4_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_4_V_V_empty_n : IN STD_LOGIC;
    in_4_V_V_read : OUT STD_LOGIC;
    in_5_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_5_V_V_empty_n : IN STD_LOGIC;
    in_5_V_V_read : OUT STD_LOGIC;
    in_6_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_6_V_V_empty_n : IN STD_LOGIC;
    in_6_V_V_read : OUT STD_LOGIC;
    in_7_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_7_V_V_empty_n : IN STD_LOGIC;
    in_7_V_V_read : OUT STD_LOGIC;
    in_8_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_8_V_V_empty_n : IN STD_LOGIC;
    in_8_V_V_read : OUT STD_LOGIC;
    in_9_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_9_V_V_empty_n : IN STD_LOGIC;
    in_9_V_V_read : OUT STD_LOGIC;
    in_10_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_10_V_V_empty_n : IN STD_LOGIC;
    in_10_V_V_read : OUT STD_LOGIC;
    in_11_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_11_V_V_empty_n : IN STD_LOGIC;
    in_11_V_V_read : OUT STD_LOGIC;
    in_12_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_12_V_V_empty_n : IN STD_LOGIC;
    in_12_V_V_read : OUT STD_LOGIC;
    in_13_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_13_V_V_empty_n : IN STD_LOGIC;
    in_13_V_V_read : OUT STD_LOGIC;
    in_14_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_14_V_V_empty_n : IN STD_LOGIC;
    in_14_V_V_read : OUT STD_LOGIC;
    in_15_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    in_15_V_V_empty_n : IN STD_LOGIC;
    in_15_V_V_read : OUT STD_LOGIC;
    out_0_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_0_V_V_full_n : IN STD_LOGIC;
    out_0_V_V_write : OUT STD_LOGIC;
    out_1_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_1_V_V_full_n : IN STD_LOGIC;
    out_1_V_V_write : OUT STD_LOGIC;
    out_2_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_2_V_V_full_n : IN STD_LOGIC;
    out_2_V_V_write : OUT STD_LOGIC;
    out_3_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_3_V_V_full_n : IN STD_LOGIC;
    out_3_V_V_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of squeeze_Relu_1 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal squeeze_1_U0_in_0_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_1_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_2_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_3_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_4_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_5_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_6_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_7_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_8_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_9_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_10_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_11_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_12_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_13_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_14_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_in_15_V_V_read : STD_LOGIC;
    signal squeeze_1_U0_out_0_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_1_U0_out_0_V_V_write : STD_LOGIC;
    signal squeeze_1_U0_out_1_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_1_U0_out_1_V_V_write : STD_LOGIC;
    signal squeeze_1_U0_out_2_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_1_U0_out_2_V_V_write : STD_LOGIC;
    signal squeeze_1_U0_out_3_V_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal squeeze_1_U0_out_3_V_V_write : STD_LOGIC;
    signal squeeze_1_U0_ap_start : STD_LOGIC;
    signal squeeze_1_U0_ap_done : STD_LOGIC;
    signal squeeze_1_U0_ap_ready : STD_LOGIC;
    signal squeeze_1_U0_ap_idle : STD_LOGIC;
    signal squeeze_1_U0_ap_continue : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal squeeze_1_U0_start_full_n : STD_LOGIC;
    signal squeeze_1_U0_start_write : STD_LOGIC;

    component squeeze_1 IS
    port (
        in_0_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_0_V_V_empty_n : IN STD_LOGIC;
        in_0_V_V_read : OUT STD_LOGIC;
        in_1_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_1_V_V_empty_n : IN STD_LOGIC;
        in_1_V_V_read : OUT STD_LOGIC;
        in_2_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_2_V_V_empty_n : IN STD_LOGIC;
        in_2_V_V_read : OUT STD_LOGIC;
        in_3_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_3_V_V_empty_n : IN STD_LOGIC;
        in_3_V_V_read : OUT STD_LOGIC;
        in_4_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_4_V_V_empty_n : IN STD_LOGIC;
        in_4_V_V_read : OUT STD_LOGIC;
        in_5_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_5_V_V_empty_n : IN STD_LOGIC;
        in_5_V_V_read : OUT STD_LOGIC;
        in_6_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_6_V_V_empty_n : IN STD_LOGIC;
        in_6_V_V_read : OUT STD_LOGIC;
        in_7_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_7_V_V_empty_n : IN STD_LOGIC;
        in_7_V_V_read : OUT STD_LOGIC;
        in_8_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_8_V_V_empty_n : IN STD_LOGIC;
        in_8_V_V_read : OUT STD_LOGIC;
        in_9_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_9_V_V_empty_n : IN STD_LOGIC;
        in_9_V_V_read : OUT STD_LOGIC;
        in_10_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_10_V_V_empty_n : IN STD_LOGIC;
        in_10_V_V_read : OUT STD_LOGIC;
        in_11_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_11_V_V_empty_n : IN STD_LOGIC;
        in_11_V_V_read : OUT STD_LOGIC;
        in_12_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_12_V_V_empty_n : IN STD_LOGIC;
        in_12_V_V_read : OUT STD_LOGIC;
        in_13_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_13_V_V_empty_n : IN STD_LOGIC;
        in_13_V_V_read : OUT STD_LOGIC;
        in_14_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_14_V_V_empty_n : IN STD_LOGIC;
        in_14_V_V_read : OUT STD_LOGIC;
        in_15_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_15_V_V_empty_n : IN STD_LOGIC;
        in_15_V_V_read : OUT STD_LOGIC;
        out_0_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_0_V_V_full_n : IN STD_LOGIC;
        out_0_V_V_write : OUT STD_LOGIC;
        out_1_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_1_V_V_full_n : IN STD_LOGIC;
        out_1_V_V_write : OUT STD_LOGIC;
        out_2_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_2_V_V_full_n : IN STD_LOGIC;
        out_2_V_V_write : OUT STD_LOGIC;
        out_3_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_3_V_V_full_n : IN STD_LOGIC;
        out_3_V_V_write : OUT STD_LOGIC;
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    squeeze_1_U0 : component squeeze_1
    port map (
        in_0_V_V_dout => in_0_V_V_dout,
        in_0_V_V_empty_n => in_0_V_V_empty_n,
        in_0_V_V_read => squeeze_1_U0_in_0_V_V_read,
        in_1_V_V_dout => in_1_V_V_dout,
        in_1_V_V_empty_n => in_1_V_V_empty_n,
        in_1_V_V_read => squeeze_1_U0_in_1_V_V_read,
        in_2_V_V_dout => in_2_V_V_dout,
        in_2_V_V_empty_n => in_2_V_V_empty_n,
        in_2_V_V_read => squeeze_1_U0_in_2_V_V_read,
        in_3_V_V_dout => in_3_V_V_dout,
        in_3_V_V_empty_n => in_3_V_V_empty_n,
        in_3_V_V_read => squeeze_1_U0_in_3_V_V_read,
        in_4_V_V_dout => in_4_V_V_dout,
        in_4_V_V_empty_n => in_4_V_V_empty_n,
        in_4_V_V_read => squeeze_1_U0_in_4_V_V_read,
        in_5_V_V_dout => in_5_V_V_dout,
        in_5_V_V_empty_n => in_5_V_V_empty_n,
        in_5_V_V_read => squeeze_1_U0_in_5_V_V_read,
        in_6_V_V_dout => in_6_V_V_dout,
        in_6_V_V_empty_n => in_6_V_V_empty_n,
        in_6_V_V_read => squeeze_1_U0_in_6_V_V_read,
        in_7_V_V_dout => in_7_V_V_dout,
        in_7_V_V_empty_n => in_7_V_V_empty_n,
        in_7_V_V_read => squeeze_1_U0_in_7_V_V_read,
        in_8_V_V_dout => in_8_V_V_dout,
        in_8_V_V_empty_n => in_8_V_V_empty_n,
        in_8_V_V_read => squeeze_1_U0_in_8_V_V_read,
        in_9_V_V_dout => in_9_V_V_dout,
        in_9_V_V_empty_n => in_9_V_V_empty_n,
        in_9_V_V_read => squeeze_1_U0_in_9_V_V_read,
        in_10_V_V_dout => in_10_V_V_dout,
        in_10_V_V_empty_n => in_10_V_V_empty_n,
        in_10_V_V_read => squeeze_1_U0_in_10_V_V_read,
        in_11_V_V_dout => in_11_V_V_dout,
        in_11_V_V_empty_n => in_11_V_V_empty_n,
        in_11_V_V_read => squeeze_1_U0_in_11_V_V_read,
        in_12_V_V_dout => in_12_V_V_dout,
        in_12_V_V_empty_n => in_12_V_V_empty_n,
        in_12_V_V_read => squeeze_1_U0_in_12_V_V_read,
        in_13_V_V_dout => in_13_V_V_dout,
        in_13_V_V_empty_n => in_13_V_V_empty_n,
        in_13_V_V_read => squeeze_1_U0_in_13_V_V_read,
        in_14_V_V_dout => in_14_V_V_dout,
        in_14_V_V_empty_n => in_14_V_V_empty_n,
        in_14_V_V_read => squeeze_1_U0_in_14_V_V_read,
        in_15_V_V_dout => in_15_V_V_dout,
        in_15_V_V_empty_n => in_15_V_V_empty_n,
        in_15_V_V_read => squeeze_1_U0_in_15_V_V_read,
        out_0_V_V_din => squeeze_1_U0_out_0_V_V_din,
        out_0_V_V_full_n => out_0_V_V_full_n,
        out_0_V_V_write => squeeze_1_U0_out_0_V_V_write,
        out_1_V_V_din => squeeze_1_U0_out_1_V_V_din,
        out_1_V_V_full_n => out_1_V_V_full_n,
        out_1_V_V_write => squeeze_1_U0_out_1_V_V_write,
        out_2_V_V_din => squeeze_1_U0_out_2_V_V_din,
        out_2_V_V_full_n => out_2_V_V_full_n,
        out_2_V_V_write => squeeze_1_U0_out_2_V_V_write,
        out_3_V_V_din => squeeze_1_U0_out_3_V_V_din,
        out_3_V_V_full_n => out_3_V_V_full_n,
        out_3_V_V_write => squeeze_1_U0_out_3_V_V_write,
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => squeeze_1_U0_ap_start,
        ap_done => squeeze_1_U0_ap_done,
        ap_ready => squeeze_1_U0_ap_ready,
        ap_idle => squeeze_1_U0_ap_idle,
        ap_continue => squeeze_1_U0_ap_continue);




    ap_done <= squeeze_1_U0_ap_done;
    ap_idle <= squeeze_1_U0_ap_idle;
    ap_ready <= squeeze_1_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= squeeze_1_U0_ap_done;
    ap_sync_ready <= squeeze_1_U0_ap_ready;
    in_0_V_V_read <= squeeze_1_U0_in_0_V_V_read;
    in_10_V_V_read <= squeeze_1_U0_in_10_V_V_read;
    in_11_V_V_read <= squeeze_1_U0_in_11_V_V_read;
    in_12_V_V_read <= squeeze_1_U0_in_12_V_V_read;
    in_13_V_V_read <= squeeze_1_U0_in_13_V_V_read;
    in_14_V_V_read <= squeeze_1_U0_in_14_V_V_read;
    in_15_V_V_read <= squeeze_1_U0_in_15_V_V_read;
    in_1_V_V_read <= squeeze_1_U0_in_1_V_V_read;
    in_2_V_V_read <= squeeze_1_U0_in_2_V_V_read;
    in_3_V_V_read <= squeeze_1_U0_in_3_V_V_read;
    in_4_V_V_read <= squeeze_1_U0_in_4_V_V_read;
    in_5_V_V_read <= squeeze_1_U0_in_5_V_V_read;
    in_6_V_V_read <= squeeze_1_U0_in_6_V_V_read;
    in_7_V_V_read <= squeeze_1_U0_in_7_V_V_read;
    in_8_V_V_read <= squeeze_1_U0_in_8_V_V_read;
    in_9_V_V_read <= squeeze_1_U0_in_9_V_V_read;
    out_0_V_V_din <= squeeze_1_U0_out_0_V_V_din;
    out_0_V_V_write <= squeeze_1_U0_out_0_V_V_write;
    out_1_V_V_din <= squeeze_1_U0_out_1_V_V_din;
    out_1_V_V_write <= squeeze_1_U0_out_1_V_V_write;
    out_2_V_V_din <= squeeze_1_U0_out_2_V_V_din;
    out_2_V_V_write <= squeeze_1_U0_out_2_V_V_write;
    out_3_V_V_din <= squeeze_1_U0_out_3_V_V_din;
    out_3_V_V_write <= squeeze_1_U0_out_3_V_V_write;
    squeeze_1_U0_ap_continue <= ap_continue;
    squeeze_1_U0_ap_start <= ap_start;
    squeeze_1_U0_start_full_n <= ap_const_logic_1;
    squeeze_1_U0_start_write <= ap_const_logic_0;
end behav;
