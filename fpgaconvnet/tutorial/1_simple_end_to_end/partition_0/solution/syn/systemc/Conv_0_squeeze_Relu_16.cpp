// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Conv_0_squeeze_Relu_16.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Conv_0_squeeze_Relu_16::ap_const_logic_0 = sc_dt::Log_0;
const bool Conv_0_squeeze_Relu_16::ap_const_boolean_1 = true;
const sc_logic Conv_0_squeeze_Relu_16::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<16> Conv_0_squeeze_Relu_16::ap_const_lv16_0 = "0000000000000000";

Conv_0_squeeze_Relu_16::Conv_0_squeeze_Relu_16(sc_module_name name) : sc_module(name), mVcdFile(0) {
    squeeze_U0 = new squeeze("squeeze_U0");
    squeeze_U0->in_0_V_V_dout(in_0_V_V_dout);
    squeeze_U0->in_0_V_V_empty_n(in_0_V_V_empty_n);
    squeeze_U0->in_0_V_V_read(squeeze_U0_in_0_V_V_read);
    squeeze_U0->in_1_V_V_dout(in_1_V_V_dout);
    squeeze_U0->in_1_V_V_empty_n(in_1_V_V_empty_n);
    squeeze_U0->in_1_V_V_read(squeeze_U0_in_1_V_V_read);
    squeeze_U0->in_2_V_V_dout(in_2_V_V_dout);
    squeeze_U0->in_2_V_V_empty_n(in_2_V_V_empty_n);
    squeeze_U0->in_2_V_V_read(squeeze_U0_in_2_V_V_read);
    squeeze_U0->in_3_V_V_dout(in_3_V_V_dout);
    squeeze_U0->in_3_V_V_empty_n(in_3_V_V_empty_n);
    squeeze_U0->in_3_V_V_read(squeeze_U0_in_3_V_V_read);
    squeeze_U0->out_0_V_V_din(squeeze_U0_out_0_V_V_din);
    squeeze_U0->out_0_V_V_full_n(out_0_V_V_full_n);
    squeeze_U0->out_0_V_V_write(squeeze_U0_out_0_V_V_write);
    squeeze_U0->out_1_V_V_din(squeeze_U0_out_1_V_V_din);
    squeeze_U0->out_1_V_V_full_n(out_1_V_V_full_n);
    squeeze_U0->out_1_V_V_write(squeeze_U0_out_1_V_V_write);
    squeeze_U0->out_2_V_V_din(squeeze_U0_out_2_V_V_din);
    squeeze_U0->out_2_V_V_full_n(out_2_V_V_full_n);
    squeeze_U0->out_2_V_V_write(squeeze_U0_out_2_V_V_write);
    squeeze_U0->out_3_V_V_din(squeeze_U0_out_3_V_V_din);
    squeeze_U0->out_3_V_V_full_n(out_3_V_V_full_n);
    squeeze_U0->out_3_V_V_write(squeeze_U0_out_3_V_V_write);
    squeeze_U0->out_4_V_V_din(squeeze_U0_out_4_V_V_din);
    squeeze_U0->out_4_V_V_full_n(out_4_V_V_full_n);
    squeeze_U0->out_4_V_V_write(squeeze_U0_out_4_V_V_write);
    squeeze_U0->out_5_V_V_din(squeeze_U0_out_5_V_V_din);
    squeeze_U0->out_5_V_V_full_n(out_5_V_V_full_n);
    squeeze_U0->out_5_V_V_write(squeeze_U0_out_5_V_V_write);
    squeeze_U0->out_6_V_V_din(squeeze_U0_out_6_V_V_din);
    squeeze_U0->out_6_V_V_full_n(out_6_V_V_full_n);
    squeeze_U0->out_6_V_V_write(squeeze_U0_out_6_V_V_write);
    squeeze_U0->out_7_V_V_din(squeeze_U0_out_7_V_V_din);
    squeeze_U0->out_7_V_V_full_n(out_7_V_V_full_n);
    squeeze_U0->out_7_V_V_write(squeeze_U0_out_7_V_V_write);
    squeeze_U0->out_8_V_V_din(squeeze_U0_out_8_V_V_din);
    squeeze_U0->out_8_V_V_full_n(out_8_V_V_full_n);
    squeeze_U0->out_8_V_V_write(squeeze_U0_out_8_V_V_write);
    squeeze_U0->out_9_V_V_din(squeeze_U0_out_9_V_V_din);
    squeeze_U0->out_9_V_V_full_n(out_9_V_V_full_n);
    squeeze_U0->out_9_V_V_write(squeeze_U0_out_9_V_V_write);
    squeeze_U0->out_10_V_V_din(squeeze_U0_out_10_V_V_din);
    squeeze_U0->out_10_V_V_full_n(out_10_V_V_full_n);
    squeeze_U0->out_10_V_V_write(squeeze_U0_out_10_V_V_write);
    squeeze_U0->out_11_V_V_din(squeeze_U0_out_11_V_V_din);
    squeeze_U0->out_11_V_V_full_n(out_11_V_V_full_n);
    squeeze_U0->out_11_V_V_write(squeeze_U0_out_11_V_V_write);
    squeeze_U0->out_12_V_V_din(squeeze_U0_out_12_V_V_din);
    squeeze_U0->out_12_V_V_full_n(out_12_V_V_full_n);
    squeeze_U0->out_12_V_V_write(squeeze_U0_out_12_V_V_write);
    squeeze_U0->out_13_V_V_din(squeeze_U0_out_13_V_V_din);
    squeeze_U0->out_13_V_V_full_n(out_13_V_V_full_n);
    squeeze_U0->out_13_V_V_write(squeeze_U0_out_13_V_V_write);
    squeeze_U0->out_14_V_V_din(squeeze_U0_out_14_V_V_din);
    squeeze_U0->out_14_V_V_full_n(out_14_V_V_full_n);
    squeeze_U0->out_14_V_V_write(squeeze_U0_out_14_V_V_write);
    squeeze_U0->out_15_V_V_din(squeeze_U0_out_15_V_V_din);
    squeeze_U0->out_15_V_V_full_n(out_15_V_V_full_n);
    squeeze_U0->out_15_V_V_write(squeeze_U0_out_15_V_V_write);
    squeeze_U0->ap_clk(ap_clk);
    squeeze_U0->ap_rst(ap_rst);
    squeeze_U0->ap_start(squeeze_U0_ap_start);
    squeeze_U0->ap_done(squeeze_U0_ap_done);
    squeeze_U0->ap_ready(squeeze_U0_ap_ready);
    squeeze_U0->ap_idle(squeeze_U0_ap_idle);
    squeeze_U0->ap_continue(squeeze_U0_ap_continue);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( squeeze_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( squeeze_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( squeeze_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( squeeze_U0_ap_ready );

    SC_METHOD(thread_in_0_V_V_read);
    sensitive << ( squeeze_U0_in_0_V_V_read );

    SC_METHOD(thread_in_1_V_V_read);
    sensitive << ( squeeze_U0_in_1_V_V_read );

    SC_METHOD(thread_in_2_V_V_read);
    sensitive << ( squeeze_U0_in_2_V_V_read );

    SC_METHOD(thread_in_3_V_V_read);
    sensitive << ( squeeze_U0_in_3_V_V_read );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_out_0_V_V_din);
    sensitive << ( squeeze_U0_out_0_V_V_din );

    SC_METHOD(thread_out_0_V_V_write);
    sensitive << ( squeeze_U0_out_0_V_V_write );

    SC_METHOD(thread_out_10_V_V_din);
    sensitive << ( squeeze_U0_out_10_V_V_din );

    SC_METHOD(thread_out_10_V_V_write);
    sensitive << ( squeeze_U0_out_10_V_V_write );

    SC_METHOD(thread_out_11_V_V_din);
    sensitive << ( squeeze_U0_out_11_V_V_din );

    SC_METHOD(thread_out_11_V_V_write);
    sensitive << ( squeeze_U0_out_11_V_V_write );

    SC_METHOD(thread_out_12_V_V_din);
    sensitive << ( squeeze_U0_out_12_V_V_din );

    SC_METHOD(thread_out_12_V_V_write);
    sensitive << ( squeeze_U0_out_12_V_V_write );

    SC_METHOD(thread_out_13_V_V_din);
    sensitive << ( squeeze_U0_out_13_V_V_din );

    SC_METHOD(thread_out_13_V_V_write);
    sensitive << ( squeeze_U0_out_13_V_V_write );

    SC_METHOD(thread_out_14_V_V_din);
    sensitive << ( squeeze_U0_out_14_V_V_din );

    SC_METHOD(thread_out_14_V_V_write);
    sensitive << ( squeeze_U0_out_14_V_V_write );

    SC_METHOD(thread_out_15_V_V_din);
    sensitive << ( squeeze_U0_out_15_V_V_din );

    SC_METHOD(thread_out_15_V_V_write);
    sensitive << ( squeeze_U0_out_15_V_V_write );

    SC_METHOD(thread_out_1_V_V_din);
    sensitive << ( squeeze_U0_out_1_V_V_din );

    SC_METHOD(thread_out_1_V_V_write);
    sensitive << ( squeeze_U0_out_1_V_V_write );

    SC_METHOD(thread_out_2_V_V_din);
    sensitive << ( squeeze_U0_out_2_V_V_din );

    SC_METHOD(thread_out_2_V_V_write);
    sensitive << ( squeeze_U0_out_2_V_V_write );

    SC_METHOD(thread_out_3_V_V_din);
    sensitive << ( squeeze_U0_out_3_V_V_din );

    SC_METHOD(thread_out_3_V_V_write);
    sensitive << ( squeeze_U0_out_3_V_V_write );

    SC_METHOD(thread_out_4_V_V_din);
    sensitive << ( squeeze_U0_out_4_V_V_din );

    SC_METHOD(thread_out_4_V_V_write);
    sensitive << ( squeeze_U0_out_4_V_V_write );

    SC_METHOD(thread_out_5_V_V_din);
    sensitive << ( squeeze_U0_out_5_V_V_din );

    SC_METHOD(thread_out_5_V_V_write);
    sensitive << ( squeeze_U0_out_5_V_V_write );

    SC_METHOD(thread_out_6_V_V_din);
    sensitive << ( squeeze_U0_out_6_V_V_din );

    SC_METHOD(thread_out_6_V_V_write);
    sensitive << ( squeeze_U0_out_6_V_V_write );

    SC_METHOD(thread_out_7_V_V_din);
    sensitive << ( squeeze_U0_out_7_V_V_din );

    SC_METHOD(thread_out_7_V_V_write);
    sensitive << ( squeeze_U0_out_7_V_V_write );

    SC_METHOD(thread_out_8_V_V_din);
    sensitive << ( squeeze_U0_out_8_V_V_din );

    SC_METHOD(thread_out_8_V_V_write);
    sensitive << ( squeeze_U0_out_8_V_V_write );

    SC_METHOD(thread_out_9_V_V_din);
    sensitive << ( squeeze_U0_out_9_V_V_din );

    SC_METHOD(thread_out_9_V_V_write);
    sensitive << ( squeeze_U0_out_9_V_V_write );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_squeeze_U0_ap_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_squeeze_U0_ap_start);
    sensitive << ( real_start );

    SC_METHOD(thread_squeeze_U0_start_full_n);

    SC_METHOD(thread_squeeze_U0_start_write);

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    start_once_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Conv_0_squeeze_Relu_16_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_0_V_V_dout, "(port)in_0_V_V_dout");
    sc_trace(mVcdFile, in_0_V_V_empty_n, "(port)in_0_V_V_empty_n");
    sc_trace(mVcdFile, in_0_V_V_read, "(port)in_0_V_V_read");
    sc_trace(mVcdFile, in_1_V_V_dout, "(port)in_1_V_V_dout");
    sc_trace(mVcdFile, in_1_V_V_empty_n, "(port)in_1_V_V_empty_n");
    sc_trace(mVcdFile, in_1_V_V_read, "(port)in_1_V_V_read");
    sc_trace(mVcdFile, in_2_V_V_dout, "(port)in_2_V_V_dout");
    sc_trace(mVcdFile, in_2_V_V_empty_n, "(port)in_2_V_V_empty_n");
    sc_trace(mVcdFile, in_2_V_V_read, "(port)in_2_V_V_read");
    sc_trace(mVcdFile, in_3_V_V_dout, "(port)in_3_V_V_dout");
    sc_trace(mVcdFile, in_3_V_V_empty_n, "(port)in_3_V_V_empty_n");
    sc_trace(mVcdFile, in_3_V_V_read, "(port)in_3_V_V_read");
    sc_trace(mVcdFile, out_0_V_V_din, "(port)out_0_V_V_din");
    sc_trace(mVcdFile, out_0_V_V_full_n, "(port)out_0_V_V_full_n");
    sc_trace(mVcdFile, out_0_V_V_write, "(port)out_0_V_V_write");
    sc_trace(mVcdFile, out_1_V_V_din, "(port)out_1_V_V_din");
    sc_trace(mVcdFile, out_1_V_V_full_n, "(port)out_1_V_V_full_n");
    sc_trace(mVcdFile, out_1_V_V_write, "(port)out_1_V_V_write");
    sc_trace(mVcdFile, out_2_V_V_din, "(port)out_2_V_V_din");
    sc_trace(mVcdFile, out_2_V_V_full_n, "(port)out_2_V_V_full_n");
    sc_trace(mVcdFile, out_2_V_V_write, "(port)out_2_V_V_write");
    sc_trace(mVcdFile, out_3_V_V_din, "(port)out_3_V_V_din");
    sc_trace(mVcdFile, out_3_V_V_full_n, "(port)out_3_V_V_full_n");
    sc_trace(mVcdFile, out_3_V_V_write, "(port)out_3_V_V_write");
    sc_trace(mVcdFile, out_4_V_V_din, "(port)out_4_V_V_din");
    sc_trace(mVcdFile, out_4_V_V_full_n, "(port)out_4_V_V_full_n");
    sc_trace(mVcdFile, out_4_V_V_write, "(port)out_4_V_V_write");
    sc_trace(mVcdFile, out_5_V_V_din, "(port)out_5_V_V_din");
    sc_trace(mVcdFile, out_5_V_V_full_n, "(port)out_5_V_V_full_n");
    sc_trace(mVcdFile, out_5_V_V_write, "(port)out_5_V_V_write");
    sc_trace(mVcdFile, out_6_V_V_din, "(port)out_6_V_V_din");
    sc_trace(mVcdFile, out_6_V_V_full_n, "(port)out_6_V_V_full_n");
    sc_trace(mVcdFile, out_6_V_V_write, "(port)out_6_V_V_write");
    sc_trace(mVcdFile, out_7_V_V_din, "(port)out_7_V_V_din");
    sc_trace(mVcdFile, out_7_V_V_full_n, "(port)out_7_V_V_full_n");
    sc_trace(mVcdFile, out_7_V_V_write, "(port)out_7_V_V_write");
    sc_trace(mVcdFile, out_8_V_V_din, "(port)out_8_V_V_din");
    sc_trace(mVcdFile, out_8_V_V_full_n, "(port)out_8_V_V_full_n");
    sc_trace(mVcdFile, out_8_V_V_write, "(port)out_8_V_V_write");
    sc_trace(mVcdFile, out_9_V_V_din, "(port)out_9_V_V_din");
    sc_trace(mVcdFile, out_9_V_V_full_n, "(port)out_9_V_V_full_n");
    sc_trace(mVcdFile, out_9_V_V_write, "(port)out_9_V_V_write");
    sc_trace(mVcdFile, out_10_V_V_din, "(port)out_10_V_V_din");
    sc_trace(mVcdFile, out_10_V_V_full_n, "(port)out_10_V_V_full_n");
    sc_trace(mVcdFile, out_10_V_V_write, "(port)out_10_V_V_write");
    sc_trace(mVcdFile, out_11_V_V_din, "(port)out_11_V_V_din");
    sc_trace(mVcdFile, out_11_V_V_full_n, "(port)out_11_V_V_full_n");
    sc_trace(mVcdFile, out_11_V_V_write, "(port)out_11_V_V_write");
    sc_trace(mVcdFile, out_12_V_V_din, "(port)out_12_V_V_din");
    sc_trace(mVcdFile, out_12_V_V_full_n, "(port)out_12_V_V_full_n");
    sc_trace(mVcdFile, out_12_V_V_write, "(port)out_12_V_V_write");
    sc_trace(mVcdFile, out_13_V_V_din, "(port)out_13_V_V_din");
    sc_trace(mVcdFile, out_13_V_V_full_n, "(port)out_13_V_V_full_n");
    sc_trace(mVcdFile, out_13_V_V_write, "(port)out_13_V_V_write");
    sc_trace(mVcdFile, out_14_V_V_din, "(port)out_14_V_V_din");
    sc_trace(mVcdFile, out_14_V_V_full_n, "(port)out_14_V_V_full_n");
    sc_trace(mVcdFile, out_14_V_V_write, "(port)out_14_V_V_write");
    sc_trace(mVcdFile, out_15_V_V_din, "(port)out_15_V_V_din");
    sc_trace(mVcdFile, out_15_V_V_full_n, "(port)out_15_V_V_full_n");
    sc_trace(mVcdFile, out_15_V_V_write, "(port)out_15_V_V_write");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, squeeze_U0_in_0_V_V_read, "squeeze_U0_in_0_V_V_read");
    sc_trace(mVcdFile, squeeze_U0_in_1_V_V_read, "squeeze_U0_in_1_V_V_read");
    sc_trace(mVcdFile, squeeze_U0_in_2_V_V_read, "squeeze_U0_in_2_V_V_read");
    sc_trace(mVcdFile, squeeze_U0_in_3_V_V_read, "squeeze_U0_in_3_V_V_read");
    sc_trace(mVcdFile, squeeze_U0_out_0_V_V_din, "squeeze_U0_out_0_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_0_V_V_write, "squeeze_U0_out_0_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_1_V_V_din, "squeeze_U0_out_1_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_1_V_V_write, "squeeze_U0_out_1_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_2_V_V_din, "squeeze_U0_out_2_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_2_V_V_write, "squeeze_U0_out_2_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_3_V_V_din, "squeeze_U0_out_3_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_3_V_V_write, "squeeze_U0_out_3_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_4_V_V_din, "squeeze_U0_out_4_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_4_V_V_write, "squeeze_U0_out_4_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_5_V_V_din, "squeeze_U0_out_5_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_5_V_V_write, "squeeze_U0_out_5_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_6_V_V_din, "squeeze_U0_out_6_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_6_V_V_write, "squeeze_U0_out_6_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_7_V_V_din, "squeeze_U0_out_7_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_7_V_V_write, "squeeze_U0_out_7_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_8_V_V_din, "squeeze_U0_out_8_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_8_V_V_write, "squeeze_U0_out_8_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_9_V_V_din, "squeeze_U0_out_9_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_9_V_V_write, "squeeze_U0_out_9_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_10_V_V_din, "squeeze_U0_out_10_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_10_V_V_write, "squeeze_U0_out_10_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_11_V_V_din, "squeeze_U0_out_11_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_11_V_V_write, "squeeze_U0_out_11_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_12_V_V_din, "squeeze_U0_out_12_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_12_V_V_write, "squeeze_U0_out_12_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_13_V_V_din, "squeeze_U0_out_13_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_13_V_V_write, "squeeze_U0_out_13_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_14_V_V_din, "squeeze_U0_out_14_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_14_V_V_write, "squeeze_U0_out_14_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_out_15_V_V_din, "squeeze_U0_out_15_V_V_din");
    sc_trace(mVcdFile, squeeze_U0_out_15_V_V_write, "squeeze_U0_out_15_V_V_write");
    sc_trace(mVcdFile, squeeze_U0_ap_start, "squeeze_U0_ap_start");
    sc_trace(mVcdFile, squeeze_U0_ap_done, "squeeze_U0_ap_done");
    sc_trace(mVcdFile, squeeze_U0_ap_ready, "squeeze_U0_ap_ready");
    sc_trace(mVcdFile, squeeze_U0_ap_idle, "squeeze_U0_ap_idle");
    sc_trace(mVcdFile, squeeze_U0_ap_continue, "squeeze_U0_ap_continue");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, squeeze_U0_start_full_n, "squeeze_U0_start_full_n");
    sc_trace(mVcdFile, squeeze_U0_start_write, "squeeze_U0_start_write");
#endif

    }
}

Conv_0_squeeze_Relu_16::~Conv_0_squeeze_Relu_16() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete squeeze_U0;
}

void Conv_0_squeeze_Relu_16::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(internal_ap_ready.read(), ap_const_logic_1)) {
            start_once_reg = ap_const_logic_0;
        }
    }
}

void Conv_0_squeeze_Relu_16::thread_ap_done() {
    ap_done = squeeze_U0_ap_done.read();
}

void Conv_0_squeeze_Relu_16::thread_ap_idle() {
    ap_idle = squeeze_U0_ap_idle.read();
}

void Conv_0_squeeze_Relu_16::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void Conv_0_squeeze_Relu_16::thread_ap_sync_continue() {
    ap_sync_continue = ap_continue.read();
}

void Conv_0_squeeze_Relu_16::thread_ap_sync_done() {
    ap_sync_done = squeeze_U0_ap_done.read();
}

void Conv_0_squeeze_Relu_16::thread_ap_sync_ready() {
    ap_sync_ready = squeeze_U0_ap_ready.read();
}

void Conv_0_squeeze_Relu_16::thread_in_0_V_V_read() {
    in_0_V_V_read = squeeze_U0_in_0_V_V_read.read();
}

void Conv_0_squeeze_Relu_16::thread_in_1_V_V_read() {
    in_1_V_V_read = squeeze_U0_in_1_V_V_read.read();
}

void Conv_0_squeeze_Relu_16::thread_in_2_V_V_read() {
    in_2_V_V_read = squeeze_U0_in_2_V_V_read.read();
}

void Conv_0_squeeze_Relu_16::thread_in_3_V_V_read() {
    in_3_V_V_read = squeeze_U0_in_3_V_V_read.read();
}

void Conv_0_squeeze_Relu_16::thread_internal_ap_ready() {
    internal_ap_ready = ap_sync_ready.read();
}

void Conv_0_squeeze_Relu_16::thread_out_0_V_V_din() {
    out_0_V_V_din = squeeze_U0_out_0_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_0_V_V_write() {
    out_0_V_V_write = squeeze_U0_out_0_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_10_V_V_din() {
    out_10_V_V_din = squeeze_U0_out_10_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_10_V_V_write() {
    out_10_V_V_write = squeeze_U0_out_10_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_11_V_V_din() {
    out_11_V_V_din = squeeze_U0_out_11_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_11_V_V_write() {
    out_11_V_V_write = squeeze_U0_out_11_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_12_V_V_din() {
    out_12_V_V_din = squeeze_U0_out_12_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_12_V_V_write() {
    out_12_V_V_write = squeeze_U0_out_12_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_13_V_V_din() {
    out_13_V_V_din = squeeze_U0_out_13_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_13_V_V_write() {
    out_13_V_V_write = squeeze_U0_out_13_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_14_V_V_din() {
    out_14_V_V_din = squeeze_U0_out_14_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_14_V_V_write() {
    out_14_V_V_write = squeeze_U0_out_14_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_15_V_V_din() {
    out_15_V_V_din = squeeze_U0_out_15_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_15_V_V_write() {
    out_15_V_V_write = squeeze_U0_out_15_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_1_V_V_din() {
    out_1_V_V_din = squeeze_U0_out_1_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_1_V_V_write() {
    out_1_V_V_write = squeeze_U0_out_1_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_2_V_V_din() {
    out_2_V_V_din = squeeze_U0_out_2_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_2_V_V_write() {
    out_2_V_V_write = squeeze_U0_out_2_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_3_V_V_din() {
    out_3_V_V_din = squeeze_U0_out_3_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_3_V_V_write() {
    out_3_V_V_write = squeeze_U0_out_3_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_4_V_V_din() {
    out_4_V_V_din = squeeze_U0_out_4_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_4_V_V_write() {
    out_4_V_V_write = squeeze_U0_out_4_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_5_V_V_din() {
    out_5_V_V_din = squeeze_U0_out_5_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_5_V_V_write() {
    out_5_V_V_write = squeeze_U0_out_5_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_6_V_V_din() {
    out_6_V_V_din = squeeze_U0_out_6_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_6_V_V_write() {
    out_6_V_V_write = squeeze_U0_out_6_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_7_V_V_din() {
    out_7_V_V_din = squeeze_U0_out_7_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_7_V_V_write() {
    out_7_V_V_write = squeeze_U0_out_7_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_8_V_V_din() {
    out_8_V_V_din = squeeze_U0_out_8_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_8_V_V_write() {
    out_8_V_V_write = squeeze_U0_out_8_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_out_9_V_V_din() {
    out_9_V_V_din = squeeze_U0_out_9_V_V_din.read();
}

void Conv_0_squeeze_Relu_16::thread_out_9_V_V_write() {
    out_9_V_V_write = squeeze_U0_out_9_V_V_write.read();
}

void Conv_0_squeeze_Relu_16::thread_real_start() {
    if ((esl_seteq<1,1,1>(start_full_n.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void Conv_0_squeeze_Relu_16::thread_squeeze_U0_ap_continue() {
    squeeze_U0_ap_continue = ap_continue.read();
}

void Conv_0_squeeze_Relu_16::thread_squeeze_U0_ap_start() {
    squeeze_U0_ap_start = real_start.read();
}

void Conv_0_squeeze_Relu_16::thread_squeeze_U0_start_full_n() {
    squeeze_U0_start_full_n = ap_const_logic_1;
}

void Conv_0_squeeze_Relu_16::thread_squeeze_U0_start_write() {
    squeeze_U0_start_write = ap_const_logic_0;
}

void Conv_0_squeeze_Relu_16::thread_start_out() {
    start_out = real_start.read();
}

void Conv_0_squeeze_Relu_16::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(real_start.read(), ap_const_logic_1))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

}

