// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_acc_HH_
#define _conv_acc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct conv_acc : public sc_module {
    // Port declarations 85
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<30> > acc_stream_0_V_V_dout;
    sc_in< sc_logic > acc_stream_0_V_V_empty_n;
    sc_out< sc_logic > acc_stream_0_V_V_read;
    sc_in< sc_lv<30> > acc_stream_1_V_V_dout;
    sc_in< sc_logic > acc_stream_1_V_V_empty_n;
    sc_out< sc_logic > acc_stream_1_V_V_read;
    sc_in< sc_lv<30> > acc_stream_2_V_V_dout;
    sc_in< sc_logic > acc_stream_2_V_V_empty_n;
    sc_out< sc_logic > acc_stream_2_V_V_read;
    sc_in< sc_lv<30> > acc_stream_3_V_V_dout;
    sc_in< sc_logic > acc_stream_3_V_V_empty_n;
    sc_out< sc_logic > acc_stream_3_V_V_read;
    sc_in< sc_lv<30> > acc_stream_4_V_V_dout;
    sc_in< sc_logic > acc_stream_4_V_V_empty_n;
    sc_out< sc_logic > acc_stream_4_V_V_read;
    sc_in< sc_lv<30> > acc_stream_5_V_V_dout;
    sc_in< sc_logic > acc_stream_5_V_V_empty_n;
    sc_out< sc_logic > acc_stream_5_V_V_read;
    sc_in< sc_lv<30> > acc_stream_6_V_V_dout;
    sc_in< sc_logic > acc_stream_6_V_V_empty_n;
    sc_out< sc_logic > acc_stream_6_V_V_read;
    sc_in< sc_lv<30> > acc_stream_7_V_V_dout;
    sc_in< sc_logic > acc_stream_7_V_V_empty_n;
    sc_out< sc_logic > acc_stream_7_V_V_read;
    sc_in< sc_lv<30> > acc_stream_8_V_V_dout;
    sc_in< sc_logic > acc_stream_8_V_V_empty_n;
    sc_out< sc_logic > acc_stream_8_V_V_read;
    sc_in< sc_lv<30> > acc_stream_9_V_V_dout;
    sc_in< sc_logic > acc_stream_9_V_V_empty_n;
    sc_out< sc_logic > acc_stream_9_V_V_read;
    sc_in< sc_lv<30> > acc_stream_10_V_V_dout;
    sc_in< sc_logic > acc_stream_10_V_V_empty_n;
    sc_out< sc_logic > acc_stream_10_V_V_read;
    sc_in< sc_lv<30> > acc_stream_11_V_V_dout;
    sc_in< sc_logic > acc_stream_11_V_V_empty_n;
    sc_out< sc_logic > acc_stream_11_V_V_read;
    sc_in< sc_lv<30> > acc_stream_12_V_V_dout;
    sc_in< sc_logic > acc_stream_12_V_V_empty_n;
    sc_out< sc_logic > acc_stream_12_V_V_read;
    sc_in< sc_lv<30> > acc_stream_13_V_V_dout;
    sc_in< sc_logic > acc_stream_13_V_V_empty_n;
    sc_out< sc_logic > acc_stream_13_V_V_read;
    sc_in< sc_lv<30> > acc_stream_14_V_V_dout;
    sc_in< sc_logic > acc_stream_14_V_V_empty_n;
    sc_out< sc_logic > acc_stream_14_V_V_read;
    sc_in< sc_lv<30> > acc_stream_15_V_V_dout;
    sc_in< sc_logic > acc_stream_15_V_V_empty_n;
    sc_out< sc_logic > acc_stream_15_V_V_read;
    sc_in< sc_lv<30> > acc_stream_16_V_V_dout;
    sc_in< sc_logic > acc_stream_16_V_V_empty_n;
    sc_out< sc_logic > acc_stream_16_V_V_read;
    sc_in< sc_lv<30> > acc_stream_17_V_V_dout;
    sc_in< sc_logic > acc_stream_17_V_V_empty_n;
    sc_out< sc_logic > acc_stream_17_V_V_read;
    sc_in< sc_lv<30> > acc_stream_18_V_V_dout;
    sc_in< sc_logic > acc_stream_18_V_V_empty_n;
    sc_out< sc_logic > acc_stream_18_V_V_read;
    sc_in< sc_lv<30> > acc_stream_19_V_V_dout;
    sc_in< sc_logic > acc_stream_19_V_V_empty_n;
    sc_out< sc_logic > acc_stream_19_V_V_read;
    sc_in< sc_lv<30> > acc_stream_20_V_V_dout;
    sc_in< sc_logic > acc_stream_20_V_V_empty_n;
    sc_out< sc_logic > acc_stream_20_V_V_read;
    sc_in< sc_lv<30> > acc_stream_21_V_V_dout;
    sc_in< sc_logic > acc_stream_21_V_V_empty_n;
    sc_out< sc_logic > acc_stream_21_V_V_read;
    sc_in< sc_lv<30> > acc_stream_22_V_V_dout;
    sc_in< sc_logic > acc_stream_22_V_V_empty_n;
    sc_out< sc_logic > acc_stream_22_V_V_read;
    sc_in< sc_lv<30> > acc_stream_23_V_V_dout;
    sc_in< sc_logic > acc_stream_23_V_V_empty_n;
    sc_out< sc_logic > acc_stream_23_V_V_read;
    sc_in< sc_lv<30> > acc_stream_24_V_V_dout;
    sc_in< sc_logic > acc_stream_24_V_V_empty_n;
    sc_out< sc_logic > acc_stream_24_V_V_read;
    sc_out< sc_lv<30> > out_V_V_din;
    sc_in< sc_logic > out_V_V_full_n;
    sc_out< sc_logic > out_V_V_write;


    // Module declarations
    conv_acc(sc_module_name name);
    SC_HAS_PROCESS(conv_acc);

    ~conv_acc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln273_fu_289_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_logic > acc_stream_0_V_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > acc_stream_1_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_2_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_3_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_4_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_5_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_6_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_7_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_8_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_9_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_10_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_11_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_12_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_13_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_14_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_15_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_16_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_17_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_18_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_19_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_20_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_21_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_22_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_23_V_V_blk_n;
    sc_signal< sc_logic > acc_stream_24_V_V_blk_n;
    sc_signal< sc_logic > out_V_V_blk_n;
    sc_signal< sc_lv<12> > pixel_index_01_reg_269;
    sc_signal< sc_lv<30> > tmp_V_reg_403;
    sc_signal< sc_lv<30> > tmp_V_726_reg_408;
    sc_signal< sc_lv<30> > tmp_V_726_reg_408_pp0_iter1_reg;
    sc_signal< sc_lv<30> > tmp_V_727_reg_413;
    sc_signal< sc_lv<30> > tmp_V_728_reg_418;
    sc_signal< sc_lv<30> > tmp_V_729_reg_423;
    sc_signal< sc_lv<30> > tmp_V_730_reg_428;
    sc_signal< sc_lv<30> > tmp_V_731_reg_433;
    sc_signal< sc_lv<30> > tmp_V_731_reg_433_pp0_iter1_reg;
    sc_signal< sc_lv<30> > tmp_V_732_reg_438;
    sc_signal< sc_lv<30> > tmp_V_733_reg_443;
    sc_signal< sc_lv<30> > tmp_V_734_reg_448;
    sc_signal< sc_lv<30> > tmp_V_735_reg_453;
    sc_signal< sc_lv<30> > tmp_V_736_reg_458;
    sc_signal< sc_lv<30> > tmp_V_737_reg_463;
    sc_signal< sc_lv<30> > tmp_V_738_reg_468;
    sc_signal< sc_lv<30> > tmp_V_739_reg_473;
    sc_signal< sc_lv<30> > tmp_V_740_reg_478;
    sc_signal< sc_lv<30> > tmp_V_741_reg_483;
    sc_signal< sc_lv<30> > tmp_V_742_reg_488;
    sc_signal< sc_lv<30> > tmp_V_743_reg_493;
    sc_signal< sc_lv<30> > tmp_V_743_reg_493_pp0_iter1_reg;
    sc_signal< sc_lv<30> > tmp_V_743_reg_493_pp0_iter2_reg;
    sc_signal< sc_lv<30> > tmp_V_744_reg_498;
    sc_signal< sc_lv<30> > tmp_V_745_reg_503;
    sc_signal< sc_lv<30> > tmp_V_746_reg_508;
    sc_signal< sc_lv<30> > tmp_V_746_reg_508_pp0_iter1_reg;
    sc_signal< sc_lv<30> > tmp_V_747_reg_513;
    sc_signal< sc_lv<30> > tmp_V_747_reg_513_pp0_iter1_reg;
    sc_signal< sc_lv<30> > tmp_V_748_reg_518;
    sc_signal< sc_lv<30> > tmp_V_749_reg_523;
    sc_signal< sc_lv<12> > pixel_index_fu_283_p2;
    sc_signal< sc_lv<12> > pixel_index_reg_528;
    sc_signal< sc_lv<1> > icmp_ln273_reg_533;
    sc_signal< sc_lv<1> > icmp_ln273_reg_533_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln273_reg_533_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln273_reg_533_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln273_reg_533_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln273_reg_533_pp0_iter5_reg;
    sc_signal< sc_lv<30> > add_ln703_fu_297_p2;
    sc_signal< sc_lv<30> > add_ln703_reg_537;
    sc_signal< sc_lv<30> > add_ln703_3_fu_305_p2;
    sc_signal< sc_lv<30> > add_ln703_3_reg_542;
    sc_signal< sc_lv<30> > add_ln703_5_fu_310_p2;
    sc_signal< sc_lv<30> > add_ln703_5_reg_547;
    sc_signal< sc_lv<30> > add_ln703_8_fu_318_p2;
    sc_signal< sc_lv<30> > add_ln703_8_reg_552;
    sc_signal< sc_lv<30> > add_ln703_12_fu_327_p2;
    sc_signal< sc_lv<30> > add_ln703_12_reg_557;
    sc_signal< sc_lv<30> > add_ln703_12_reg_557_pp0_iter2_reg;
    sc_signal< sc_lv<30> > add_ln703_12_reg_557_pp0_iter3_reg;
    sc_signal< sc_lv<30> > add_ln703_14_fu_336_p2;
    sc_signal< sc_lv<30> > add_ln703_14_reg_562;
    sc_signal< sc_lv<30> > add_ln703_14_reg_562_pp0_iter2_reg;
    sc_signal< sc_lv<30> > add_ln703_14_reg_562_pp0_iter3_reg;
    sc_signal< sc_lv<30> > add_ln703_16_fu_341_p2;
    sc_signal< sc_lv<30> > add_ln703_16_reg_567;
    sc_signal< sc_lv<30> > add_ln703_16_reg_567_pp0_iter2_reg;
    sc_signal< sc_lv<30> > add_ln703_19_fu_345_p2;
    sc_signal< sc_lv<30> > add_ln703_19_reg_572;
    sc_signal< sc_lv<30> > add_ln703_4_fu_353_p2;
    sc_signal< sc_lv<30> > add_ln703_4_reg_577;
    sc_signal< sc_lv<30> > add_ln703_4_reg_577_pp0_iter3_reg;
    sc_signal< sc_lv<30> > add_ln703_4_reg_577_pp0_iter4_reg;
    sc_signal< sc_lv<30> > add_ln703_9_fu_362_p2;
    sc_signal< sc_lv<30> > add_ln703_9_reg_582;
    sc_signal< sc_lv<30> > add_ln703_9_reg_582_pp0_iter3_reg;
    sc_signal< sc_lv<30> > add_ln703_9_reg_582_pp0_iter4_reg;
    sc_signal< sc_lv<30> > add_ln703_20_fu_371_p2;
    sc_signal< sc_lv<30> > add_ln703_20_reg_587;
    sc_signal< sc_lv<30> > add_ln703_21_fu_380_p2;
    sc_signal< sc_lv<30> > add_ln703_21_reg_592;
    sc_signal< sc_lv<30> > add_ln703_22_fu_389_p2;
    sc_signal< sc_lv<30> > add_ln703_22_reg_597;
    sc_signal< sc_lv<30> > tmp_V_750_fu_398_p2;
    sc_signal< sc_lv<30> > tmp_V_750_reg_602;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<12> > ap_phi_mux_pixel_index_01_phi_fu_273_p6;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<30> > add_ln703_2_fu_301_p2;
    sc_signal< sc_lv<30> > add_ln703_7_fu_314_p2;
    sc_signal< sc_lv<30> > add_ln703_11_fu_323_p2;
    sc_signal< sc_lv<30> > add_ln703_13_fu_332_p2;
    sc_signal< sc_lv<30> > add_ln703_1_fu_349_p2;
    sc_signal< sc_lv<30> > add_ln703_6_fu_358_p2;
    sc_signal< sc_lv<30> > add_ln703_18_fu_367_p2;
    sc_signal< sc_lv<30> > add_ln703_17_fu_376_p2;
    sc_signal< sc_lv<30> > add_ln703_15_fu_385_p2;
    sc_signal< sc_lv<30> > add_ln703_10_fu_394_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to5;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_382;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<12> ap_const_lv12_8FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_stream_0_V_V_blk_n();
    void thread_acc_stream_0_V_V_read();
    void thread_acc_stream_10_V_V_blk_n();
    void thread_acc_stream_10_V_V_read();
    void thread_acc_stream_11_V_V_blk_n();
    void thread_acc_stream_11_V_V_read();
    void thread_acc_stream_12_V_V_blk_n();
    void thread_acc_stream_12_V_V_read();
    void thread_acc_stream_13_V_V_blk_n();
    void thread_acc_stream_13_V_V_read();
    void thread_acc_stream_14_V_V_blk_n();
    void thread_acc_stream_14_V_V_read();
    void thread_acc_stream_15_V_V_blk_n();
    void thread_acc_stream_15_V_V_read();
    void thread_acc_stream_16_V_V_blk_n();
    void thread_acc_stream_16_V_V_read();
    void thread_acc_stream_17_V_V_blk_n();
    void thread_acc_stream_17_V_V_read();
    void thread_acc_stream_18_V_V_blk_n();
    void thread_acc_stream_18_V_V_read();
    void thread_acc_stream_19_V_V_blk_n();
    void thread_acc_stream_19_V_V_read();
    void thread_acc_stream_1_V_V_blk_n();
    void thread_acc_stream_1_V_V_read();
    void thread_acc_stream_20_V_V_blk_n();
    void thread_acc_stream_20_V_V_read();
    void thread_acc_stream_21_V_V_blk_n();
    void thread_acc_stream_21_V_V_read();
    void thread_acc_stream_22_V_V_blk_n();
    void thread_acc_stream_22_V_V_read();
    void thread_acc_stream_23_V_V_blk_n();
    void thread_acc_stream_23_V_V_read();
    void thread_acc_stream_24_V_V_blk_n();
    void thread_acc_stream_24_V_V_read();
    void thread_acc_stream_2_V_V_blk_n();
    void thread_acc_stream_2_V_V_read();
    void thread_acc_stream_3_V_V_blk_n();
    void thread_acc_stream_3_V_V_read();
    void thread_acc_stream_4_V_V_blk_n();
    void thread_acc_stream_4_V_V_read();
    void thread_acc_stream_5_V_V_blk_n();
    void thread_acc_stream_5_V_V_read();
    void thread_acc_stream_6_V_V_blk_n();
    void thread_acc_stream_6_V_V_read();
    void thread_acc_stream_7_V_V_blk_n();
    void thread_acc_stream_7_V_V_read();
    void thread_acc_stream_8_V_V_blk_n();
    void thread_acc_stream_8_V_V_read();
    void thread_acc_stream_9_V_V_blk_n();
    void thread_acc_stream_9_V_V_read();
    void thread_add_ln703_10_fu_394_p2();
    void thread_add_ln703_11_fu_323_p2();
    void thread_add_ln703_12_fu_327_p2();
    void thread_add_ln703_13_fu_332_p2();
    void thread_add_ln703_14_fu_336_p2();
    void thread_add_ln703_15_fu_385_p2();
    void thread_add_ln703_16_fu_341_p2();
    void thread_add_ln703_17_fu_376_p2();
    void thread_add_ln703_18_fu_367_p2();
    void thread_add_ln703_19_fu_345_p2();
    void thread_add_ln703_1_fu_349_p2();
    void thread_add_ln703_20_fu_371_p2();
    void thread_add_ln703_21_fu_380_p2();
    void thread_add_ln703_22_fu_389_p2();
    void thread_add_ln703_2_fu_301_p2();
    void thread_add_ln703_3_fu_305_p2();
    void thread_add_ln703_4_fu_353_p2();
    void thread_add_ln703_5_fu_310_p2();
    void thread_add_ln703_6_fu_358_p2();
    void thread_add_ln703_7_fu_314_p2();
    void thread_add_ln703_8_fu_318_p2();
    void thread_add_ln703_9_fu_362_p2();
    void thread_add_ln703_fu_297_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter6();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_condition_382();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to5();
    void thread_ap_phi_mux_pixel_index_01_phi_fu_273_p6();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_icmp_ln273_fu_289_p2();
    void thread_out_V_V_blk_n();
    void thread_out_V_V_din();
    void thread_out_V_V_write();
    void thread_pixel_index_fu_283_p2();
    void thread_tmp_V_750_fu_398_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
