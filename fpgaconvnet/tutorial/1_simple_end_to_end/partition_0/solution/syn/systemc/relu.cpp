// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "relu.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic relu::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic relu::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> relu::ap_ST_fsm_state1 = "1";
const sc_lv<2> relu::ap_ST_fsm_pp0_stage0 = "10";
const bool relu::ap_const_boolean_1 = true;
const sc_lv<32> relu::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> relu::ap_const_lv1_1 = "1";
const sc_lv<32> relu::ap_const_lv32_1 = "1";
const sc_lv<1> relu::ap_const_lv1_0 = "0";
const bool relu::ap_const_boolean_0 = false;
const sc_lv<10> relu::ap_const_lv10_0 = "0000000000";
const sc_lv<16> relu::ap_const_lv16_0 = "0000000000000000";
const sc_lv<64> relu::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<10> relu::ap_const_lv10_1 = "1";
const sc_lv<10> relu::ap_const_lv10_23F = "1000111111";
const sc_lv<32> relu::ap_const_lv32_F = "1111";
const sc_lv<16> relu::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<32> relu::ap_const_lv32_10 = "10000";
const sc_lv<5> relu::ap_const_lv5_6 = "110";
const sc_lv<32> relu::ap_const_lv32_FFFFFFCB = "11111111111111111111111111001011";
const sc_lv<32> relu::ap_const_lv32_1F = "11111";
const sc_lv<32> relu::ap_const_lv32_FFFFFFCA = "11111111111111111111111111001010";
const sc_lv<32> relu::ap_const_lv32_36 = "110110";
const sc_lv<31> relu::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<16> relu::ap_const_lv16_FFCB = "1111111111001011";
const sc_lv<32> relu::ap_const_lv32_3F = "111111";
const sc_lv<11> relu::ap_const_lv11_3FF = "1111111111";
const sc_lv<11> relu::ap_const_lv11_3FE = "1111111110";
const sc_lv<32> relu::ap_const_lv32_34 = "110100";
const sc_lv<11> relu::ap_const_lv11_8 = "1000";
const sc_lv<52> relu::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<11> relu::ap_const_lv11_7FF = "11111111111";
const sc_lv<5> relu::ap_const_lv5_4 = "100";

relu::relu(sc_module_name name) : sc_module(name), mVcdFile(0) {
    fpgaconvnet_ip_dcfYi_U2548 = new fpgaconvnet_ip_dcfYi<1,4,64,64,1>("fpgaconvnet_ip_dcfYi_U2548");
    fpgaconvnet_ip_dcfYi_U2548->clk(ap_clk);
    fpgaconvnet_ip_dcfYi_U2548->reset(ap_rst);
    fpgaconvnet_ip_dcfYi_U2548->din0(grp_fu_150_p0);
    fpgaconvnet_ip_dcfYi_U2548->din1(ap_var_for_const0);
    fpgaconvnet_ip_dcfYi_U2548->ce(grp_fu_150_ce);
    fpgaconvnet_ip_dcfYi_U2548->opcode(ap_var_for_const1);
    fpgaconvnet_ip_dcfYi_U2548->dout(grp_fu_150_p2);
    fpgaconvnet_ip_ls9j0_U2549 = new fpgaconvnet_ip_ls9j0<1,2,1,32,32,32>("fpgaconvnet_ip_ls9j0_U2549");
    fpgaconvnet_ip_ls9j0_U2549->clk(ap_clk);
    fpgaconvnet_ip_ls9j0_U2549->reset(ap_rst);
    fpgaconvnet_ip_ls9j0_U2549->din0(grp_fu_352_p0);
    fpgaconvnet_ip_ls9j0_U2549->din1(add_ln908_reg_559);
    fpgaconvnet_ip_ls9j0_U2549->ce(grp_fu_352_ce);
    fpgaconvnet_ip_ls9j0_U2549->dout(grp_fu_352_p2);
    fpgaconvnet_ip_shbak_U2550 = new fpgaconvnet_ip_shbak<1,2,0,64,32,64>("fpgaconvnet_ip_shbak_U2550");
    fpgaconvnet_ip_shbak_U2550->clk(ap_clk);
    fpgaconvnet_ip_shbak_U2550->reset(ap_rst);
    fpgaconvnet_ip_shbak_U2550->din0(grp_fu_360_p0);
    fpgaconvnet_ip_shbak_U2550->din1(grp_fu_360_p1);
    fpgaconvnet_ip_shbak_U2550->ce(grp_fu_360_ce);
    fpgaconvnet_ip_shbak_U2550->dout(grp_fu_360_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_fu_291_p2);
    sensitive << ( icmp_ln897_1_reg_554 );
    sensitive << ( icmp_ln897_fu_286_p2 );

    SC_METHOD(thread_add_ln899_fu_309_p2);
    sensitive << ( trunc_ln894_reg_533_pp0_iter4_reg );

    SC_METHOD(thread_add_ln908_fu_276_p2);
    sensitive << ( sub_ln894_reg_526 );

    SC_METHOD(thread_add_ln915_fu_425_p2);
    sensitive << ( select_ln915_reg_609 );
    sensitive << ( sub_ln915_fu_420_p2 );

    SC_METHOD(thread_and_ln899_fu_321_p2);
    sensitive << ( p_Result_3_fu_314_p3 );
    sensitive << ( xor_ln899_fu_303_p2 );

    SC_METHOD(thread_and_ln924_fu_470_p2);
    sensitive << ( or_ln924_fu_466_p2 );
    sensitive << ( grp_fu_150_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);
    sensitive << ( ap_start );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_predicate_op30_write_state3 );
    sensitive << ( ap_predicate_op32_write_state3 );
    sensitive << ( ap_enable_reg_pp0_iter13 );

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_predicate_op30_write_state3 );
    sensitive << ( ap_predicate_op32_write_state3 );
    sensitive << ( ap_enable_reg_pp0_iter13 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_predicate_op30_write_state3 );
    sensitive << ( ap_predicate_op32_write_state3 );
    sensitive << ( ap_enable_reg_pp0_iter13 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_predicate_op30_write_state3 );
    sensitive << ( ap_predicate_op32_write_state3 );
    sensitive << ( ap_enable_reg_pp0_iter13 );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( in_V_V_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter13);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_predicate_op30_write_state3 );
    sensitive << ( ap_predicate_op32_write_state3 );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_290);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln49_reg_490_pp0_iter12_reg );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );

    SC_METHOD(thread_ap_idle_pp0_0to12);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );

    SC_METHOD(thread_ap_phi_mux_pixel_index_01_phi_fu_140_p6);
    sensitive << ( pixel_index_01_reg_136 );
    sensitive << ( pixel_index_reg_485 );
    sensitive << ( icmp_ln49_reg_490 );
    sensitive << ( ap_condition_290 );

    SC_METHOD(thread_ap_predicate_op30_write_state3);
    sensitive << ( icmp_ln885_reg_494_pp0_iter12_reg );
    sensitive << ( and_ln924_reg_640 );

    SC_METHOD(thread_ap_predicate_op32_write_state3);
    sensitive << ( icmp_ln885_reg_494_pp0_iter12_reg );
    sensitive << ( and_ln924_reg_640 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( icmp_ln49_fu_161_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to12 );

    SC_METHOD(thread_grp_fu_150_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_150_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( p_Result_8_fu_444_p5 );

    SC_METHOD(thread_grp_fu_352_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_352_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_V_133_reg_508_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_360_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_360_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_V_133_reg_508_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_grp_fu_360_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sub_ln908_reg_564 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_icmp_ln49_fu_161_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_pixel_index_01_phi_fu_140_p6 );

    SC_METHOD(thread_icmp_ln885_fu_169_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_V_132_reg_476 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_icmp_ln897_1_fu_270_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln885_reg_494_pp0_iter3_reg );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( p_Result_4_fu_265_p2 );

    SC_METHOD(thread_icmp_ln897_fu_286_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln885_reg_494_pp0_iter4_reg );
    sensitive << ( tmp_10_reg_549 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_icmp_ln908_fu_347_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln885_reg_494_pp0_iter4_reg );
    sensitive << ( lsb_index_reg_543 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_icmp_ln924_1_fu_430_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln885_reg_494_pp0_iter7_reg );
    sensitive << ( trunc_ln4_reg_614 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_icmp_ln924_fu_461_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln885_reg_494_pp0_iter8_reg );
    sensitive << ( add_ln915_reg_619 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_in_V_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( in_V_V_empty_n );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_in_V_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_l_fu_210_p3);
    sensitive << ( p_Result_7_fu_202_p3 );

    SC_METHOD(thread_lsb_index_fu_241_p2);
    sensitive << ( sub_ln894_reg_526 );

    SC_METHOD(thread_lshr_ln897_fu_259_p2);
    sensitive << ( zext_ln897_fu_256_p1 );

    SC_METHOD(thread_m_1_fu_369_p3);
    sensitive << ( icmp_ln908_reg_584_pp0_iter6_reg );
    sensitive << ( shl_ln908_reg_599 );
    sensitive << ( zext_ln908_fu_366_p1 );

    SC_METHOD(thread_m_2_fu_378_p2);
    sensitive << ( zext_ln911_fu_375_p1 );
    sensitive << ( m_1_fu_369_p3 );

    SC_METHOD(thread_m_6_fu_435_p1);
    sensitive << ( m_5_reg_604_pp0_iter8_reg );

    SC_METHOD(thread_or_ln899_fu_327_p2);
    sensitive << ( and_ln899_fu_321_p2 );
    sensitive << ( a_fu_291_p2 );

    SC_METHOD(thread_or_ln924_fu_466_p2);
    sensitive << ( icmp_ln924_1_reg_625_pp0_iter11_reg );
    sensitive << ( icmp_ln924_reg_635_pp0_iter11_reg );

    SC_METHOD(thread_or_ln_fu_333_p3);
    sensitive << ( or_ln899_fu_327_p2 );

    SC_METHOD(thread_out_V_V_blk_n);
    sensitive << ( out_V_V_full_n );
    sensitive << ( ap_predicate_op30_write_state3 );
    sensitive << ( ap_predicate_op32_write_state3 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_out_V_V_din);
    sensitive << ( ap_predicate_op30_write_state3 );
    sensitive << ( ap_predicate_op32_write_state3 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( tmp_V_132_reg_476_pp0_iter12_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_out_V_V_write);
    sensitive << ( ap_predicate_op30_write_state3 );
    sensitive << ( ap_predicate_op32_write_state3 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_Result_3_fu_314_p3);
    sensitive << ( tmp_V_133_reg_508_pp0_iter4_reg );
    sensitive << ( add_ln899_fu_309_p2 );

    SC_METHOD(thread_p_Result_4_fu_265_p2);
    sensitive << ( tmp_V_133_reg_508_pp0_iter3_reg );
    sensitive << ( lshr_ln897_fu_259_p2 );

    SC_METHOD(thread_p_Result_6_fu_179_p3);
    sensitive << ( tmp_V_132_reg_476_pp0_iter1_reg );

    SC_METHOD(thread_p_Result_7_fu_202_p3);
    sensitive << ( p_Result_s_fu_192_p4 );

    SC_METHOD(thread_p_Result_8_fu_444_p5);
    sensitive << ( m_6_fu_435_p1 );
    sensitive << ( tmp_2_fu_438_p3 );

    SC_METHOD(thread_p_Result_s_fu_192_p4);
    sensitive << ( tmp_V_133_fu_186_p3 );

    SC_METHOD(thread_pixel_index_fu_155_p2);
    sensitive << ( ap_phi_mux_pixel_index_01_phi_fu_140_p6 );

    SC_METHOD(thread_select_ln915_fu_402_p3);
    sensitive << ( tmp_12_fu_394_p3 );

    SC_METHOD(thread_sub_ln894_fu_222_p2);
    sensitive << ( l_reg_516 );

    SC_METHOD(thread_sub_ln897_fu_235_p2);
    sensitive << ( trunc_ln897_fu_231_p1 );

    SC_METHOD(thread_sub_ln908_fu_281_p2);
    sensitive << ( sub_ln894_reg_526 );

    SC_METHOD(thread_sub_ln915_fu_420_p2);
    sensitive << ( trunc_ln893_reg_521_pp0_iter7_reg );

    SC_METHOD(thread_tmp_11_fu_296_p3);
    sensitive << ( lsb_index_reg_543 );

    SC_METHOD(thread_tmp_12_fu_394_p3);
    sensitive << ( m_2_fu_378_p2 );

    SC_METHOD(thread_tmp_2_fu_438_p3);
    sensitive << ( p_Result_6_reg_503_pp0_iter8_reg );
    sensitive << ( add_ln915_reg_619 );

    SC_METHOD(thread_tmp_V_133_fu_186_p3);
    sensitive << ( tmp_V_132_reg_476_pp0_iter1_reg );
    sensitive << ( tmp_V_reg_498 );
    sensitive << ( p_Result_6_fu_179_p3 );

    SC_METHOD(thread_tmp_V_fu_174_p2);
    sensitive << ( tmp_V_132_reg_476 );

    SC_METHOD(thread_trunc_ln893_fu_218_p1);
    sensitive << ( l_fu_210_p3 );

    SC_METHOD(thread_trunc_ln894_fu_227_p1);
    sensitive << ( sub_ln894_fu_222_p2 );

    SC_METHOD(thread_trunc_ln897_fu_231_p1);
    sensitive << ( sub_ln894_fu_222_p2 );

    SC_METHOD(thread_xor_ln899_fu_303_p2);
    sensitive << ( tmp_11_fu_296_p3 );

    SC_METHOD(thread_zext_ln897_fu_256_p1);
    sensitive << ( sub_ln897_reg_538 );

    SC_METHOD(thread_zext_ln908_fu_366_p1);
    sensitive << ( lshr_ln908_reg_594 );

    SC_METHOD(thread_zext_ln911_fu_375_p1);
    sensitive << ( or_ln_reg_569_pp0_iter6_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "01";
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "relu_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V_V_dout, "(port)in_V_V_dout");
    sc_trace(mVcdFile, in_V_V_empty_n, "(port)in_V_V_empty_n");
    sc_trace(mVcdFile, in_V_V_read, "(port)in_V_V_read");
    sc_trace(mVcdFile, out_V_V_din, "(port)out_V_V_din");
    sc_trace(mVcdFile, out_V_V_full_n, "(port)out_V_V_full_n");
    sc_trace(mVcdFile, out_V_V_write, "(port)out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, icmp_ln49_fu_161_p2, "icmp_ln49_fu_161_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter6, "ap_block_state9_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter7, "ap_block_state10_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter8, "ap_block_state11_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter9, "ap_block_state12_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter10, "ap_block_state13_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter11, "ap_block_state14_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter12, "ap_block_state15_pp0_stage0_iter12");
    sc_trace(mVcdFile, icmp_ln885_reg_494, "icmp_ln885_reg_494");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter12_reg, "icmp_ln885_reg_494_pp0_iter12_reg");
    sc_trace(mVcdFile, and_ln924_reg_640, "and_ln924_reg_640");
    sc_trace(mVcdFile, ap_predicate_op30_write_state3, "ap_predicate_op30_write_state3");
    sc_trace(mVcdFile, ap_predicate_op32_write_state3, "ap_predicate_op32_write_state3");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter13, "ap_block_state3_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, in_V_V_blk_n, "in_V_V_blk_n");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, out_V_V_blk_n, "out_V_V_blk_n");
    sc_trace(mVcdFile, pixel_index_01_reg_136, "pixel_index_01_reg_136");
    sc_trace(mVcdFile, tmp_V_132_reg_476, "tmp_V_132_reg_476");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter1_reg, "tmp_V_132_reg_476_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter2_reg, "tmp_V_132_reg_476_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter3_reg, "tmp_V_132_reg_476_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter4_reg, "tmp_V_132_reg_476_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter5_reg, "tmp_V_132_reg_476_pp0_iter5_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter6_reg, "tmp_V_132_reg_476_pp0_iter6_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter7_reg, "tmp_V_132_reg_476_pp0_iter7_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter8_reg, "tmp_V_132_reg_476_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter9_reg, "tmp_V_132_reg_476_pp0_iter9_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter10_reg, "tmp_V_132_reg_476_pp0_iter10_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter11_reg, "tmp_V_132_reg_476_pp0_iter11_reg");
    sc_trace(mVcdFile, tmp_V_132_reg_476_pp0_iter12_reg, "tmp_V_132_reg_476_pp0_iter12_reg");
    sc_trace(mVcdFile, pixel_index_fu_155_p2, "pixel_index_fu_155_p2");
    sc_trace(mVcdFile, pixel_index_reg_485, "pixel_index_reg_485");
    sc_trace(mVcdFile, icmp_ln49_reg_490, "icmp_ln49_reg_490");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter1_reg, "icmp_ln49_reg_490_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter2_reg, "icmp_ln49_reg_490_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter3_reg, "icmp_ln49_reg_490_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter4_reg, "icmp_ln49_reg_490_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter5_reg, "icmp_ln49_reg_490_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter6_reg, "icmp_ln49_reg_490_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter7_reg, "icmp_ln49_reg_490_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter8_reg, "icmp_ln49_reg_490_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter9_reg, "icmp_ln49_reg_490_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter10_reg, "icmp_ln49_reg_490_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter11_reg, "icmp_ln49_reg_490_pp0_iter11_reg");
    sc_trace(mVcdFile, icmp_ln49_reg_490_pp0_iter12_reg, "icmp_ln49_reg_490_pp0_iter12_reg");
    sc_trace(mVcdFile, icmp_ln885_fu_169_p2, "icmp_ln885_fu_169_p2");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter2_reg, "icmp_ln885_reg_494_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter3_reg, "icmp_ln885_reg_494_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter4_reg, "icmp_ln885_reg_494_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter5_reg, "icmp_ln885_reg_494_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter6_reg, "icmp_ln885_reg_494_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter7_reg, "icmp_ln885_reg_494_pp0_iter7_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter8_reg, "icmp_ln885_reg_494_pp0_iter8_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter9_reg, "icmp_ln885_reg_494_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter10_reg, "icmp_ln885_reg_494_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln885_reg_494_pp0_iter11_reg, "icmp_ln885_reg_494_pp0_iter11_reg");
    sc_trace(mVcdFile, tmp_V_fu_174_p2, "tmp_V_fu_174_p2");
    sc_trace(mVcdFile, tmp_V_reg_498, "tmp_V_reg_498");
    sc_trace(mVcdFile, p_Result_6_fu_179_p3, "p_Result_6_fu_179_p3");
    sc_trace(mVcdFile, p_Result_6_reg_503, "p_Result_6_reg_503");
    sc_trace(mVcdFile, p_Result_6_reg_503_pp0_iter3_reg, "p_Result_6_reg_503_pp0_iter3_reg");
    sc_trace(mVcdFile, p_Result_6_reg_503_pp0_iter4_reg, "p_Result_6_reg_503_pp0_iter4_reg");
    sc_trace(mVcdFile, p_Result_6_reg_503_pp0_iter5_reg, "p_Result_6_reg_503_pp0_iter5_reg");
    sc_trace(mVcdFile, p_Result_6_reg_503_pp0_iter6_reg, "p_Result_6_reg_503_pp0_iter6_reg");
    sc_trace(mVcdFile, p_Result_6_reg_503_pp0_iter7_reg, "p_Result_6_reg_503_pp0_iter7_reg");
    sc_trace(mVcdFile, p_Result_6_reg_503_pp0_iter8_reg, "p_Result_6_reg_503_pp0_iter8_reg");
    sc_trace(mVcdFile, tmp_V_133_fu_186_p3, "tmp_V_133_fu_186_p3");
    sc_trace(mVcdFile, tmp_V_133_reg_508, "tmp_V_133_reg_508");
    sc_trace(mVcdFile, tmp_V_133_reg_508_pp0_iter3_reg, "tmp_V_133_reg_508_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_V_133_reg_508_pp0_iter4_reg, "tmp_V_133_reg_508_pp0_iter4_reg");
    sc_trace(mVcdFile, l_fu_210_p3, "l_fu_210_p3");
    sc_trace(mVcdFile, l_reg_516, "l_reg_516");
    sc_trace(mVcdFile, trunc_ln893_fu_218_p1, "trunc_ln893_fu_218_p1");
    sc_trace(mVcdFile, trunc_ln893_reg_521, "trunc_ln893_reg_521");
    sc_trace(mVcdFile, trunc_ln893_reg_521_pp0_iter3_reg, "trunc_ln893_reg_521_pp0_iter3_reg");
    sc_trace(mVcdFile, trunc_ln893_reg_521_pp0_iter4_reg, "trunc_ln893_reg_521_pp0_iter4_reg");
    sc_trace(mVcdFile, trunc_ln893_reg_521_pp0_iter5_reg, "trunc_ln893_reg_521_pp0_iter5_reg");
    sc_trace(mVcdFile, trunc_ln893_reg_521_pp0_iter6_reg, "trunc_ln893_reg_521_pp0_iter6_reg");
    sc_trace(mVcdFile, trunc_ln893_reg_521_pp0_iter7_reg, "trunc_ln893_reg_521_pp0_iter7_reg");
    sc_trace(mVcdFile, sub_ln894_fu_222_p2, "sub_ln894_fu_222_p2");
    sc_trace(mVcdFile, sub_ln894_reg_526, "sub_ln894_reg_526");
    sc_trace(mVcdFile, trunc_ln894_fu_227_p1, "trunc_ln894_fu_227_p1");
    sc_trace(mVcdFile, trunc_ln894_reg_533, "trunc_ln894_reg_533");
    sc_trace(mVcdFile, trunc_ln894_reg_533_pp0_iter4_reg, "trunc_ln894_reg_533_pp0_iter4_reg");
    sc_trace(mVcdFile, sub_ln897_fu_235_p2, "sub_ln897_fu_235_p2");
    sc_trace(mVcdFile, sub_ln897_reg_538, "sub_ln897_reg_538");
    sc_trace(mVcdFile, lsb_index_fu_241_p2, "lsb_index_fu_241_p2");
    sc_trace(mVcdFile, lsb_index_reg_543, "lsb_index_reg_543");
    sc_trace(mVcdFile, tmp_10_reg_549, "tmp_10_reg_549");
    sc_trace(mVcdFile, icmp_ln897_1_fu_270_p2, "icmp_ln897_1_fu_270_p2");
    sc_trace(mVcdFile, icmp_ln897_1_reg_554, "icmp_ln897_1_reg_554");
    sc_trace(mVcdFile, add_ln908_fu_276_p2, "add_ln908_fu_276_p2");
    sc_trace(mVcdFile, add_ln908_reg_559, "add_ln908_reg_559");
    sc_trace(mVcdFile, sub_ln908_fu_281_p2, "sub_ln908_fu_281_p2");
    sc_trace(mVcdFile, sub_ln908_reg_564, "sub_ln908_reg_564");
    sc_trace(mVcdFile, or_ln_fu_333_p3, "or_ln_fu_333_p3");
    sc_trace(mVcdFile, or_ln_reg_569, "or_ln_reg_569");
    sc_trace(mVcdFile, or_ln_reg_569_pp0_iter6_reg, "or_ln_reg_569_pp0_iter6_reg");
    sc_trace(mVcdFile, icmp_ln908_fu_347_p2, "icmp_ln908_fu_347_p2");
    sc_trace(mVcdFile, icmp_ln908_reg_584, "icmp_ln908_reg_584");
    sc_trace(mVcdFile, icmp_ln908_reg_584_pp0_iter6_reg, "icmp_ln908_reg_584_pp0_iter6_reg");
    sc_trace(mVcdFile, grp_fu_352_p2, "grp_fu_352_p2");
    sc_trace(mVcdFile, lshr_ln908_reg_594, "lshr_ln908_reg_594");
    sc_trace(mVcdFile, grp_fu_360_p2, "grp_fu_360_p2");
    sc_trace(mVcdFile, shl_ln908_reg_599, "shl_ln908_reg_599");
    sc_trace(mVcdFile, m_5_reg_604, "m_5_reg_604");
    sc_trace(mVcdFile, m_5_reg_604_pp0_iter8_reg, "m_5_reg_604_pp0_iter8_reg");
    sc_trace(mVcdFile, select_ln915_fu_402_p3, "select_ln915_fu_402_p3");
    sc_trace(mVcdFile, select_ln915_reg_609, "select_ln915_reg_609");
    sc_trace(mVcdFile, trunc_ln4_reg_614, "trunc_ln4_reg_614");
    sc_trace(mVcdFile, add_ln915_fu_425_p2, "add_ln915_fu_425_p2");
    sc_trace(mVcdFile, add_ln915_reg_619, "add_ln915_reg_619");
    sc_trace(mVcdFile, icmp_ln924_1_fu_430_p2, "icmp_ln924_1_fu_430_p2");
    sc_trace(mVcdFile, icmp_ln924_1_reg_625, "icmp_ln924_1_reg_625");
    sc_trace(mVcdFile, icmp_ln924_1_reg_625_pp0_iter9_reg, "icmp_ln924_1_reg_625_pp0_iter9_reg");
    sc_trace(mVcdFile, icmp_ln924_1_reg_625_pp0_iter10_reg, "icmp_ln924_1_reg_625_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln924_1_reg_625_pp0_iter11_reg, "icmp_ln924_1_reg_625_pp0_iter11_reg");
    sc_trace(mVcdFile, icmp_ln924_fu_461_p2, "icmp_ln924_fu_461_p2");
    sc_trace(mVcdFile, icmp_ln924_reg_635, "icmp_ln924_reg_635");
    sc_trace(mVcdFile, icmp_ln924_reg_635_pp0_iter10_reg, "icmp_ln924_reg_635_pp0_iter10_reg");
    sc_trace(mVcdFile, icmp_ln924_reg_635_pp0_iter11_reg, "icmp_ln924_reg_635_pp0_iter11_reg");
    sc_trace(mVcdFile, and_ln924_fu_470_p2, "and_ln924_fu_470_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_phi_mux_pixel_index_01_phi_fu_140_p6, "ap_phi_mux_pixel_index_01_phi_fu_140_p6");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_150_p0, "grp_fu_150_p0");
    sc_trace(mVcdFile, p_Result_s_fu_192_p4, "p_Result_s_fu_192_p4");
    sc_trace(mVcdFile, p_Result_7_fu_202_p3, "p_Result_7_fu_202_p3");
    sc_trace(mVcdFile, trunc_ln897_fu_231_p1, "trunc_ln897_fu_231_p1");
    sc_trace(mVcdFile, zext_ln897_fu_256_p1, "zext_ln897_fu_256_p1");
    sc_trace(mVcdFile, lshr_ln897_fu_259_p2, "lshr_ln897_fu_259_p2");
    sc_trace(mVcdFile, p_Result_4_fu_265_p2, "p_Result_4_fu_265_p2");
    sc_trace(mVcdFile, icmp_ln897_fu_286_p2, "icmp_ln897_fu_286_p2");
    sc_trace(mVcdFile, tmp_11_fu_296_p3, "tmp_11_fu_296_p3");
    sc_trace(mVcdFile, add_ln899_fu_309_p2, "add_ln899_fu_309_p2");
    sc_trace(mVcdFile, p_Result_3_fu_314_p3, "p_Result_3_fu_314_p3");
    sc_trace(mVcdFile, xor_ln899_fu_303_p2, "xor_ln899_fu_303_p2");
    sc_trace(mVcdFile, and_ln899_fu_321_p2, "and_ln899_fu_321_p2");
    sc_trace(mVcdFile, a_fu_291_p2, "a_fu_291_p2");
    sc_trace(mVcdFile, or_ln899_fu_327_p2, "or_ln899_fu_327_p2");
    sc_trace(mVcdFile, grp_fu_352_p0, "grp_fu_352_p0");
    sc_trace(mVcdFile, grp_fu_360_p0, "grp_fu_360_p0");
    sc_trace(mVcdFile, grp_fu_360_p1, "grp_fu_360_p1");
    sc_trace(mVcdFile, zext_ln908_fu_366_p1, "zext_ln908_fu_366_p1");
    sc_trace(mVcdFile, zext_ln911_fu_375_p1, "zext_ln911_fu_375_p1");
    sc_trace(mVcdFile, m_1_fu_369_p3, "m_1_fu_369_p3");
    sc_trace(mVcdFile, m_2_fu_378_p2, "m_2_fu_378_p2");
    sc_trace(mVcdFile, tmp_12_fu_394_p3, "tmp_12_fu_394_p3");
    sc_trace(mVcdFile, sub_ln915_fu_420_p2, "sub_ln915_fu_420_p2");
    sc_trace(mVcdFile, m_6_fu_435_p1, "m_6_fu_435_p1");
    sc_trace(mVcdFile, tmp_2_fu_438_p3, "tmp_2_fu_438_p3");
    sc_trace(mVcdFile, p_Result_8_fu_444_p5, "p_Result_8_fu_444_p5");
    sc_trace(mVcdFile, or_ln924_fu_466_p2, "or_ln924_fu_466_p2");
    sc_trace(mVcdFile, grp_fu_150_p2, "grp_fu_150_p2");
    sc_trace(mVcdFile, grp_fu_150_ce, "grp_fu_150_ce");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, grp_fu_352_ce, "grp_fu_352_ce");
    sc_trace(mVcdFile, grp_fu_360_ce, "grp_fu_360_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to12, "ap_idle_pp0_0to12");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_290, "ap_condition_290");
#endif

    }
}

relu::~relu() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete fpgaconvnet_ip_dcfYi_U2548;
    delete fpgaconvnet_ip_ls9j0_U2549;
    delete fpgaconvnet_ip_shbak_U2550;
}

void relu::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv64_0;
}

void relu::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_4;
}

void relu::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter13 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln49_reg_490.read()))) {
        pixel_index_01_reg_136 = pixel_index_reg_485.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                 esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln49_reg_490.read())))) {
        pixel_index_01_reg_136 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_reg_494_pp0_iter3_reg.read()))) {
        add_ln908_reg_559 = add_ln908_fu_276_p2.read();
        icmp_ln897_1_reg_554 = icmp_ln897_1_fu_270_p2.read();
        lsb_index_reg_543 = lsb_index_fu_241_p2.read();
        sub_ln908_reg_564 = sub_ln908_fu_281_p2.read();
        tmp_10_reg_549 = lsb_index_fu_241_p2.read().range(31, 1);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_reg_494_pp0_iter7_reg.read()))) {
        add_ln915_reg_619 = add_ln915_fu_425_p2.read();
        icmp_ln924_1_reg_625 = icmp_ln924_1_fu_430_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_reg_494_pp0_iter11_reg.read()))) {
        and_ln924_reg_640 = and_ln924_fu_470_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln49_reg_490 = icmp_ln49_fu_161_p2.read();
        icmp_ln49_reg_490_pp0_iter1_reg = icmp_ln49_reg_490.read();
        icmp_ln885_reg_494 = icmp_ln885_fu_169_p2.read();
        tmp_V_132_reg_476 = in_V_V_dout.read();
        tmp_V_132_reg_476_pp0_iter1_reg = tmp_V_132_reg_476.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln49_reg_490_pp0_iter10_reg = icmp_ln49_reg_490_pp0_iter9_reg.read();
        icmp_ln49_reg_490_pp0_iter11_reg = icmp_ln49_reg_490_pp0_iter10_reg.read();
        icmp_ln49_reg_490_pp0_iter12_reg = icmp_ln49_reg_490_pp0_iter11_reg.read();
        icmp_ln49_reg_490_pp0_iter2_reg = icmp_ln49_reg_490_pp0_iter1_reg.read();
        icmp_ln49_reg_490_pp0_iter3_reg = icmp_ln49_reg_490_pp0_iter2_reg.read();
        icmp_ln49_reg_490_pp0_iter4_reg = icmp_ln49_reg_490_pp0_iter3_reg.read();
        icmp_ln49_reg_490_pp0_iter5_reg = icmp_ln49_reg_490_pp0_iter4_reg.read();
        icmp_ln49_reg_490_pp0_iter6_reg = icmp_ln49_reg_490_pp0_iter5_reg.read();
        icmp_ln49_reg_490_pp0_iter7_reg = icmp_ln49_reg_490_pp0_iter6_reg.read();
        icmp_ln49_reg_490_pp0_iter8_reg = icmp_ln49_reg_490_pp0_iter7_reg.read();
        icmp_ln49_reg_490_pp0_iter9_reg = icmp_ln49_reg_490_pp0_iter8_reg.read();
        icmp_ln885_reg_494_pp0_iter10_reg = icmp_ln885_reg_494_pp0_iter9_reg.read();
        icmp_ln885_reg_494_pp0_iter11_reg = icmp_ln885_reg_494_pp0_iter10_reg.read();
        icmp_ln885_reg_494_pp0_iter12_reg = icmp_ln885_reg_494_pp0_iter11_reg.read();
        icmp_ln885_reg_494_pp0_iter2_reg = icmp_ln885_reg_494.read();
        icmp_ln885_reg_494_pp0_iter3_reg = icmp_ln885_reg_494_pp0_iter2_reg.read();
        icmp_ln885_reg_494_pp0_iter4_reg = icmp_ln885_reg_494_pp0_iter3_reg.read();
        icmp_ln885_reg_494_pp0_iter5_reg = icmp_ln885_reg_494_pp0_iter4_reg.read();
        icmp_ln885_reg_494_pp0_iter6_reg = icmp_ln885_reg_494_pp0_iter5_reg.read();
        icmp_ln885_reg_494_pp0_iter7_reg = icmp_ln885_reg_494_pp0_iter6_reg.read();
        icmp_ln885_reg_494_pp0_iter8_reg = icmp_ln885_reg_494_pp0_iter7_reg.read();
        icmp_ln885_reg_494_pp0_iter9_reg = icmp_ln885_reg_494_pp0_iter8_reg.read();
        icmp_ln908_reg_584_pp0_iter6_reg = icmp_ln908_reg_584.read();
        icmp_ln924_1_reg_625_pp0_iter10_reg = icmp_ln924_1_reg_625_pp0_iter9_reg.read();
        icmp_ln924_1_reg_625_pp0_iter11_reg = icmp_ln924_1_reg_625_pp0_iter10_reg.read();
        icmp_ln924_1_reg_625_pp0_iter9_reg = icmp_ln924_1_reg_625.read();
        icmp_ln924_reg_635_pp0_iter10_reg = icmp_ln924_reg_635.read();
        icmp_ln924_reg_635_pp0_iter11_reg = icmp_ln924_reg_635_pp0_iter10_reg.read();
        m_5_reg_604_pp0_iter8_reg = m_5_reg_604.read();
        or_ln_reg_569_pp0_iter6_reg = or_ln_reg_569.read();
        p_Result_6_reg_503_pp0_iter3_reg = p_Result_6_reg_503.read();
        p_Result_6_reg_503_pp0_iter4_reg = p_Result_6_reg_503_pp0_iter3_reg.read();
        p_Result_6_reg_503_pp0_iter5_reg = p_Result_6_reg_503_pp0_iter4_reg.read();
        p_Result_6_reg_503_pp0_iter6_reg = p_Result_6_reg_503_pp0_iter5_reg.read();
        p_Result_6_reg_503_pp0_iter7_reg = p_Result_6_reg_503_pp0_iter6_reg.read();
        p_Result_6_reg_503_pp0_iter8_reg = p_Result_6_reg_503_pp0_iter7_reg.read();
        tmp_V_132_reg_476_pp0_iter10_reg = tmp_V_132_reg_476_pp0_iter9_reg.read();
        tmp_V_132_reg_476_pp0_iter11_reg = tmp_V_132_reg_476_pp0_iter10_reg.read();
        tmp_V_132_reg_476_pp0_iter12_reg = tmp_V_132_reg_476_pp0_iter11_reg.read();
        tmp_V_132_reg_476_pp0_iter2_reg = tmp_V_132_reg_476_pp0_iter1_reg.read();
        tmp_V_132_reg_476_pp0_iter3_reg = tmp_V_132_reg_476_pp0_iter2_reg.read();
        tmp_V_132_reg_476_pp0_iter4_reg = tmp_V_132_reg_476_pp0_iter3_reg.read();
        tmp_V_132_reg_476_pp0_iter5_reg = tmp_V_132_reg_476_pp0_iter4_reg.read();
        tmp_V_132_reg_476_pp0_iter6_reg = tmp_V_132_reg_476_pp0_iter5_reg.read();
        tmp_V_132_reg_476_pp0_iter7_reg = tmp_V_132_reg_476_pp0_iter6_reg.read();
        tmp_V_132_reg_476_pp0_iter8_reg = tmp_V_132_reg_476_pp0_iter7_reg.read();
        tmp_V_132_reg_476_pp0_iter9_reg = tmp_V_132_reg_476_pp0_iter8_reg.read();
        tmp_V_133_reg_508_pp0_iter3_reg = tmp_V_133_reg_508.read();
        tmp_V_133_reg_508_pp0_iter4_reg = tmp_V_133_reg_508_pp0_iter3_reg.read();
        trunc_ln893_reg_521_pp0_iter3_reg = trunc_ln893_reg_521.read();
        trunc_ln893_reg_521_pp0_iter4_reg = trunc_ln893_reg_521_pp0_iter3_reg.read();
        trunc_ln893_reg_521_pp0_iter5_reg = trunc_ln893_reg_521_pp0_iter4_reg.read();
        trunc_ln893_reg_521_pp0_iter6_reg = trunc_ln893_reg_521_pp0_iter5_reg.read();
        trunc_ln893_reg_521_pp0_iter7_reg = trunc_ln893_reg_521_pp0_iter6_reg.read();
        trunc_ln894_reg_533_pp0_iter4_reg = trunc_ln894_reg_533.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_reg_494_pp0_iter4_reg.read()))) {
        icmp_ln908_reg_584 = icmp_ln908_fu_347_p2.read();
        or_ln_reg_569 = or_ln_fu_333_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_reg_494_pp0_iter8_reg.read()))) {
        icmp_ln924_reg_635 = icmp_ln924_fu_461_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln885_reg_494.read(), ap_const_lv1_0))) {
        l_reg_516 = l_fu_210_p3.read();
        p_Result_6_reg_503 = tmp_V_132_reg_476_pp0_iter1_reg.read().range(15, 15);
        tmp_V_133_reg_508 = tmp_V_133_fu_186_p3.read();
        trunc_ln893_reg_521 = trunc_ln893_fu_218_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_reg_494_pp0_iter5_reg.read()))) {
        lshr_ln908_reg_594 = grp_fu_352_p2.read();
        shl_ln908_reg_599 = grp_fu_360_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_reg_494_pp0_iter6_reg.read()))) {
        m_5_reg_604 = m_2_fu_378_p2.read().range(63, 1);
        select_ln915_reg_609 = select_ln915_fu_402_p3.read();
        trunc_ln4_reg_614 = m_2_fu_378_p2.read().range(52, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        pixel_index_reg_485 = pixel_index_fu_155_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_reg_494_pp0_iter2_reg.read()))) {
        sub_ln894_reg_526 = sub_ln894_fu_222_p2.read();
        sub_ln897_reg_538 = sub_ln897_fu_235_p2.read();
        trunc_ln894_reg_533 = trunc_ln894_fu_227_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln885_fu_169_p2.read()))) {
        tmp_V_reg_498 = tmp_V_fu_174_p2.read();
    }
}

void relu::thread_a_fu_291_p2() {
    a_fu_291_p2 = (icmp_ln897_fu_286_p2.read() & icmp_ln897_1_reg_554.read());
}

void relu::thread_add_ln899_fu_309_p2() {
    add_ln899_fu_309_p2 = (!ap_const_lv16_FFCB.is_01() || !trunc_ln894_reg_533_pp0_iter4_reg.read().is_01())? sc_lv<16>(): (sc_bigint<16>(ap_const_lv16_FFCB) + sc_biguint<16>(trunc_ln894_reg_533_pp0_iter4_reg.read()));
}

void relu::thread_add_ln908_fu_276_p2() {
    add_ln908_fu_276_p2 = (!ap_const_lv32_FFFFFFCA.is_01() || !sub_ln894_reg_526.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFCA) + sc_biguint<32>(sub_ln894_reg_526.read()));
}

void relu::thread_add_ln915_fu_425_p2() {
    add_ln915_fu_425_p2 = (!sub_ln915_fu_420_p2.read().is_01() || !select_ln915_reg_609.read().is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln915_fu_420_p2.read()) + sc_biguint<11>(select_ln915_reg_609.read()));
}

void relu::thread_and_ln899_fu_321_p2() {
    and_ln899_fu_321_p2 = (p_Result_3_fu_314_p3.read() & xor_ln899_fu_303_p2.read());
}

void relu::thread_and_ln924_fu_470_p2() {
    and_ln924_fu_470_p2 = (or_ln924_fu_466_p2.read() & grp_fu_150_p2.read());
}

void relu::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void relu::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void relu::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read())));
}

void relu::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read())));
}

void relu::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read())));
}

void relu::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read())) || (((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_write_state3.read())) || 
   (esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
    esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_write_state3.read()))) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read())));
}

void relu::thread_ap_block_state10_pp0_stage0_iter7() {
    ap_block_state10_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state11_pp0_stage0_iter8() {
    ap_block_state11_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state12_pp0_stage0_iter9() {
    ap_block_state12_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state13_pp0_stage0_iter10() {
    ap_block_state13_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state14_pp0_stage0_iter11() {
    ap_block_state14_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state15_pp0_stage0_iter12() {
    ap_block_state15_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, in_V_V_empty_n.read());
}

void relu::thread_ap_block_state3_pp0_stage0_iter13() {
    ap_block_state3_pp0_stage0_iter13 = ((esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_write_state3.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, out_V_V_full_n.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_write_state3.read())));
}

void relu::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_block_state9_pp0_stage0_iter6() {
    ap_block_state9_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void relu::thread_ap_condition_290() {
    ap_condition_290 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()));
}

void relu::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln49_reg_490_pp0_iter12_reg.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void relu::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void relu::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void relu::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void relu::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void relu::thread_ap_idle_pp0_0to12() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()))) {
        ap_idle_pp0_0to12 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to12 = ap_const_logic_0;
    }
}

void relu::thread_ap_phi_mux_pixel_index_01_phi_fu_140_p6() {
    if (esl_seteq<1,1,1>(ap_condition_290.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln49_reg_490.read())) {
            ap_phi_mux_pixel_index_01_phi_fu_140_p6 = ap_const_lv10_0;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln49_reg_490.read())) {
            ap_phi_mux_pixel_index_01_phi_fu_140_p6 = pixel_index_reg_485.read();
        } else {
            ap_phi_mux_pixel_index_01_phi_fu_140_p6 = pixel_index_01_reg_136.read();
        }
    } else {
        ap_phi_mux_pixel_index_01_phi_fu_140_p6 = pixel_index_01_reg_136.read();
    }
}

void relu::thread_ap_predicate_op30_write_state3() {
    ap_predicate_op30_write_state3 = (esl_seteq<1,1,1>(icmp_ln885_reg_494_pp0_iter12_reg.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln924_reg_640.read()));
}

void relu::thread_ap_predicate_op32_write_state3() {
    ap_predicate_op32_write_state3 = (esl_seteq<1,1,1>(ap_const_lv1_0, and_ln924_reg_640.read()) || esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln885_reg_494_pp0_iter12_reg.read()));
}

void relu::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(icmp_ln49_fu_161_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void relu::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to12.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void relu::thread_grp_fu_150_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_150_ce = ap_const_logic_1;
    } else {
        grp_fu_150_ce = ap_const_logic_0;
    }
}

void relu::thread_grp_fu_150_p0() {
    grp_fu_150_p0 = p_Result_8_fu_444_p5.read();
}

void relu::thread_grp_fu_352_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_352_ce = ap_const_logic_1;
    } else {
        grp_fu_352_ce = ap_const_logic_0;
    }
}

void relu::thread_grp_fu_352_p0() {
    grp_fu_352_p0 = esl_zext<32,16>(tmp_V_133_reg_508_pp0_iter4_reg.read());
}

void relu::thread_grp_fu_360_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_360_ce = ap_const_logic_1;
    } else {
        grp_fu_360_ce = ap_const_logic_0;
    }
}

void relu::thread_grp_fu_360_p0() {
    grp_fu_360_p0 = esl_zext<64,16>(tmp_V_133_reg_508_pp0_iter4_reg.read());
}

void relu::thread_grp_fu_360_p1() {
    grp_fu_360_p1 = esl_zext<64,32>(sub_ln908_reg_564.read());
}

void relu::thread_icmp_ln49_fu_161_p2() {
    icmp_ln49_fu_161_p2 = (!ap_phi_mux_pixel_index_01_phi_fu_140_p6.read().is_01() || !ap_const_lv10_23F.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_pixel_index_01_phi_fu_140_p6.read() == ap_const_lv10_23F);
}

void relu::thread_icmp_ln885_fu_169_p2() {
    icmp_ln885_fu_169_p2 = (!tmp_V_132_reg_476.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_132_reg_476.read() == ap_const_lv16_0);
}

void relu::thread_icmp_ln897_1_fu_270_p2() {
    icmp_ln897_1_fu_270_p2 = (!p_Result_4_fu_265_p2.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_4_fu_265_p2.read() != ap_const_lv16_0);
}

void relu::thread_icmp_ln897_fu_286_p2() {
    icmp_ln897_fu_286_p2 = (!tmp_10_reg_549.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_10_reg_549.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void relu::thread_icmp_ln908_fu_347_p2() {
    icmp_ln908_fu_347_p2 = (!lsb_index_reg_543.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(lsb_index_reg_543.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void relu::thread_icmp_ln924_1_fu_430_p2() {
    icmp_ln924_1_fu_430_p2 = (!trunc_ln4_reg_614.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln4_reg_614.read() == ap_const_lv52_0);
}

void relu::thread_icmp_ln924_fu_461_p2() {
    icmp_ln924_fu_461_p2 = (!add_ln915_reg_619.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(add_ln915_reg_619.read() != ap_const_lv11_7FF);
}

void relu::thread_in_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        in_V_V_blk_n = in_V_V_empty_n.read();
    } else {
        in_V_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_in_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_V_V_read = ap_const_logic_1;
    } else {
        in_V_V_read = ap_const_logic_0;
    }
}

void relu::thread_l_fu_210_p3() {
    l_fu_210_p3 = esl_cttz<32,32>(p_Result_7_fu_202_p3.read());
}

void relu::thread_lsb_index_fu_241_p2() {
    lsb_index_fu_241_p2 = (!ap_const_lv32_FFFFFFCB.is_01() || !sub_ln894_reg_526.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFCB) + sc_biguint<32>(sub_ln894_reg_526.read()));
}

void relu::thread_lshr_ln897_fu_259_p2() {
    lshr_ln897_fu_259_p2 = (!zext_ln897_fu_256_p1.read().is_01())? sc_lv<16>(): ap_const_lv16_FFFF >> (unsigned short)zext_ln897_fu_256_p1.read().to_uint();
}

void relu::thread_m_1_fu_369_p3() {
    m_1_fu_369_p3 = (!icmp_ln908_reg_584_pp0_iter6_reg.read()[0].is_01())? sc_lv<64>(): ((icmp_ln908_reg_584_pp0_iter6_reg.read()[0].to_bool())? zext_ln908_fu_366_p1.read(): shl_ln908_reg_599.read());
}

void relu::thread_m_2_fu_378_p2() {
    m_2_fu_378_p2 = (!zext_ln911_fu_375_p1.read().is_01() || !m_1_fu_369_p3.read().is_01())? sc_lv<64>(): (sc_biguint<64>(zext_ln911_fu_375_p1.read()) + sc_biguint<64>(m_1_fu_369_p3.read()));
}

void relu::thread_m_6_fu_435_p1() {
    m_6_fu_435_p1 = esl_zext<64,63>(m_5_reg_604_pp0_iter8_reg.read());
}

void relu::thread_or_ln899_fu_327_p2() {
    or_ln899_fu_327_p2 = (and_ln899_fu_321_p2.read() | a_fu_291_p2.read());
}

void relu::thread_or_ln924_fu_466_p2() {
    or_ln924_fu_466_p2 = (icmp_ln924_1_reg_625_pp0_iter11_reg.read() | icmp_ln924_reg_635_pp0_iter11_reg.read());
}

void relu::thread_or_ln_fu_333_p3() {
    or_ln_fu_333_p3 = esl_concat<31,1>(ap_const_lv31_0, or_ln899_fu_327_p2.read());
}

void relu::thread_out_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        out_V_V_blk_n = out_V_V_full_n.read();
    } else {
        out_V_V_blk_n = ap_const_logic_1;
    }
}

void relu::thread_out_V_V_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_01001.read(), ap_const_boolean_0))) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_write_state3.read())) {
            out_V_V_din = tmp_V_132_reg_476_pp0_iter12_reg.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_write_state3.read())) {
            out_V_V_din = ap_const_lv16_0;
        } else {
            out_V_V_din = "XXXXXXXXXXXXXXXX";
        }
    } else {
        out_V_V_din = "XXXXXXXXXXXXXXXX";
    }
}

void relu::thread_out_V_V_write() {
    if (((esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op30_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op32_write_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        out_V_V_write = ap_const_logic_1;
    } else {
        out_V_V_write = ap_const_logic_0;
    }
}

void relu::thread_p_Result_3_fu_314_p3() {
    p_Result_3_fu_314_p3 = (!add_ln899_fu_309_p2.read().is_01() || sc_biguint<16>(add_ln899_fu_309_p2.read()).to_uint() >= 16)? sc_lv<1>(): tmp_V_133_reg_508_pp0_iter4_reg.read().range(sc_biguint<16>(add_ln899_fu_309_p2.read()).to_uint(), sc_biguint<16>(add_ln899_fu_309_p2.read()).to_uint());
}

void relu::thread_p_Result_4_fu_265_p2() {
    p_Result_4_fu_265_p2 = (tmp_V_133_reg_508_pp0_iter3_reg.read() & lshr_ln897_fu_259_p2.read());
}

void relu::thread_p_Result_6_fu_179_p3() {
    p_Result_6_fu_179_p3 = tmp_V_132_reg_476_pp0_iter1_reg.read().range(15, 15);
}

void relu::thread_p_Result_7_fu_202_p3() {
    p_Result_7_fu_202_p3 = esl_concat<16,16>(ap_const_lv16_FFFF, p_Result_s_fu_192_p4.read());
}

void relu::thread_p_Result_8_fu_444_p5() {
    p_Result_8_fu_444_p5 = esl_partset<64,64,12,32,32>(m_6_fu_435_p1.read(), tmp_2_fu_438_p3.read(), ap_const_lv32_34, ap_const_lv32_3F);
}

void relu::thread_p_Result_s_fu_192_p4() {
    p_Result_s_fu_192_p4 = tmp_V_133_fu_186_p3.read().range(0, 15);
}

void relu::thread_pixel_index_fu_155_p2() {
    pixel_index_fu_155_p2 = (!ap_phi_mux_pixel_index_01_phi_fu_140_p6.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(ap_phi_mux_pixel_index_01_phi_fu_140_p6.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void relu::thread_select_ln915_fu_402_p3() {
    select_ln915_fu_402_p3 = (!tmp_12_fu_394_p3.read()[0].is_01())? sc_lv<11>(): ((tmp_12_fu_394_p3.read()[0].to_bool())? ap_const_lv11_3FF: ap_const_lv11_3FE);
}

void relu::thread_sub_ln894_fu_222_p2() {
    sub_ln894_fu_222_p2 = (!ap_const_lv32_10.is_01() || !l_reg_516.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_10) - sc_biguint<32>(l_reg_516.read()));
}

void relu::thread_sub_ln897_fu_235_p2() {
    sub_ln897_fu_235_p2 = (!ap_const_lv5_6.is_01() || !trunc_ln897_fu_231_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_6) - sc_biguint<5>(trunc_ln897_fu_231_p1.read()));
}

void relu::thread_sub_ln908_fu_281_p2() {
    sub_ln908_fu_281_p2 = (!ap_const_lv32_36.is_01() || !sub_ln894_reg_526.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_36) - sc_biguint<32>(sub_ln894_reg_526.read()));
}

void relu::thread_sub_ln915_fu_420_p2() {
    sub_ln915_fu_420_p2 = (!ap_const_lv11_8.is_01() || !trunc_ln893_reg_521_pp0_iter7_reg.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_8) - sc_biguint<11>(trunc_ln893_reg_521_pp0_iter7_reg.read()));
}

void relu::thread_tmp_11_fu_296_p3() {
    tmp_11_fu_296_p3 = lsb_index_reg_543.read().range(31, 31);
}

void relu::thread_tmp_12_fu_394_p3() {
    tmp_12_fu_394_p3 = m_2_fu_378_p2.read().range(54, 54);
}

void relu::thread_tmp_2_fu_438_p3() {
    tmp_2_fu_438_p3 = esl_concat<1,11>(p_Result_6_reg_503_pp0_iter8_reg.read(), add_ln915_reg_619.read());
}

void relu::thread_tmp_V_133_fu_186_p3() {
    tmp_V_133_fu_186_p3 = (!p_Result_6_fu_179_p3.read()[0].is_01())? sc_lv<16>(): ((p_Result_6_fu_179_p3.read()[0].to_bool())? tmp_V_reg_498.read(): tmp_V_132_reg_476_pp0_iter1_reg.read());
}

void relu::thread_tmp_V_fu_174_p2() {
    tmp_V_fu_174_p2 = (!ap_const_lv16_0.is_01() || !tmp_V_132_reg_476.read().is_01())? sc_lv<16>(): (sc_biguint<16>(ap_const_lv16_0) - sc_biguint<16>(tmp_V_132_reg_476.read()));
}

void relu::thread_trunc_ln893_fu_218_p1() {
    trunc_ln893_fu_218_p1 = l_fu_210_p3.read().range(11-1, 0);
}

void relu::thread_trunc_ln894_fu_227_p1() {
    trunc_ln894_fu_227_p1 = sub_ln894_fu_222_p2.read().range(16-1, 0);
}

void relu::thread_trunc_ln897_fu_231_p1() {
    trunc_ln897_fu_231_p1 = sub_ln894_fu_222_p2.read().range(5-1, 0);
}

void relu::thread_xor_ln899_fu_303_p2() {
    xor_ln899_fu_303_p2 = (tmp_11_fu_296_p3.read() ^ ap_const_lv1_1);
}

void relu::thread_zext_ln897_fu_256_p1() {
    zext_ln897_fu_256_p1 = esl_zext<16,5>(sub_ln897_reg_538.read());
}

void relu::thread_zext_ln908_fu_366_p1() {
    zext_ln908_fu_366_p1 = esl_zext<64,32>(lshr_ln908_reg_594.read());
}

void relu::thread_zext_ln911_fu_375_p1() {
    zext_ln911_fu_375_p1 = esl_zext<64,32>(or_ln_reg_569_pp0_iter6_reg.read());
}

void relu::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_reset_idle_pp0.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reset_idle_pp0.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<2>) ("XX");
            break;
    }
}

}

