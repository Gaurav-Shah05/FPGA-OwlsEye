// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "squeeze_Relu_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic squeeze_Relu_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> squeeze_Relu_1::ap_const_lv16_0 = "0000000000000000";
const sc_logic squeeze_Relu_1::ap_const_logic_1 = sc_dt::Log_1;

squeeze_Relu_1::squeeze_Relu_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    squeeze_1_U0 = new squeeze_1("squeeze_1_U0");
    squeeze_1_U0->in_0_V_V_dout(in_0_V_V_dout);
    squeeze_1_U0->in_0_V_V_empty_n(in_0_V_V_empty_n);
    squeeze_1_U0->in_0_V_V_read(squeeze_1_U0_in_0_V_V_read);
    squeeze_1_U0->in_1_V_V_dout(in_1_V_V_dout);
    squeeze_1_U0->in_1_V_V_empty_n(in_1_V_V_empty_n);
    squeeze_1_U0->in_1_V_V_read(squeeze_1_U0_in_1_V_V_read);
    squeeze_1_U0->in_2_V_V_dout(in_2_V_V_dout);
    squeeze_1_U0->in_2_V_V_empty_n(in_2_V_V_empty_n);
    squeeze_1_U0->in_2_V_V_read(squeeze_1_U0_in_2_V_V_read);
    squeeze_1_U0->in_3_V_V_dout(in_3_V_V_dout);
    squeeze_1_U0->in_3_V_V_empty_n(in_3_V_V_empty_n);
    squeeze_1_U0->in_3_V_V_read(squeeze_1_U0_in_3_V_V_read);
    squeeze_1_U0->in_4_V_V_dout(in_4_V_V_dout);
    squeeze_1_U0->in_4_V_V_empty_n(in_4_V_V_empty_n);
    squeeze_1_U0->in_4_V_V_read(squeeze_1_U0_in_4_V_V_read);
    squeeze_1_U0->in_5_V_V_dout(in_5_V_V_dout);
    squeeze_1_U0->in_5_V_V_empty_n(in_5_V_V_empty_n);
    squeeze_1_U0->in_5_V_V_read(squeeze_1_U0_in_5_V_V_read);
    squeeze_1_U0->in_6_V_V_dout(in_6_V_V_dout);
    squeeze_1_U0->in_6_V_V_empty_n(in_6_V_V_empty_n);
    squeeze_1_U0->in_6_V_V_read(squeeze_1_U0_in_6_V_V_read);
    squeeze_1_U0->in_7_V_V_dout(in_7_V_V_dout);
    squeeze_1_U0->in_7_V_V_empty_n(in_7_V_V_empty_n);
    squeeze_1_U0->in_7_V_V_read(squeeze_1_U0_in_7_V_V_read);
    squeeze_1_U0->in_8_V_V_dout(in_8_V_V_dout);
    squeeze_1_U0->in_8_V_V_empty_n(in_8_V_V_empty_n);
    squeeze_1_U0->in_8_V_V_read(squeeze_1_U0_in_8_V_V_read);
    squeeze_1_U0->in_9_V_V_dout(in_9_V_V_dout);
    squeeze_1_U0->in_9_V_V_empty_n(in_9_V_V_empty_n);
    squeeze_1_U0->in_9_V_V_read(squeeze_1_U0_in_9_V_V_read);
    squeeze_1_U0->in_10_V_V_dout(in_10_V_V_dout);
    squeeze_1_U0->in_10_V_V_empty_n(in_10_V_V_empty_n);
    squeeze_1_U0->in_10_V_V_read(squeeze_1_U0_in_10_V_V_read);
    squeeze_1_U0->in_11_V_V_dout(in_11_V_V_dout);
    squeeze_1_U0->in_11_V_V_empty_n(in_11_V_V_empty_n);
    squeeze_1_U0->in_11_V_V_read(squeeze_1_U0_in_11_V_V_read);
    squeeze_1_U0->in_12_V_V_dout(in_12_V_V_dout);
    squeeze_1_U0->in_12_V_V_empty_n(in_12_V_V_empty_n);
    squeeze_1_U0->in_12_V_V_read(squeeze_1_U0_in_12_V_V_read);
    squeeze_1_U0->in_13_V_V_dout(in_13_V_V_dout);
    squeeze_1_U0->in_13_V_V_empty_n(in_13_V_V_empty_n);
    squeeze_1_U0->in_13_V_V_read(squeeze_1_U0_in_13_V_V_read);
    squeeze_1_U0->in_14_V_V_dout(in_14_V_V_dout);
    squeeze_1_U0->in_14_V_V_empty_n(in_14_V_V_empty_n);
    squeeze_1_U0->in_14_V_V_read(squeeze_1_U0_in_14_V_V_read);
    squeeze_1_U0->in_15_V_V_dout(in_15_V_V_dout);
    squeeze_1_U0->in_15_V_V_empty_n(in_15_V_V_empty_n);
    squeeze_1_U0->in_15_V_V_read(squeeze_1_U0_in_15_V_V_read);
    squeeze_1_U0->out_0_V_V_din(squeeze_1_U0_out_0_V_V_din);
    squeeze_1_U0->out_0_V_V_full_n(out_0_V_V_full_n);
    squeeze_1_U0->out_0_V_V_write(squeeze_1_U0_out_0_V_V_write);
    squeeze_1_U0->out_1_V_V_din(squeeze_1_U0_out_1_V_V_din);
    squeeze_1_U0->out_1_V_V_full_n(out_1_V_V_full_n);
    squeeze_1_U0->out_1_V_V_write(squeeze_1_U0_out_1_V_V_write);
    squeeze_1_U0->out_2_V_V_din(squeeze_1_U0_out_2_V_V_din);
    squeeze_1_U0->out_2_V_V_full_n(out_2_V_V_full_n);
    squeeze_1_U0->out_2_V_V_write(squeeze_1_U0_out_2_V_V_write);
    squeeze_1_U0->out_3_V_V_din(squeeze_1_U0_out_3_V_V_din);
    squeeze_1_U0->out_3_V_V_full_n(out_3_V_V_full_n);
    squeeze_1_U0->out_3_V_V_write(squeeze_1_U0_out_3_V_V_write);
    squeeze_1_U0->ap_clk(ap_clk);
    squeeze_1_U0->ap_rst(ap_rst);
    squeeze_1_U0->ap_start(squeeze_1_U0_ap_start);
    squeeze_1_U0->ap_done(squeeze_1_U0_ap_done);
    squeeze_1_U0->ap_ready(squeeze_1_U0_ap_ready);
    squeeze_1_U0->ap_idle(squeeze_1_U0_ap_idle);
    squeeze_1_U0->ap_continue(squeeze_1_U0_ap_continue);

    SC_METHOD(thread_ap_done);
    sensitive << ( squeeze_1_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( squeeze_1_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( squeeze_1_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( squeeze_1_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( squeeze_1_U0_ap_ready );

    SC_METHOD(thread_in_0_V_V_read);
    sensitive << ( squeeze_1_U0_in_0_V_V_read );

    SC_METHOD(thread_in_10_V_V_read);
    sensitive << ( squeeze_1_U0_in_10_V_V_read );

    SC_METHOD(thread_in_11_V_V_read);
    sensitive << ( squeeze_1_U0_in_11_V_V_read );

    SC_METHOD(thread_in_12_V_V_read);
    sensitive << ( squeeze_1_U0_in_12_V_V_read );

    SC_METHOD(thread_in_13_V_V_read);
    sensitive << ( squeeze_1_U0_in_13_V_V_read );

    SC_METHOD(thread_in_14_V_V_read);
    sensitive << ( squeeze_1_U0_in_14_V_V_read );

    SC_METHOD(thread_in_15_V_V_read);
    sensitive << ( squeeze_1_U0_in_15_V_V_read );

    SC_METHOD(thread_in_1_V_V_read);
    sensitive << ( squeeze_1_U0_in_1_V_V_read );

    SC_METHOD(thread_in_2_V_V_read);
    sensitive << ( squeeze_1_U0_in_2_V_V_read );

    SC_METHOD(thread_in_3_V_V_read);
    sensitive << ( squeeze_1_U0_in_3_V_V_read );

    SC_METHOD(thread_in_4_V_V_read);
    sensitive << ( squeeze_1_U0_in_4_V_V_read );

    SC_METHOD(thread_in_5_V_V_read);
    sensitive << ( squeeze_1_U0_in_5_V_V_read );

    SC_METHOD(thread_in_6_V_V_read);
    sensitive << ( squeeze_1_U0_in_6_V_V_read );

    SC_METHOD(thread_in_7_V_V_read);
    sensitive << ( squeeze_1_U0_in_7_V_V_read );

    SC_METHOD(thread_in_8_V_V_read);
    sensitive << ( squeeze_1_U0_in_8_V_V_read );

    SC_METHOD(thread_in_9_V_V_read);
    sensitive << ( squeeze_1_U0_in_9_V_V_read );

    SC_METHOD(thread_out_0_V_V_din);
    sensitive << ( squeeze_1_U0_out_0_V_V_din );

    SC_METHOD(thread_out_0_V_V_write);
    sensitive << ( squeeze_1_U0_out_0_V_V_write );

    SC_METHOD(thread_out_1_V_V_din);
    sensitive << ( squeeze_1_U0_out_1_V_V_din );

    SC_METHOD(thread_out_1_V_V_write);
    sensitive << ( squeeze_1_U0_out_1_V_V_write );

    SC_METHOD(thread_out_2_V_V_din);
    sensitive << ( squeeze_1_U0_out_2_V_V_din );

    SC_METHOD(thread_out_2_V_V_write);
    sensitive << ( squeeze_1_U0_out_2_V_V_write );

    SC_METHOD(thread_out_3_V_V_din);
    sensitive << ( squeeze_1_U0_out_3_V_V_din );

    SC_METHOD(thread_out_3_V_V_write);
    sensitive << ( squeeze_1_U0_out_3_V_V_write );

    SC_METHOD(thread_squeeze_1_U0_ap_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_squeeze_1_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_squeeze_1_U0_start_full_n);

    SC_METHOD(thread_squeeze_1_U0_start_write);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "squeeze_Relu_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, in_0_V_V_dout, "(port)in_0_V_V_dout");
    sc_trace(mVcdFile, in_0_V_V_empty_n, "(port)in_0_V_V_empty_n");
    sc_trace(mVcdFile, in_0_V_V_read, "(port)in_0_V_V_read");
    sc_trace(mVcdFile, in_1_V_V_dout, "(port)in_1_V_V_dout");
    sc_trace(mVcdFile, in_1_V_V_empty_n, "(port)in_1_V_V_empty_n");
    sc_trace(mVcdFile, in_1_V_V_read, "(port)in_1_V_V_read");
    sc_trace(mVcdFile, in_2_V_V_dout, "(port)in_2_V_V_dout");
    sc_trace(mVcdFile, in_2_V_V_empty_n, "(port)in_2_V_V_empty_n");
    sc_trace(mVcdFile, in_2_V_V_read, "(port)in_2_V_V_read");
    sc_trace(mVcdFile, in_3_V_V_dout, "(port)in_3_V_V_dout");
    sc_trace(mVcdFile, in_3_V_V_empty_n, "(port)in_3_V_V_empty_n");
    sc_trace(mVcdFile, in_3_V_V_read, "(port)in_3_V_V_read");
    sc_trace(mVcdFile, in_4_V_V_dout, "(port)in_4_V_V_dout");
    sc_trace(mVcdFile, in_4_V_V_empty_n, "(port)in_4_V_V_empty_n");
    sc_trace(mVcdFile, in_4_V_V_read, "(port)in_4_V_V_read");
    sc_trace(mVcdFile, in_5_V_V_dout, "(port)in_5_V_V_dout");
    sc_trace(mVcdFile, in_5_V_V_empty_n, "(port)in_5_V_V_empty_n");
    sc_trace(mVcdFile, in_5_V_V_read, "(port)in_5_V_V_read");
    sc_trace(mVcdFile, in_6_V_V_dout, "(port)in_6_V_V_dout");
    sc_trace(mVcdFile, in_6_V_V_empty_n, "(port)in_6_V_V_empty_n");
    sc_trace(mVcdFile, in_6_V_V_read, "(port)in_6_V_V_read");
    sc_trace(mVcdFile, in_7_V_V_dout, "(port)in_7_V_V_dout");
    sc_trace(mVcdFile, in_7_V_V_empty_n, "(port)in_7_V_V_empty_n");
    sc_trace(mVcdFile, in_7_V_V_read, "(port)in_7_V_V_read");
    sc_trace(mVcdFile, in_8_V_V_dout, "(port)in_8_V_V_dout");
    sc_trace(mVcdFile, in_8_V_V_empty_n, "(port)in_8_V_V_empty_n");
    sc_trace(mVcdFile, in_8_V_V_read, "(port)in_8_V_V_read");
    sc_trace(mVcdFile, in_9_V_V_dout, "(port)in_9_V_V_dout");
    sc_trace(mVcdFile, in_9_V_V_empty_n, "(port)in_9_V_V_empty_n");
    sc_trace(mVcdFile, in_9_V_V_read, "(port)in_9_V_V_read");
    sc_trace(mVcdFile, in_10_V_V_dout, "(port)in_10_V_V_dout");
    sc_trace(mVcdFile, in_10_V_V_empty_n, "(port)in_10_V_V_empty_n");
    sc_trace(mVcdFile, in_10_V_V_read, "(port)in_10_V_V_read");
    sc_trace(mVcdFile, in_11_V_V_dout, "(port)in_11_V_V_dout");
    sc_trace(mVcdFile, in_11_V_V_empty_n, "(port)in_11_V_V_empty_n");
    sc_trace(mVcdFile, in_11_V_V_read, "(port)in_11_V_V_read");
    sc_trace(mVcdFile, in_12_V_V_dout, "(port)in_12_V_V_dout");
    sc_trace(mVcdFile, in_12_V_V_empty_n, "(port)in_12_V_V_empty_n");
    sc_trace(mVcdFile, in_12_V_V_read, "(port)in_12_V_V_read");
    sc_trace(mVcdFile, in_13_V_V_dout, "(port)in_13_V_V_dout");
    sc_trace(mVcdFile, in_13_V_V_empty_n, "(port)in_13_V_V_empty_n");
    sc_trace(mVcdFile, in_13_V_V_read, "(port)in_13_V_V_read");
    sc_trace(mVcdFile, in_14_V_V_dout, "(port)in_14_V_V_dout");
    sc_trace(mVcdFile, in_14_V_V_empty_n, "(port)in_14_V_V_empty_n");
    sc_trace(mVcdFile, in_14_V_V_read, "(port)in_14_V_V_read");
    sc_trace(mVcdFile, in_15_V_V_dout, "(port)in_15_V_V_dout");
    sc_trace(mVcdFile, in_15_V_V_empty_n, "(port)in_15_V_V_empty_n");
    sc_trace(mVcdFile, in_15_V_V_read, "(port)in_15_V_V_read");
    sc_trace(mVcdFile, out_0_V_V_din, "(port)out_0_V_V_din");
    sc_trace(mVcdFile, out_0_V_V_full_n, "(port)out_0_V_V_full_n");
    sc_trace(mVcdFile, out_0_V_V_write, "(port)out_0_V_V_write");
    sc_trace(mVcdFile, out_1_V_V_din, "(port)out_1_V_V_din");
    sc_trace(mVcdFile, out_1_V_V_full_n, "(port)out_1_V_V_full_n");
    sc_trace(mVcdFile, out_1_V_V_write, "(port)out_1_V_V_write");
    sc_trace(mVcdFile, out_2_V_V_din, "(port)out_2_V_V_din");
    sc_trace(mVcdFile, out_2_V_V_full_n, "(port)out_2_V_V_full_n");
    sc_trace(mVcdFile, out_2_V_V_write, "(port)out_2_V_V_write");
    sc_trace(mVcdFile, out_3_V_V_din, "(port)out_3_V_V_din");
    sc_trace(mVcdFile, out_3_V_V_full_n, "(port)out_3_V_V_full_n");
    sc_trace(mVcdFile, out_3_V_V_write, "(port)out_3_V_V_write");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, squeeze_1_U0_in_0_V_V_read, "squeeze_1_U0_in_0_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_1_V_V_read, "squeeze_1_U0_in_1_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_2_V_V_read, "squeeze_1_U0_in_2_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_3_V_V_read, "squeeze_1_U0_in_3_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_4_V_V_read, "squeeze_1_U0_in_4_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_5_V_V_read, "squeeze_1_U0_in_5_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_6_V_V_read, "squeeze_1_U0_in_6_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_7_V_V_read, "squeeze_1_U0_in_7_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_8_V_V_read, "squeeze_1_U0_in_8_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_9_V_V_read, "squeeze_1_U0_in_9_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_10_V_V_read, "squeeze_1_U0_in_10_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_11_V_V_read, "squeeze_1_U0_in_11_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_12_V_V_read, "squeeze_1_U0_in_12_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_13_V_V_read, "squeeze_1_U0_in_13_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_14_V_V_read, "squeeze_1_U0_in_14_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_in_15_V_V_read, "squeeze_1_U0_in_15_V_V_read");
    sc_trace(mVcdFile, squeeze_1_U0_out_0_V_V_din, "squeeze_1_U0_out_0_V_V_din");
    sc_trace(mVcdFile, squeeze_1_U0_out_0_V_V_write, "squeeze_1_U0_out_0_V_V_write");
    sc_trace(mVcdFile, squeeze_1_U0_out_1_V_V_din, "squeeze_1_U0_out_1_V_V_din");
    sc_trace(mVcdFile, squeeze_1_U0_out_1_V_V_write, "squeeze_1_U0_out_1_V_V_write");
    sc_trace(mVcdFile, squeeze_1_U0_out_2_V_V_din, "squeeze_1_U0_out_2_V_V_din");
    sc_trace(mVcdFile, squeeze_1_U0_out_2_V_V_write, "squeeze_1_U0_out_2_V_V_write");
    sc_trace(mVcdFile, squeeze_1_U0_out_3_V_V_din, "squeeze_1_U0_out_3_V_V_din");
    sc_trace(mVcdFile, squeeze_1_U0_out_3_V_V_write, "squeeze_1_U0_out_3_V_V_write");
    sc_trace(mVcdFile, squeeze_1_U0_ap_start, "squeeze_1_U0_ap_start");
    sc_trace(mVcdFile, squeeze_1_U0_ap_done, "squeeze_1_U0_ap_done");
    sc_trace(mVcdFile, squeeze_1_U0_ap_ready, "squeeze_1_U0_ap_ready");
    sc_trace(mVcdFile, squeeze_1_U0_ap_idle, "squeeze_1_U0_ap_idle");
    sc_trace(mVcdFile, squeeze_1_U0_ap_continue, "squeeze_1_U0_ap_continue");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, squeeze_1_U0_start_full_n, "squeeze_1_U0_start_full_n");
    sc_trace(mVcdFile, squeeze_1_U0_start_write, "squeeze_1_U0_start_write");
#endif

    }
}

squeeze_Relu_1::~squeeze_Relu_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete squeeze_1_U0;
}

void squeeze_Relu_1::thread_ap_done() {
    ap_done = squeeze_1_U0_ap_done.read();
}

void squeeze_Relu_1::thread_ap_idle() {
    ap_idle = squeeze_1_U0_ap_idle.read();
}

void squeeze_Relu_1::thread_ap_ready() {
    ap_ready = squeeze_1_U0_ap_ready.read();
}

void squeeze_Relu_1::thread_ap_sync_continue() {
    ap_sync_continue = ap_continue.read();
}

void squeeze_Relu_1::thread_ap_sync_done() {
    ap_sync_done = squeeze_1_U0_ap_done.read();
}

void squeeze_Relu_1::thread_ap_sync_ready() {
    ap_sync_ready = squeeze_1_U0_ap_ready.read();
}

void squeeze_Relu_1::thread_in_0_V_V_read() {
    in_0_V_V_read = squeeze_1_U0_in_0_V_V_read.read();
}

void squeeze_Relu_1::thread_in_10_V_V_read() {
    in_10_V_V_read = squeeze_1_U0_in_10_V_V_read.read();
}

void squeeze_Relu_1::thread_in_11_V_V_read() {
    in_11_V_V_read = squeeze_1_U0_in_11_V_V_read.read();
}

void squeeze_Relu_1::thread_in_12_V_V_read() {
    in_12_V_V_read = squeeze_1_U0_in_12_V_V_read.read();
}

void squeeze_Relu_1::thread_in_13_V_V_read() {
    in_13_V_V_read = squeeze_1_U0_in_13_V_V_read.read();
}

void squeeze_Relu_1::thread_in_14_V_V_read() {
    in_14_V_V_read = squeeze_1_U0_in_14_V_V_read.read();
}

void squeeze_Relu_1::thread_in_15_V_V_read() {
    in_15_V_V_read = squeeze_1_U0_in_15_V_V_read.read();
}

void squeeze_Relu_1::thread_in_1_V_V_read() {
    in_1_V_V_read = squeeze_1_U0_in_1_V_V_read.read();
}

void squeeze_Relu_1::thread_in_2_V_V_read() {
    in_2_V_V_read = squeeze_1_U0_in_2_V_V_read.read();
}

void squeeze_Relu_1::thread_in_3_V_V_read() {
    in_3_V_V_read = squeeze_1_U0_in_3_V_V_read.read();
}

void squeeze_Relu_1::thread_in_4_V_V_read() {
    in_4_V_V_read = squeeze_1_U0_in_4_V_V_read.read();
}

void squeeze_Relu_1::thread_in_5_V_V_read() {
    in_5_V_V_read = squeeze_1_U0_in_5_V_V_read.read();
}

void squeeze_Relu_1::thread_in_6_V_V_read() {
    in_6_V_V_read = squeeze_1_U0_in_6_V_V_read.read();
}

void squeeze_Relu_1::thread_in_7_V_V_read() {
    in_7_V_V_read = squeeze_1_U0_in_7_V_V_read.read();
}

void squeeze_Relu_1::thread_in_8_V_V_read() {
    in_8_V_V_read = squeeze_1_U0_in_8_V_V_read.read();
}

void squeeze_Relu_1::thread_in_9_V_V_read() {
    in_9_V_V_read = squeeze_1_U0_in_9_V_V_read.read();
}

void squeeze_Relu_1::thread_out_0_V_V_din() {
    out_0_V_V_din = squeeze_1_U0_out_0_V_V_din.read();
}

void squeeze_Relu_1::thread_out_0_V_V_write() {
    out_0_V_V_write = squeeze_1_U0_out_0_V_V_write.read();
}

void squeeze_Relu_1::thread_out_1_V_V_din() {
    out_1_V_V_din = squeeze_1_U0_out_1_V_V_din.read();
}

void squeeze_Relu_1::thread_out_1_V_V_write() {
    out_1_V_V_write = squeeze_1_U0_out_1_V_V_write.read();
}

void squeeze_Relu_1::thread_out_2_V_V_din() {
    out_2_V_V_din = squeeze_1_U0_out_2_V_V_din.read();
}

void squeeze_Relu_1::thread_out_2_V_V_write() {
    out_2_V_V_write = squeeze_1_U0_out_2_V_V_write.read();
}

void squeeze_Relu_1::thread_out_3_V_V_din() {
    out_3_V_V_din = squeeze_1_U0_out_3_V_V_din.read();
}

void squeeze_Relu_1::thread_out_3_V_V_write() {
    out_3_V_V_write = squeeze_1_U0_out_3_V_V_write.read();
}

void squeeze_Relu_1::thread_squeeze_1_U0_ap_continue() {
    squeeze_1_U0_ap_continue = ap_continue.read();
}

void squeeze_Relu_1::thread_squeeze_1_U0_ap_start() {
    squeeze_1_U0_ap_start = ap_start.read();
}

void squeeze_Relu_1::thread_squeeze_1_U0_start_full_n() {
    squeeze_1_U0_start_full_n = ap_const_logic_1;
}

void squeeze_Relu_1::thread_squeeze_1_U0_start_write() {
    squeeze_1_U0_start_write = ap_const_logic_0;
}

}

