// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _squeeze_out_HH_
#define _squeeze_out_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct squeeze_out : public sc_module {
    // Port declarations 67
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > in_9_V_V_dout;
    sc_in< sc_logic > in_9_V_V_empty_n;
    sc_out< sc_logic > in_9_V_V_read;
    sc_in< sc_lv<16> > in_13_V_V_dout;
    sc_in< sc_logic > in_13_V_V_empty_n;
    sc_out< sc_logic > in_13_V_V_read;
    sc_in< sc_lv<16> > in_5_V_V_dout;
    sc_in< sc_logic > in_5_V_V_empty_n;
    sc_out< sc_logic > in_5_V_V_read;
    sc_in< sc_lv<16> > in_1_V_V_dout;
    sc_in< sc_logic > in_1_V_V_empty_n;
    sc_out< sc_logic > in_1_V_V_read;
    sc_in< sc_lv<16> > in_15_V_V_dout;
    sc_in< sc_logic > in_15_V_V_empty_n;
    sc_out< sc_logic > in_15_V_V_read;
    sc_in< sc_lv<16> > in_0_V_V_dout;
    sc_in< sc_logic > in_0_V_V_empty_n;
    sc_out< sc_logic > in_0_V_V_read;
    sc_in< sc_lv<16> > in_2_V_V_dout;
    sc_in< sc_logic > in_2_V_V_empty_n;
    sc_out< sc_logic > in_2_V_V_read;
    sc_in< sc_lv<16> > in_3_V_V_dout;
    sc_in< sc_logic > in_3_V_V_empty_n;
    sc_out< sc_logic > in_3_V_V_read;
    sc_in< sc_lv<16> > in_4_V_V_dout;
    sc_in< sc_logic > in_4_V_V_empty_n;
    sc_out< sc_logic > in_4_V_V_read;
    sc_in< sc_lv<16> > in_6_V_V_dout;
    sc_in< sc_logic > in_6_V_V_empty_n;
    sc_out< sc_logic > in_6_V_V_read;
    sc_in< sc_lv<16> > in_7_V_V_dout;
    sc_in< sc_logic > in_7_V_V_empty_n;
    sc_out< sc_logic > in_7_V_V_read;
    sc_in< sc_lv<16> > in_8_V_V_dout;
    sc_in< sc_logic > in_8_V_V_empty_n;
    sc_out< sc_logic > in_8_V_V_read;
    sc_in< sc_lv<16> > in_10_V_V_dout;
    sc_in< sc_logic > in_10_V_V_empty_n;
    sc_out< sc_logic > in_10_V_V_read;
    sc_in< sc_lv<16> > in_11_V_V_dout;
    sc_in< sc_logic > in_11_V_V_empty_n;
    sc_out< sc_logic > in_11_V_V_read;
    sc_in< sc_lv<16> > in_12_V_V_dout;
    sc_in< sc_logic > in_12_V_V_empty_n;
    sc_out< sc_logic > in_12_V_V_read;
    sc_in< sc_lv<16> > in_14_V_V_dout;
    sc_in< sc_logic > in_14_V_V_empty_n;
    sc_out< sc_logic > in_14_V_V_read;
    sc_out< sc_lv<16> > out_0_V_V_din;
    sc_in< sc_logic > out_0_V_V_full_n;
    sc_out< sc_logic > out_0_V_V_write;
    sc_out< sc_lv<16> > out_1_V_V_din;
    sc_in< sc_logic > out_1_V_V_full_n;
    sc_out< sc_logic > out_1_V_V_write;
    sc_out< sc_lv<16> > out_2_V_V_din;
    sc_in< sc_logic > out_2_V_V_full_n;
    sc_out< sc_logic > out_2_V_V_write;
    sc_out< sc_lv<16> > out_3_V_V_din;
    sc_in< sc_logic > out_3_V_V_full_n;
    sc_out< sc_logic > out_3_V_V_write;


    // Module declarations
    squeeze_out(sc_module_name name);
    SC_HAS_PROCESS(squeeze_out);

    ~squeeze_out();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln122_fu_336_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > cache_index_01_reg_216;
    sc_signal< bool > ap_predicate_op59_read_state5;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_logic > in_0_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<4> > ap_phi_mux_cache_index_01_phi_fu_220_p6;
    sc_signal< sc_logic > in_1_V_V_blk_n;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_logic > in_2_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > in_3_V_V_blk_n;
    sc_signal< sc_logic > in_4_V_V_blk_n;
    sc_signal< sc_logic > in_5_V_V_blk_n;
    sc_signal< sc_logic > in_6_V_V_blk_n;
    sc_signal< sc_logic > in_7_V_V_blk_n;
    sc_signal< sc_logic > in_8_V_V_blk_n;
    sc_signal< sc_logic > in_9_V_V_blk_n;
    sc_signal< sc_logic > in_10_V_V_blk_n;
    sc_signal< sc_logic > in_11_V_V_blk_n;
    sc_signal< sc_logic > in_12_V_V_blk_n;
    sc_signal< sc_logic > in_13_V_V_blk_n;
    sc_signal< sc_logic > in_14_V_V_blk_n;
    sc_signal< sc_logic > in_15_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_logic > out_0_V_V_blk_n;
    sc_signal< sc_logic > out_1_V_V_blk_n;
    sc_signal< sc_logic > out_2_V_V_blk_n;
    sc_signal< sc_logic > out_3_V_V_blk_n;
    sc_signal< sc_lv<12> > i_02_reg_264;
    sc_signal< bool > ap_predicate_op38_read_state3;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< bool > ap_predicate_op43_read_state4;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<12> > i_fu_324_p2;
    sc_signal< sc_lv<12> > i_reg_374;
    sc_signal< sc_lv<4> > cache_index_fu_330_p2;
    sc_signal< sc_lv<4> > cache_index_reg_404;
    sc_signal< sc_lv<1> > icmp_ln122_reg_409;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op93_read_state7;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0_reg;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_tmp_V_20_reg_231;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_tmp_V_32_reg_278;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter1_tmp_V_32_reg_278;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_tmp_V_37_reg_294;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter1_tmp_V_37_reg_294;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter0_tmp_V_26_reg_308;
    sc_signal< sc_lv<16> > ap_phi_reg_pp0_iter1_tmp_V_26_reg_308;
    sc_signal< bool > ap_block_pp0_stage2_01001;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_idle_pp0_0to0;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_245;
    sc_signal< bool > ap_condition_238;
    sc_signal< bool > ap_condition_301;
    sc_signal< bool > ap_condition_96;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_pp0_stage1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage2;
    static const sc_lv<5> ap_ST_fsm_pp0_stage3;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<12> ap_const_lv12_8FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_01001();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_condition_238();
    void thread_ap_condition_245();
    void thread_ap_condition_301();
    void thread_ap_condition_96();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to0();
    void thread_ap_phi_mux_cache_index_01_phi_fu_220_p6();
    void thread_ap_phi_reg_pp0_iter0_tmp_V_32_reg_278();
    void thread_ap_phi_reg_pp0_iter0_tmp_V_37_reg_294();
    void thread_ap_predicate_op38_read_state3();
    void thread_ap_predicate_op43_read_state4();
    void thread_ap_predicate_op59_read_state5();
    void thread_ap_predicate_op93_read_state7();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_cache_index_fu_330_p2();
    void thread_i_fu_324_p2();
    void thread_icmp_ln122_fu_336_p2();
    void thread_in_0_V_V_blk_n();
    void thread_in_0_V_V_read();
    void thread_in_10_V_V_blk_n();
    void thread_in_10_V_V_read();
    void thread_in_11_V_V_blk_n();
    void thread_in_11_V_V_read();
    void thread_in_12_V_V_blk_n();
    void thread_in_12_V_V_read();
    void thread_in_13_V_V_blk_n();
    void thread_in_13_V_V_read();
    void thread_in_14_V_V_blk_n();
    void thread_in_14_V_V_read();
    void thread_in_15_V_V_blk_n();
    void thread_in_15_V_V_read();
    void thread_in_1_V_V_blk_n();
    void thread_in_1_V_V_read();
    void thread_in_2_V_V_blk_n();
    void thread_in_2_V_V_read();
    void thread_in_3_V_V_blk_n();
    void thread_in_3_V_V_read();
    void thread_in_4_V_V_blk_n();
    void thread_in_4_V_V_read();
    void thread_in_5_V_V_blk_n();
    void thread_in_5_V_V_read();
    void thread_in_6_V_V_blk_n();
    void thread_in_6_V_V_read();
    void thread_in_7_V_V_blk_n();
    void thread_in_7_V_V_read();
    void thread_in_8_V_V_blk_n();
    void thread_in_8_V_V_read();
    void thread_in_9_V_V_blk_n();
    void thread_in_9_V_V_read();
    void thread_out_0_V_V_blk_n();
    void thread_out_0_V_V_din();
    void thread_out_0_V_V_write();
    void thread_out_1_V_V_blk_n();
    void thread_out_1_V_V_din();
    void thread_out_1_V_V_write();
    void thread_out_2_V_V_blk_n();
    void thread_out_2_V_V_din();
    void thread_out_2_V_V_write();
    void thread_out_3_V_V_blk_n();
    void thread_out_3_V_V_din();
    void thread_out_3_V_V_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
