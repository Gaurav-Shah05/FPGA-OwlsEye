// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_0_squeeze_Relu_16 (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        in_0_V_V_dout,
        in_0_V_V_empty_n,
        in_0_V_V_read,
        in_1_V_V_dout,
        in_1_V_V_empty_n,
        in_1_V_V_read,
        in_2_V_V_dout,
        in_2_V_V_empty_n,
        in_2_V_V_read,
        in_3_V_V_dout,
        in_3_V_V_empty_n,
        in_3_V_V_read,
        out_0_V_V_din,
        out_0_V_V_full_n,
        out_0_V_V_write,
        out_1_V_V_din,
        out_1_V_V_full_n,
        out_1_V_V_write,
        out_2_V_V_din,
        out_2_V_V_full_n,
        out_2_V_V_write,
        out_3_V_V_din,
        out_3_V_V_full_n,
        out_3_V_V_write,
        out_4_V_V_din,
        out_4_V_V_full_n,
        out_4_V_V_write,
        out_5_V_V_din,
        out_5_V_V_full_n,
        out_5_V_V_write,
        out_6_V_V_din,
        out_6_V_V_full_n,
        out_6_V_V_write,
        out_7_V_V_din,
        out_7_V_V_full_n,
        out_7_V_V_write,
        out_8_V_V_din,
        out_8_V_V_full_n,
        out_8_V_V_write,
        out_9_V_V_din,
        out_9_V_V_full_n,
        out_9_V_V_write,
        out_10_V_V_din,
        out_10_V_V_full_n,
        out_10_V_V_write,
        out_11_V_V_din,
        out_11_V_V_full_n,
        out_11_V_V_write,
        out_12_V_V_din,
        out_12_V_V_full_n,
        out_12_V_V_write,
        out_13_V_V_din,
        out_13_V_V_full_n,
        out_13_V_V_write,
        out_14_V_V_din,
        out_14_V_V_full_n,
        out_14_V_V_write,
        out_15_V_V_din,
        out_15_V_V_full_n,
        out_15_V_V_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [15:0] in_0_V_V_dout;
input   in_0_V_V_empty_n;
output   in_0_V_V_read;
input  [15:0] in_1_V_V_dout;
input   in_1_V_V_empty_n;
output   in_1_V_V_read;
input  [15:0] in_2_V_V_dout;
input   in_2_V_V_empty_n;
output   in_2_V_V_read;
input  [15:0] in_3_V_V_dout;
input   in_3_V_V_empty_n;
output   in_3_V_V_read;
output  [15:0] out_0_V_V_din;
input   out_0_V_V_full_n;
output   out_0_V_V_write;
output  [15:0] out_1_V_V_din;
input   out_1_V_V_full_n;
output   out_1_V_V_write;
output  [15:0] out_2_V_V_din;
input   out_2_V_V_full_n;
output   out_2_V_V_write;
output  [15:0] out_3_V_V_din;
input   out_3_V_V_full_n;
output   out_3_V_V_write;
output  [15:0] out_4_V_V_din;
input   out_4_V_V_full_n;
output   out_4_V_V_write;
output  [15:0] out_5_V_V_din;
input   out_5_V_V_full_n;
output   out_5_V_V_write;
output  [15:0] out_6_V_V_din;
input   out_6_V_V_full_n;
output   out_6_V_V_write;
output  [15:0] out_7_V_V_din;
input   out_7_V_V_full_n;
output   out_7_V_V_write;
output  [15:0] out_8_V_V_din;
input   out_8_V_V_full_n;
output   out_8_V_V_write;
output  [15:0] out_9_V_V_din;
input   out_9_V_V_full_n;
output   out_9_V_V_write;
output  [15:0] out_10_V_V_din;
input   out_10_V_V_full_n;
output   out_10_V_V_write;
output  [15:0] out_11_V_V_din;
input   out_11_V_V_full_n;
output   out_11_V_V_write;
output  [15:0] out_12_V_V_din;
input   out_12_V_V_full_n;
output   out_12_V_V_write;
output  [15:0] out_13_V_V_din;
input   out_13_V_V_full_n;
output   out_13_V_V_write;
output  [15:0] out_14_V_V_din;
input   out_14_V_V_full_n;
output   out_14_V_V_write;
output  [15:0] out_15_V_V_din;
input   out_15_V_V_full_n;
output   out_15_V_V_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    squeeze_U0_in_0_V_V_read;
wire    squeeze_U0_in_1_V_V_read;
wire    squeeze_U0_in_2_V_V_read;
wire    squeeze_U0_in_3_V_V_read;
wire   [15:0] squeeze_U0_out_0_V_V_din;
wire    squeeze_U0_out_0_V_V_write;
wire   [15:0] squeeze_U0_out_1_V_V_din;
wire    squeeze_U0_out_1_V_V_write;
wire   [15:0] squeeze_U0_out_2_V_V_din;
wire    squeeze_U0_out_2_V_V_write;
wire   [15:0] squeeze_U0_out_3_V_V_din;
wire    squeeze_U0_out_3_V_V_write;
wire   [15:0] squeeze_U0_out_4_V_V_din;
wire    squeeze_U0_out_4_V_V_write;
wire   [15:0] squeeze_U0_out_5_V_V_din;
wire    squeeze_U0_out_5_V_V_write;
wire   [15:0] squeeze_U0_out_6_V_V_din;
wire    squeeze_U0_out_6_V_V_write;
wire   [15:0] squeeze_U0_out_7_V_V_din;
wire    squeeze_U0_out_7_V_V_write;
wire   [15:0] squeeze_U0_out_8_V_V_din;
wire    squeeze_U0_out_8_V_V_write;
wire   [15:0] squeeze_U0_out_9_V_V_din;
wire    squeeze_U0_out_9_V_V_write;
wire   [15:0] squeeze_U0_out_10_V_V_din;
wire    squeeze_U0_out_10_V_V_write;
wire   [15:0] squeeze_U0_out_11_V_V_din;
wire    squeeze_U0_out_11_V_V_write;
wire   [15:0] squeeze_U0_out_12_V_V_din;
wire    squeeze_U0_out_12_V_V_write;
wire   [15:0] squeeze_U0_out_13_V_V_din;
wire    squeeze_U0_out_13_V_V_write;
wire   [15:0] squeeze_U0_out_14_V_V_din;
wire    squeeze_U0_out_14_V_V_write;
wire   [15:0] squeeze_U0_out_15_V_V_din;
wire    squeeze_U0_out_15_V_V_write;
wire    squeeze_U0_ap_start;
wire    squeeze_U0_ap_done;
wire    squeeze_U0_ap_ready;
wire    squeeze_U0_ap_idle;
wire    squeeze_U0_ap_continue;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    squeeze_U0_start_full_n;
wire    squeeze_U0_start_write;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
end

squeeze squeeze_U0(
    .in_0_V_V_dout(in_0_V_V_dout),
    .in_0_V_V_empty_n(in_0_V_V_empty_n),
    .in_0_V_V_read(squeeze_U0_in_0_V_V_read),
    .in_1_V_V_dout(in_1_V_V_dout),
    .in_1_V_V_empty_n(in_1_V_V_empty_n),
    .in_1_V_V_read(squeeze_U0_in_1_V_V_read),
    .in_2_V_V_dout(in_2_V_V_dout),
    .in_2_V_V_empty_n(in_2_V_V_empty_n),
    .in_2_V_V_read(squeeze_U0_in_2_V_V_read),
    .in_3_V_V_dout(in_3_V_V_dout),
    .in_3_V_V_empty_n(in_3_V_V_empty_n),
    .in_3_V_V_read(squeeze_U0_in_3_V_V_read),
    .out_0_V_V_din(squeeze_U0_out_0_V_V_din),
    .out_0_V_V_full_n(out_0_V_V_full_n),
    .out_0_V_V_write(squeeze_U0_out_0_V_V_write),
    .out_1_V_V_din(squeeze_U0_out_1_V_V_din),
    .out_1_V_V_full_n(out_1_V_V_full_n),
    .out_1_V_V_write(squeeze_U0_out_1_V_V_write),
    .out_2_V_V_din(squeeze_U0_out_2_V_V_din),
    .out_2_V_V_full_n(out_2_V_V_full_n),
    .out_2_V_V_write(squeeze_U0_out_2_V_V_write),
    .out_3_V_V_din(squeeze_U0_out_3_V_V_din),
    .out_3_V_V_full_n(out_3_V_V_full_n),
    .out_3_V_V_write(squeeze_U0_out_3_V_V_write),
    .out_4_V_V_din(squeeze_U0_out_4_V_V_din),
    .out_4_V_V_full_n(out_4_V_V_full_n),
    .out_4_V_V_write(squeeze_U0_out_4_V_V_write),
    .out_5_V_V_din(squeeze_U0_out_5_V_V_din),
    .out_5_V_V_full_n(out_5_V_V_full_n),
    .out_5_V_V_write(squeeze_U0_out_5_V_V_write),
    .out_6_V_V_din(squeeze_U0_out_6_V_V_din),
    .out_6_V_V_full_n(out_6_V_V_full_n),
    .out_6_V_V_write(squeeze_U0_out_6_V_V_write),
    .out_7_V_V_din(squeeze_U0_out_7_V_V_din),
    .out_7_V_V_full_n(out_7_V_V_full_n),
    .out_7_V_V_write(squeeze_U0_out_7_V_V_write),
    .out_8_V_V_din(squeeze_U0_out_8_V_V_din),
    .out_8_V_V_full_n(out_8_V_V_full_n),
    .out_8_V_V_write(squeeze_U0_out_8_V_V_write),
    .out_9_V_V_din(squeeze_U0_out_9_V_V_din),
    .out_9_V_V_full_n(out_9_V_V_full_n),
    .out_9_V_V_write(squeeze_U0_out_9_V_V_write),
    .out_10_V_V_din(squeeze_U0_out_10_V_V_din),
    .out_10_V_V_full_n(out_10_V_V_full_n),
    .out_10_V_V_write(squeeze_U0_out_10_V_V_write),
    .out_11_V_V_din(squeeze_U0_out_11_V_V_din),
    .out_11_V_V_full_n(out_11_V_V_full_n),
    .out_11_V_V_write(squeeze_U0_out_11_V_V_write),
    .out_12_V_V_din(squeeze_U0_out_12_V_V_din),
    .out_12_V_V_full_n(out_12_V_V_full_n),
    .out_12_V_V_write(squeeze_U0_out_12_V_V_write),
    .out_13_V_V_din(squeeze_U0_out_13_V_V_din),
    .out_13_V_V_full_n(out_13_V_V_full_n),
    .out_13_V_V_write(squeeze_U0_out_13_V_V_write),
    .out_14_V_V_din(squeeze_U0_out_14_V_V_din),
    .out_14_V_V_full_n(out_14_V_V_full_n),
    .out_14_V_V_write(squeeze_U0_out_14_V_V_write),
    .out_15_V_V_din(squeeze_U0_out_15_V_V_din),
    .out_15_V_V_full_n(out_15_V_V_full_n),
    .out_15_V_V_write(squeeze_U0_out_15_V_V_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(squeeze_U0_ap_start),
    .ap_done(squeeze_U0_ap_done),
    .ap_ready(squeeze_U0_ap_ready),
    .ap_idle(squeeze_U0_ap_idle),
    .ap_continue(squeeze_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign ap_done = squeeze_U0_ap_done;

assign ap_idle = squeeze_U0_ap_idle;

assign ap_ready = internal_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = squeeze_U0_ap_done;

assign ap_sync_ready = squeeze_U0_ap_ready;

assign in_0_V_V_read = squeeze_U0_in_0_V_V_read;

assign in_1_V_V_read = squeeze_U0_in_1_V_V_read;

assign in_2_V_V_read = squeeze_U0_in_2_V_V_read;

assign in_3_V_V_read = squeeze_U0_in_3_V_V_read;

assign internal_ap_ready = ap_sync_ready;

assign out_0_V_V_din = squeeze_U0_out_0_V_V_din;

assign out_0_V_V_write = squeeze_U0_out_0_V_V_write;

assign out_10_V_V_din = squeeze_U0_out_10_V_V_din;

assign out_10_V_V_write = squeeze_U0_out_10_V_V_write;

assign out_11_V_V_din = squeeze_U0_out_11_V_V_din;

assign out_11_V_V_write = squeeze_U0_out_11_V_V_write;

assign out_12_V_V_din = squeeze_U0_out_12_V_V_din;

assign out_12_V_V_write = squeeze_U0_out_12_V_V_write;

assign out_13_V_V_din = squeeze_U0_out_13_V_V_din;

assign out_13_V_V_write = squeeze_U0_out_13_V_V_write;

assign out_14_V_V_din = squeeze_U0_out_14_V_V_din;

assign out_14_V_V_write = squeeze_U0_out_14_V_V_write;

assign out_15_V_V_din = squeeze_U0_out_15_V_V_din;

assign out_15_V_V_write = squeeze_U0_out_15_V_V_write;

assign out_1_V_V_din = squeeze_U0_out_1_V_V_din;

assign out_1_V_V_write = squeeze_U0_out_1_V_V_write;

assign out_2_V_V_din = squeeze_U0_out_2_V_V_din;

assign out_2_V_V_write = squeeze_U0_out_2_V_V_write;

assign out_3_V_V_din = squeeze_U0_out_3_V_V_din;

assign out_3_V_V_write = squeeze_U0_out_3_V_V_write;

assign out_4_V_V_din = squeeze_U0_out_4_V_V_din;

assign out_4_V_V_write = squeeze_U0_out_4_V_V_write;

assign out_5_V_V_din = squeeze_U0_out_5_V_V_din;

assign out_5_V_V_write = squeeze_U0_out_5_V_V_write;

assign out_6_V_V_din = squeeze_U0_out_6_V_V_din;

assign out_6_V_V_write = squeeze_U0_out_6_V_V_write;

assign out_7_V_V_din = squeeze_U0_out_7_V_V_din;

assign out_7_V_V_write = squeeze_U0_out_7_V_V_write;

assign out_8_V_V_din = squeeze_U0_out_8_V_V_din;

assign out_8_V_V_write = squeeze_U0_out_8_V_V_write;

assign out_9_V_V_din = squeeze_U0_out_9_V_V_din;

assign out_9_V_V_write = squeeze_U0_out_9_V_V_write;

assign squeeze_U0_ap_continue = ap_continue;

assign squeeze_U0_ap_start = real_start;

assign squeeze_U0_start_full_n = 1'b1;

assign squeeze_U0_start_write = 1'b0;

assign start_out = real_start;

endmodule //Conv_0_squeeze_Relu_16
