// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module double_to_posit16 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        f,
        ap_return
);

parameter    ap_ST_fsm_state1 = 194'd1;
parameter    ap_ST_fsm_state2 = 194'd2;
parameter    ap_ST_fsm_state3 = 194'd4;
parameter    ap_ST_fsm_state4 = 194'd8;
parameter    ap_ST_fsm_state5 = 194'd16;
parameter    ap_ST_fsm_state6 = 194'd32;
parameter    ap_ST_fsm_state7 = 194'd64;
parameter    ap_ST_fsm_state8 = 194'd128;
parameter    ap_ST_fsm_state9 = 194'd256;
parameter    ap_ST_fsm_state10 = 194'd512;
parameter    ap_ST_fsm_state11 = 194'd1024;
parameter    ap_ST_fsm_state12 = 194'd2048;
parameter    ap_ST_fsm_state13 = 194'd4096;
parameter    ap_ST_fsm_state14 = 194'd8192;
parameter    ap_ST_fsm_state15 = 194'd16384;
parameter    ap_ST_fsm_state16 = 194'd32768;
parameter    ap_ST_fsm_state17 = 194'd65536;
parameter    ap_ST_fsm_state18 = 194'd131072;
parameter    ap_ST_fsm_state19 = 194'd262144;
parameter    ap_ST_fsm_state20 = 194'd524288;
parameter    ap_ST_fsm_state21 = 194'd1048576;
parameter    ap_ST_fsm_state22 = 194'd2097152;
parameter    ap_ST_fsm_state23 = 194'd4194304;
parameter    ap_ST_fsm_state24 = 194'd8388608;
parameter    ap_ST_fsm_state25 = 194'd16777216;
parameter    ap_ST_fsm_state26 = 194'd33554432;
parameter    ap_ST_fsm_state27 = 194'd67108864;
parameter    ap_ST_fsm_state28 = 194'd134217728;
parameter    ap_ST_fsm_state29 = 194'd268435456;
parameter    ap_ST_fsm_state30 = 194'd536870912;
parameter    ap_ST_fsm_state31 = 194'd1073741824;
parameter    ap_ST_fsm_state32 = 194'd2147483648;
parameter    ap_ST_fsm_state33 = 194'd4294967296;
parameter    ap_ST_fsm_state34 = 194'd8589934592;
parameter    ap_ST_fsm_state35 = 194'd17179869184;
parameter    ap_ST_fsm_state36 = 194'd34359738368;
parameter    ap_ST_fsm_state37 = 194'd68719476736;
parameter    ap_ST_fsm_state38 = 194'd137438953472;
parameter    ap_ST_fsm_state39 = 194'd274877906944;
parameter    ap_ST_fsm_state40 = 194'd549755813888;
parameter    ap_ST_fsm_state41 = 194'd1099511627776;
parameter    ap_ST_fsm_state42 = 194'd2199023255552;
parameter    ap_ST_fsm_state43 = 194'd4398046511104;
parameter    ap_ST_fsm_state44 = 194'd8796093022208;
parameter    ap_ST_fsm_state45 = 194'd17592186044416;
parameter    ap_ST_fsm_state46 = 194'd35184372088832;
parameter    ap_ST_fsm_state47 = 194'd70368744177664;
parameter    ap_ST_fsm_state48 = 194'd140737488355328;
parameter    ap_ST_fsm_state49 = 194'd281474976710656;
parameter    ap_ST_fsm_state50 = 194'd562949953421312;
parameter    ap_ST_fsm_state51 = 194'd1125899906842624;
parameter    ap_ST_fsm_state52 = 194'd2251799813685248;
parameter    ap_ST_fsm_state53 = 194'd4503599627370496;
parameter    ap_ST_fsm_state54 = 194'd9007199254740992;
parameter    ap_ST_fsm_state55 = 194'd18014398509481984;
parameter    ap_ST_fsm_state56 = 194'd36028797018963968;
parameter    ap_ST_fsm_state57 = 194'd72057594037927936;
parameter    ap_ST_fsm_state58 = 194'd144115188075855872;
parameter    ap_ST_fsm_state59 = 194'd288230376151711744;
parameter    ap_ST_fsm_state60 = 194'd576460752303423488;
parameter    ap_ST_fsm_state61 = 194'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 194'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 194'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 194'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 194'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 194'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 194'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 194'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 194'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 194'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 194'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 194'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 194'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 194'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 194'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 194'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 194'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 194'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 194'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 194'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 194'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 194'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 194'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 194'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 194'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 194'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 194'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 194'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 194'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 194'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 194'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 194'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 194'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 194'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 194'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 194'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 194'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 194'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 194'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 194'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 194'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 194'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 194'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 194'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 194'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 194'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 194'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 194'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 194'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 194'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 194'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 194'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 194'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 194'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 194'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 194'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 194'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 194'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 194'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 194'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 194'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 194'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 194'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 194'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 194'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 194'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 194'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 194'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 194'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 194'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 194'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 194'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 194'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 194'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 194'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 194'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 194'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 194'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 194'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 194'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 194'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 194'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 194'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 194'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 194'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 194'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 194'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 194'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 194'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 194'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 194'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 194'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 194'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 194'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 194'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 194'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 194'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 194'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 194'd365375409332725729550921208179070754913983135744;
parameter    ap_ST_fsm_state160 = 194'd730750818665451459101842416358141509827966271488;
parameter    ap_ST_fsm_state161 = 194'd1461501637330902918203684832716283019655932542976;
parameter    ap_ST_fsm_state162 = 194'd2923003274661805836407369665432566039311865085952;
parameter    ap_ST_fsm_state163 = 194'd5846006549323611672814739330865132078623730171904;
parameter    ap_ST_fsm_state164 = 194'd11692013098647223345629478661730264157247460343808;
parameter    ap_ST_fsm_state165 = 194'd23384026197294446691258957323460528314494920687616;
parameter    ap_ST_fsm_state166 = 194'd46768052394588893382517914646921056628989841375232;
parameter    ap_ST_fsm_state167 = 194'd93536104789177786765035829293842113257979682750464;
parameter    ap_ST_fsm_state168 = 194'd187072209578355573530071658587684226515959365500928;
parameter    ap_ST_fsm_state169 = 194'd374144419156711147060143317175368453031918731001856;
parameter    ap_ST_fsm_state170 = 194'd748288838313422294120286634350736906063837462003712;
parameter    ap_ST_fsm_state171 = 194'd1496577676626844588240573268701473812127674924007424;
parameter    ap_ST_fsm_state172 = 194'd2993155353253689176481146537402947624255349848014848;
parameter    ap_ST_fsm_state173 = 194'd5986310706507378352962293074805895248510699696029696;
parameter    ap_ST_fsm_state174 = 194'd11972621413014756705924586149611790497021399392059392;
parameter    ap_ST_fsm_state175 = 194'd23945242826029513411849172299223580994042798784118784;
parameter    ap_ST_fsm_state176 = 194'd47890485652059026823698344598447161988085597568237568;
parameter    ap_ST_fsm_state177 = 194'd95780971304118053647396689196894323976171195136475136;
parameter    ap_ST_fsm_state178 = 194'd191561942608236107294793378393788647952342390272950272;
parameter    ap_ST_fsm_state179 = 194'd383123885216472214589586756787577295904684780545900544;
parameter    ap_ST_fsm_state180 = 194'd766247770432944429179173513575154591809369561091801088;
parameter    ap_ST_fsm_state181 = 194'd1532495540865888858358347027150309183618739122183602176;
parameter    ap_ST_fsm_state182 = 194'd3064991081731777716716694054300618367237478244367204352;
parameter    ap_ST_fsm_state183 = 194'd6129982163463555433433388108601236734474956488734408704;
parameter    ap_ST_fsm_state184 = 194'd12259964326927110866866776217202473468949912977468817408;
parameter    ap_ST_fsm_state185 = 194'd24519928653854221733733552434404946937899825954937634816;
parameter    ap_ST_fsm_state186 = 194'd49039857307708443467467104868809893875799651909875269632;
parameter    ap_ST_fsm_state187 = 194'd98079714615416886934934209737619787751599303819750539264;
parameter    ap_ST_fsm_state188 = 194'd196159429230833773869868419475239575503198607639501078528;
parameter    ap_ST_fsm_state189 = 194'd392318858461667547739736838950479151006397215279002157056;
parameter    ap_ST_fsm_state190 = 194'd784637716923335095479473677900958302012794430558004314112;
parameter    ap_ST_fsm_state191 = 194'd1569275433846670190958947355801916604025588861116008628224;
parameter    ap_ST_fsm_state192 = 194'd3138550867693340381917894711603833208051177722232017256448;
parameter    ap_ST_fsm_state193 = 194'd6277101735386680763835789423207666416102355444464034512896;
parameter    ap_ST_fsm_state194 = 194'd12554203470773361527671578846415332832204710888928069025792;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] f;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [193:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_178_p2;
reg   [63:0] reg_217;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state52;
reg   [0:0] and_ln189_reg_1384;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state136;
reg   [0:0] and_ln169_reg_1561;
wire    ap_CS_fsm_state161;
wire   [63:0] grp_fu_173_p2;
reg   [63:0] reg_223;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state151;
wire    ap_CS_fsm_state187;
wire   [63:0] grp_fu_209_p1;
reg   [63:0] reg_230;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state173;
wire   [63:0] bitcast_ln136_fu_236_p1;
reg   [63:0] bitcast_ln136_reg_1270;
wire    ap_CS_fsm_state4;
wire   [0:0] sign_fu_271_p2;
reg   [0:0] sign_reg_1275;
wire   [63:0] select_ln136_fu_286_p3;
reg   [63:0] select_ln136_reg_1284;
wire    ap_CS_fsm_state5;
wire   [10:0] tmp_V_fu_295_p4;
reg   [10:0] tmp_V_reg_1292;
wire    ap_CS_fsm_state9;
wire   [51:0] tmp_V_203_fu_305_p1;
reg   [51:0] tmp_V_203_reg_1297;
wire   [0:0] or_ln140_fu_321_p2;
reg   [0:0] or_ln140_reg_1302;
wire   [0:0] grp_fu_187_p2;
reg   [0:0] tmp_11_reg_1309;
wire   [0:0] and_ln140_fu_327_p2;
reg   [0:0] and_ln140_reg_1314;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln833_fu_331_p2;
reg   [0:0] icmp_ln833_reg_1318;
wire   [0:0] icmp_ln837_fu_336_p2;
reg   [0:0] icmp_ln837_reg_1323;
wire   [0:0] or_ln141_fu_350_p2;
reg   [0:0] or_ln141_reg_1328;
wire    ap_CS_fsm_state13;
wire   [0:0] grp_fu_212_p2;
reg   [0:0] and_ln142_reg_1332;
wire    ap_CS_fsm_state17;
wire   [15:0] select_ln143_fu_356_p3;
reg   [0:0] and_ln146_reg_1341;
wire    ap_CS_fsm_state20;
wire   [15:0] select_ln148_fu_363_p3;
reg   [0:0] and_ln151_reg_1350;
wire    ap_CS_fsm_state23;
wire   [15:0] select_ln153_fu_370_p3;
reg   [0:0] and_ln165_reg_1359;
wire    ap_CS_fsm_state26;
wire   [0:0] or_ln188_fu_407_p2;
reg   [0:0] or_ln188_reg_1363;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln188_fu_418_p2;
reg   [0:0] icmp_ln188_reg_1369;
wire    ap_CS_fsm_state30;
wire   [3:0] reg_2_fu_430_p2;
reg   [3:0] reg_2_reg_1379;
wire   [0:0] and_ln189_fu_436_p2;
wire    ap_CS_fsm_state42;
wire   [63:0] select_ln189_fu_441_p3;
reg   [63:0] select_ln189_reg_1391;
wire    ap_CS_fsm_state53;
wire  signed [4:0] fracLength_1_fu_452_p2;
reg  signed [4:0] fracLength_1_reg_1396;
wire    ap_CS_fsm_state58;
wire   [13:0] shl_ln120_1_fu_461_p2;
reg   [13:0] shl_ln120_1_reg_1402;
wire    ap_CS_fsm_state59;
wire   [31:0] zext_ln120_1_fu_467_p1;
wire    ap_CS_fsm_state60;
wire   [51:0] tmp_V_207_fu_485_p1;
reg   [51:0] tmp_V_207_reg_1412;
wire    ap_CS_fsm_state78;
wire   [0:0] isNeg_1_fu_499_p3;
reg   [0:0] isNeg_1_reg_1417;
wire   [11:0] ush_2_fu_517_p3;
reg   [11:0] ush_2_reg_1422;
wire   [53:0] mantissa_V_1_fu_525_p4;
wire    ap_CS_fsm_state79;
reg   [0:0] tmp_59_reg_1447;
wire    ap_CS_fsm_state80;
reg   [15:0] tmp_36_reg_1452;
wire   [15:0] val_V_1_fu_582_p3;
reg   [15:0] val_V_1_reg_1457;
wire    ap_CS_fsm_state81;
wire   [31:0] zext_ln122_1_fu_588_p1;
wire    ap_CS_fsm_state82;
wire   [0:0] or_ln123_1_fu_622_p2;
reg   [0:0] or_ln123_1_reg_1468;
wire    ap_CS_fsm_state104;
wire   [0:0] icmp_ln195_fu_632_p2;
reg   [0:0] icmp_ln195_reg_1474;
wire    ap_CS_fsm_state106;
wire   [15:0] regime_1_fu_644_p2;
reg   [15:0] regime_1_reg_1480;
wire   [3:0] sub_ln200_fu_650_p2;
reg   [3:0] sub_ln200_reg_1485;
reg   [0:0] tmp_33_reg_1490;
wire    ap_CS_fsm_state107;
wire   [0:0] grp_fu_201_p2;
reg   [0:0] tmp_34_reg_1495;
wire   [15:0] select_ln188_1_fu_656_p3;
reg   [15:0] select_ln188_1_reg_1500;
wire   [0:0] icmp_ln195_1_fu_662_p2;
reg   [0:0] icmp_ln195_1_reg_1505;
wire   [15:0] shl_ln200_fu_671_p2;
reg   [15:0] shl_ln200_reg_1511;
wire   [15:0] select_ln195_fu_702_p3;
reg   [15:0] select_ln195_reg_1517;
wire    ap_CS_fsm_state108;
wire   [15:0] shl_ln200_1_fu_712_p2;
reg   [15:0] shl_ln200_1_reg_1522;
wire   [0:0] or_ln202_3_fu_747_p2;
reg   [0:0] or_ln202_3_reg_1527;
wire   [15:0] empty_255_fu_781_p2;
reg   [15:0] empty_255_reg_1532;
wire    ap_CS_fsm_state109;
wire   [15:0] sub_ln207_fu_787_p2;
reg   [15:0] sub_ln207_reg_1537;
wire    ap_CS_fsm_state110;
wire   [0:0] or_ln168_fu_823_p2;
reg   [0:0] or_ln168_reg_1542;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state123;
wire   [3:0] reg_fu_846_p2;
wire   [0:0] and_ln169_fu_852_p2;
wire    ap_CS_fsm_state126;
wire   [63:0] select_ln169_fu_857_p3;
reg   [63:0] select_ln169_reg_1567;
wire    ap_CS_fsm_state137;
wire  signed [4:0] fracLength_fu_868_p2;
reg  signed [4:0] fracLength_reg_1574;
reg   [0:0] tmp_55_reg_1580;
wire   [0:0] icmp_ln173_fu_899_p2;
reg   [0:0] icmp_ln173_reg_1587;
wire    ap_CS_fsm_state138;
wire   [0:0] icmp_ln173_1_fu_905_p2;
reg   [0:0] icmp_ln173_1_reg_1592;
reg   [0:0] tmp_30_reg_1597;
wire    ap_CS_fsm_state141;
wire   [13:0] shl_ln120_fu_914_p2;
reg   [13:0] shl_ln120_reg_1602;
wire    ap_CS_fsm_state143;
wire   [31:0] zext_ln120_fu_920_p1;
wire    ap_CS_fsm_state144;
wire   [51:0] tmp_V_205_fu_938_p1;
reg   [51:0] tmp_V_205_reg_1612;
wire    ap_CS_fsm_state162;
wire   [0:0] isNeg_fu_952_p3;
reg   [0:0] isNeg_reg_1617;
wire   [11:0] ush_fu_970_p3;
reg   [11:0] ush_reg_1622;
wire   [53:0] mantissa_V_fu_978_p4;
wire    ap_CS_fsm_state163;
reg   [0:0] tmp_57_reg_1647;
wire    ap_CS_fsm_state164;
reg   [15:0] tmp_35_reg_1652;
wire   [15:0] val_V_fu_1035_p3;
reg   [15:0] val_V_reg_1657;
wire    ap_CS_fsm_state165;
wire   [31:0] zext_ln122_fu_1041_p1;
wire    ap_CS_fsm_state166;
wire   [0:0] or_ln123_fu_1075_p2;
reg   [0:0] or_ln123_reg_1668;
wire    ap_CS_fsm_state188;
wire   [0:0] icmp_ln175_fu_1085_p2;
reg   [0:0] icmp_ln175_reg_1674;
wire    ap_CS_fsm_state190;
wire   [15:0] regime_fu_1097_p2;
reg   [15:0] regime_reg_1680;
wire   [3:0] sub_ln181_fu_1103_p2;
reg   [3:0] sub_ln181_reg_1685;
reg   [0:0] tmp_27_reg_1690;
wire    ap_CS_fsm_state191;
wire   [0:0] select_ln171_fu_1123_p3;
reg   [0:0] select_ln171_reg_1695;
wire   [15:0] select_ln171_1_fu_1130_p3;
reg   [15:0] select_ln171_1_reg_1700;
wire   [0:0] icmp_ln175_1_fu_1136_p2;
reg   [0:0] icmp_ln175_1_reg_1705;
wire   [15:0] shl_ln181_fu_1145_p2;
reg   [15:0] shl_ln181_reg_1711;
wire   [15:0] select_ln175_fu_1167_p3;
reg   [15:0] select_ln175_reg_1717;
wire    ap_CS_fsm_state192;
wire   [15:0] shl_ln181_1_fu_1177_p2;
reg   [15:0] shl_ln181_1_reg_1722;
wire   [0:0] or_ln183_3_fu_1211_p2;
reg   [0:0] or_ln183_3_reg_1727;
wire   [15:0] empty_253_fu_1250_p2;
reg   [15:0] empty_253_reg_1732;
wire    ap_CS_fsm_state193;
wire   [63:0] ap_phi_mux_p_3_phi_fu_101_p4;
reg   [63:0] p_3_reg_98;
reg   [3:0] reg_1_reg_108;
reg   [15:0] ap_phi_mux_u_4_phi_fu_123_p4;
reg   [15:0] u_4_reg_120;
wire   [63:0] ap_phi_mux_p_1_phi_fu_133_p4;
reg   [63:0] p_1_reg_130;
reg   [3:0] reg_0_reg_140;
reg   [15:0] ap_phi_mux_p_0_phi_fu_157_p12;
reg   [15:0] p_0_reg_152;
wire   [15:0] select_ln206_fu_1256_p3;
wire    ap_CS_fsm_state194;
wire    ap_CS_fsm_state14;
reg   [63:0] grp_fu_173_p0;
reg   [63:0] grp_fu_173_p1;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state174;
reg   [63:0] grp_fu_178_p0;
reg   [63:0] grp_fu_178_p1;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state127;
wire    ap_CS_fsm_state152;
reg   [63:0] grp_fu_187_p0;
reg   [63:0] grp_fu_187_p1;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state111;
reg   [31:0] grp_fu_209_p0;
wire   [10:0] tmp_fu_239_p4;
wire   [51:0] trunc_ln136_fu_249_p1;
wire   [0:0] icmp_ln136_2_fu_259_p2;
wire   [0:0] icmp_ln136_fu_253_p2;
wire   [0:0] or_ln136_fu_265_p2;
wire   [63:0] xor_ln137_fu_277_p2;
wire   [63:0] bitcast_ln137_fu_282_p1;
wire   [63:0] p_Val2_s_fu_292_p1;
wire   [0:0] icmp_ln140_1_fu_315_p2;
wire   [0:0] icmp_ln140_fu_309_p2;
wire   [0:0] and_ln18_fu_341_p2;
wire   [0:0] and_ln141_fu_345_p2;
wire   [63:0] bitcast_ln188_fu_377_p1;
wire   [10:0] tmp_24_fu_381_p4;
wire   [51:0] trunc_ln188_fu_391_p1;
wire   [0:0] icmp_ln188_2_fu_401_p2;
wire   [0:0] icmp_ln188_1_fu_395_p2;
wire   [0:0] and_ln188_1_fu_413_p2;
wire   [4:0] zext_ln190_1_fu_448_p1;
wire  signed [13:0] sext_ln190_fu_458_p1;
wire   [63:0] p_Val2_111_fu_471_p1;
wire   [10:0] tmp_V_206_fu_475_p4;
wire   [11:0] zext_ln502_2_fu_489_p1;
wire   [11:0] add_ln502_1_fu_493_p2;
wire   [10:0] sub_ln1311_1_fu_507_p2;
wire  signed [11:0] sext_ln1311_4_fu_513_p1;
wire  signed [31:0] sext_ln1311_5_fu_538_p1;
wire   [53:0] grp_fu_549_p1;
wire   [120:0] grp_fu_555_p0;
wire   [120:0] grp_fu_555_p1;
wire   [53:0] grp_fu_549_p2;
wire   [120:0] grp_fu_555_p2;
wire   [15:0] zext_ln662_1_fu_579_p1;
wire   [63:0] bitcast_ln123_1_fu_592_p1;
wire   [10:0] tmp_32_fu_596_p4;
wire   [51:0] trunc_ln123_1_fu_606_p1;
wire   [0:0] icmp_ln123_3_fu_616_p2;
wire   [0:0] icmp_ln123_2_fu_610_p2;
wire   [15:0] zext_ln190_fu_628_p1;
wire   [15:0] shl_ln199_fu_638_p2;
wire   [15:0] zext_ln200_fu_668_p1;
wire   [0:0] bitsMore_1_fu_679_p2;
wire   [0:0] or_ln195_1_fu_692_p2;
wire   [0:0] or_ln195_fu_688_p2;
wire   [15:0] zext_ln200_1_fu_709_p1;
wire  signed [15:0] sext_ln190_1_fu_676_p1;
wire   [0:0] trunc_ln200_1_fu_721_p1;
wire   [0:0] trunc_ln200_fu_718_p1;
wire   [0:0] and_ln188_2_fu_683_p2;
wire   [0:0] xor_ln195_fu_696_p2;
wire   [0:0] or_ln202_1_fu_735_p2;
wire   [0:0] trunc_ln200_2_fu_725_p1;
wire   [0:0] or_ln202_2_fu_741_p2;
wire   [0:0] or_ln202_fu_729_p2;
wire   [0:0] bitNPlusOne_1_fu_753_p2;
wire   [15:0] or_ln200_fu_763_p2;
wire   [0:0] select_ln188_fu_757_p3;
wire   [0:0] and_ln202_fu_772_p2;
wire   [15:0] empty_254_fu_777_p1;
wire   [15:0] or_ln200_1_fu_767_p2;
wire   [63:0] bitcast_ln168_fu_793_p1;
wire   [10:0] tmp_22_fu_797_p4;
wire   [51:0] trunc_ln168_fu_807_p1;
wire   [0:0] icmp_ln168_2_fu_817_p2;
wire   [0:0] icmp_ln168_1_fu_811_p2;
wire   [0:0] icmp_ln168_fu_829_p2;
wire   [0:0] and_ln168_1_fu_835_p2;
wire   [4:0] zext_ln170_1_fu_864_p1;
wire   [63:0] bitcast_ln173_fu_882_p1;
wire   [10:0] tmp_29_fu_885_p4;
wire   [51:0] trunc_ln173_fu_895_p1;
wire  signed [13:0] sext_ln170_fu_911_p1;
wire   [63:0] p_Val2_107_fu_924_p1;
wire   [10:0] tmp_V_204_fu_928_p4;
wire   [11:0] zext_ln502_fu_942_p1;
wire   [11:0] add_ln502_fu_946_p2;
wire   [10:0] sub_ln1311_fu_960_p2;
wire  signed [11:0] sext_ln1311_fu_966_p1;
wire  signed [31:0] sext_ln1311_3_fu_991_p1;
wire   [53:0] grp_fu_1002_p1;
wire   [120:0] grp_fu_1008_p0;
wire   [120:0] grp_fu_1008_p1;
wire   [53:0] grp_fu_1002_p2;
wire   [120:0] grp_fu_1008_p2;
wire   [15:0] zext_ln662_fu_1032_p1;
wire   [63:0] bitcast_ln123_fu_1045_p1;
wire   [10:0] tmp_26_fu_1049_p4;
wire   [51:0] trunc_ln123_fu_1059_p1;
wire   [0:0] icmp_ln123_1_fu_1069_p2;
wire   [0:0] icmp_ln123_fu_1063_p2;
wire   [15:0] zext_ln170_fu_1081_p1;
wire   [15:0] shl_ln180_fu_1091_p2;
wire   [0:0] or_ln173_fu_1114_p2;
wire   [0:0] and_ln173_fu_1118_p2;
wire   [0:0] bitsMore_fu_1109_p2;
wire   [15:0] zext_ln181_fu_1142_p1;
wire   [0:0] or_ln175_1_fu_1157_p2;
wire   [0:0] or_ln175_fu_1153_p2;
wire   [15:0] zext_ln181_1_fu_1174_p1;
wire  signed [15:0] sext_ln170_1_fu_1150_p1;
wire   [0:0] trunc_ln181_1_fu_1186_p1;
wire   [0:0] trunc_ln181_fu_1183_p1;
wire   [0:0] xor_ln175_fu_1161_p2;
wire   [0:0] or_ln183_1_fu_1200_p2;
wire   [0:0] trunc_ln181_2_fu_1190_p1;
wire   [0:0] or_ln183_2_fu_1205_p2;
wire   [0:0] or_ln183_fu_1194_p2;
wire   [15:0] or_ln181_fu_1226_p2;
wire   [0:0] bitNPlusOne_fu_1222_p2;
wire   [0:0] and_ln183_fu_1235_p2;
wire   [0:0] xor_ln171_fu_1217_p2;
wire   [0:0] and_ln183_1_fu_1240_p2;
wire   [15:0] empty_fu_1246_p1;
wire   [15:0] or_ln181_1_fu_1230_p2;
reg   [1:0] grp_fu_173_opcode;
reg   [4:0] grp_fu_187_opcode;
wire   [0:0] and_ln188_fu_424_p2;
wire   [0:0] and_ln168_fu_840_p2;
reg   [15:0] ap_return_preg;
reg   [193:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 194'd1;
#0 ap_return_preg = 16'd0;
end

fpgaconvnet_ip_dadEe #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
fpgaconvnet_ip_dadEe_U744(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_173_p0),
    .din1(grp_fu_173_p1),
    .opcode(grp_fu_173_opcode),
    .ce(1'b1),
    .dout(grp_fu_173_p2)
);

fpgaconvnet_ip_dmeOg #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
fpgaconvnet_ip_dmeOg_U745(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_178_p0),
    .din1(grp_fu_178_p1),
    .ce(1'b1),
    .dout(grp_fu_178_p2)
);

fpgaconvnet_ip_dcfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
fpgaconvnet_ip_dcfYi_U746(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_187_p0),
    .din1(grp_fu_187_p1),
    .ce(1'b1),
    .opcode(grp_fu_187_opcode),
    .dout(grp_fu_187_p2)
);

fpgaconvnet_ip_dcfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
fpgaconvnet_ip_dcfYi_U747(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_223),
    .din1(64'd4602678819172646912),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_201_p2)
);

fpgaconvnet_ip_sig8j #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpgaconvnet_ip_sig8j_U748(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_209_p0),
    .ce(1'b1),
    .dout(grp_fu_209_p1)
);

fpgaconvnet_ip_lshbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 54 ))
fpgaconvnet_ip_lshbi_U749(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mantissa_V_1_fu_525_p4),
    .din1(grp_fu_549_p1),
    .ce(1'b1),
    .dout(grp_fu_549_p2)
);

fpgaconvnet_ip_shibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 121 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 121 ))
fpgaconvnet_ip_shibs_U750(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_555_p0),
    .din1(grp_fu_555_p1),
    .ce(1'b1),
    .dout(grp_fu_555_p2)
);

fpgaconvnet_ip_lshbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 54 ))
fpgaconvnet_ip_lshbi_U751(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mantissa_V_fu_978_p4),
    .din1(grp_fu_1002_p1),
    .ce(1'b1),
    .dout(grp_fu_1002_p2)
);

fpgaconvnet_ip_shibs #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 121 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 121 ))
fpgaconvnet_ip_shibs_U752(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1008_p0),
    .din1(grp_fu_1008_p1),
    .ce(1'b1),
    .dout(grp_fu_1008_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state194)) begin
            ap_return_preg <= ap_phi_mux_p_0_phi_fu_157_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln141_reg_1328 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        p_0_reg_152 <= 16'd32768;
    end else if (((1'd1 == and_ln140_fu_327_p2) & (1'b1 == ap_CS_fsm_state10))) begin
        p_0_reg_152 <= 16'd0;
    end else if (((1'd0 == and_ln151_reg_1350) & (1'd0 == and_ln146_reg_1341) & (1'd0 == and_ln142_reg_1332) & (or_ln141_reg_1328 == 1'd0) & (1'd0 == and_ln140_reg_1314) & (1'b1 == ap_CS_fsm_state194))) begin
        p_0_reg_152 <= select_ln206_fu_1256_p3;
    end else if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        p_0_reg_152 <= select_ln153_fu_370_p3;
    end else if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        p_0_reg_152 <= select_ln148_fu_363_p3;
    end else if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        p_0_reg_152 <= select_ln143_fu_356_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        p_1_reg_130 <= select_ln136_reg_1284;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        p_1_reg_130 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        p_3_reg_98 <= select_ln136_reg_1284;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        p_3_reg_98 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        reg_0_reg_140 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state123)) begin
        reg_0_reg_140 <= reg_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        reg_1_reg_108 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        reg_1_reg_108 <= reg_2_reg_1379;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        if ((1'd0 == and_ln165_reg_1359)) begin
            u_4_reg_120 <= empty_255_reg_1532;
        end else if ((1'd1 == and_ln165_reg_1359)) begin
            u_4_reg_120 <= empty_253_reg_1732;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        and_ln140_reg_1314 <= and_ln140_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        and_ln142_reg_1332 <= grp_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        and_ln146_reg_1341 <= grp_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        and_ln151_reg_1350 <= grp_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        and_ln165_reg_1359 <= grp_fu_212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state126)) begin
        and_ln169_reg_1561 <= and_ln169_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        and_ln189_reg_1384 <= and_ln189_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        bitcast_ln136_reg_1270 <= bitcast_ln136_fu_236_p1;
        sign_reg_1275 <= sign_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state193)) begin
        empty_253_reg_1732 <= empty_253_fu_1250_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        empty_255_reg_1532 <= empty_255_fu_781_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        fracLength_1_reg_1396 <= fracLength_1_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state137)) begin
        fracLength_reg_1574 <= fracLength_fu_868_p2;
        select_ln169_reg_1567 <= select_ln169_fu_857_p3;
        tmp_55_reg_1580 <= fracLength_fu_868_p2[32'd4];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_55_reg_1580 == 1'd1) & (1'b1 == ap_CS_fsm_state138))) begin
        icmp_ln173_1_reg_1592 <= icmp_ln173_1_fu_905_p2;
        icmp_ln173_reg_1587 <= icmp_ln173_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state191)) begin
        icmp_ln175_1_reg_1705 <= icmp_ln175_1_fu_1136_p2;
        select_ln171_1_reg_1700 <= select_ln171_1_fu_1130_p3;
        select_ln171_reg_1695 <= select_ln171_fu_1123_p3;
        shl_ln181_reg_1711 <= shl_ln181_fu_1145_p2;
        tmp_27_reg_1690 <= grp_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state190)) begin
        icmp_ln175_reg_1674 <= icmp_ln175_fu_1085_p2;
        regime_reg_1680 <= regime_fu_1097_p2;
        sub_ln181_reg_1685 <= sub_ln181_fu_1103_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        icmp_ln188_reg_1369 <= icmp_ln188_fu_418_p2;
        reg_2_reg_1379 <= reg_2_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        icmp_ln195_1_reg_1505 <= icmp_ln195_1_fu_662_p2;
        select_ln188_1_reg_1500 <= select_ln188_1_fu_656_p3;
        shl_ln200_reg_1511 <= shl_ln200_fu_671_p2;
        tmp_34_reg_1495 <= grp_fu_201_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        icmp_ln195_reg_1474 <= icmp_ln195_fu_632_p2;
        regime_1_reg_1480 <= regime_1_fu_644_p2;
        sub_ln200_reg_1485 <= sub_ln200_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln140_fu_327_p2) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln833_reg_1318 <= icmp_ln833_fu_331_p2;
        icmp_ln837_reg_1323 <= icmp_ln837_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        isNeg_1_reg_1417 <= add_ln502_1_fu_493_p2[32'd11];
        tmp_V_207_reg_1412 <= tmp_V_207_fu_485_p1;
        ush_2_reg_1422 <= ush_2_fu_517_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state162)) begin
        isNeg_reg_1617 <= add_ln502_fu_946_p2[32'd11];
        tmp_V_205_reg_1612 <= tmp_V_205_fu_938_p1;
        ush_reg_1622 <= ush_fu_970_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        or_ln123_1_reg_1468 <= or_ln123_1_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state188)) begin
        or_ln123_reg_1668 <= or_ln123_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        or_ln140_reg_1302 <= or_ln140_fu_321_p2;
        tmp_11_reg_1309 <= grp_fu_187_p2;
        tmp_V_203_reg_1297 <= tmp_V_203_fu_305_p1;
        tmp_V_reg_1292 <= {{p_Val2_s_fu_292_p1[62:52]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        or_ln141_reg_1328 <= or_ln141_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state113)) begin
        or_ln168_reg_1542 <= or_ln168_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state192)) begin
        or_ln183_3_reg_1727 <= or_ln183_3_fu_1211_p2;
        select_ln175_reg_1717 <= select_ln175_fu_1167_p3;
        shl_ln181_1_reg_1722 <= shl_ln181_1_fu_1177_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        or_ln188_reg_1363 <= or_ln188_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        or_ln202_3_reg_1527 <= or_ln202_3_fu_747_p2;
        select_ln195_reg_1517 <= select_ln195_fu_702_p3;
        shl_ln200_1_reg_1522 <= shl_ln200_1_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state161) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state39) | ((1'd1 == and_ln169_reg_1561) & (1'b1 == ap_CS_fsm_state136)) | ((1'd1 == and_ln189_reg_1384) & (1'b1 == ap_CS_fsm_state52)))) begin
        reg_217 <= grp_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state187) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_223 <= grp_fu_173_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state173) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state151) | (1'b1 == ap_CS_fsm_state67))) begin
        reg_230 <= grp_fu_209_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln136_reg_1284 <= select_ln136_fu_286_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        select_ln189_reg_1391 <= select_ln189_fu_441_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        shl_ln120_1_reg_1402 <= shl_ln120_1_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state143)) begin
        shl_ln120_reg_1602 <= shl_ln120_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((sign_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_state110))) begin
        sub_ln207_reg_1537 <= sub_ln207_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_55_reg_1580 == 1'd1) & (1'b1 == ap_CS_fsm_state141))) begin
        tmp_30_reg_1597 <= grp_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln188_reg_1369 == 1'd1) & (1'b1 == ap_CS_fsm_state107))) begin
        tmp_33_reg_1490 <= grp_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((isNeg_reg_1617 == 1'd0) & (1'b1 == ap_CS_fsm_state164))) begin
        tmp_35_reg_1652 <= {{grp_fu_1008_p2[68:53]}};
    end
end

always @ (posedge ap_clk) begin
    if (((isNeg_1_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        tmp_36_reg_1452 <= {{grp_fu_555_p2[68:53]}};
    end
end

always @ (posedge ap_clk) begin
    if (((isNeg_reg_1617 == 1'd1) & (1'b1 == ap_CS_fsm_state164))) begin
        tmp_57_reg_1647 <= grp_fu_1002_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if (((isNeg_1_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        tmp_59_reg_1447 <= grp_fu_549_p2[32'd53];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        val_V_1_reg_1457 <= val_V_1_fu_582_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state165)) begin
        val_V_reg_1657 <= val_V_fu_1035_p3;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state194) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln151_reg_1350) & (1'd0 == and_ln146_reg_1341) & (1'd0 == and_ln142_reg_1332) & (or_ln141_reg_1328 == 1'd0) & (1'd0 == and_ln140_reg_1314) & (1'b1 == ap_CS_fsm_state194))) begin
        ap_phi_mux_p_0_phi_fu_157_p12 = select_ln206_fu_1256_p3;
    end else begin
        ap_phi_mux_p_0_phi_fu_157_p12 = p_0_reg_152;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        if ((1'd0 == and_ln165_reg_1359)) begin
            ap_phi_mux_u_4_phi_fu_123_p4 = empty_255_reg_1532;
        end else if ((1'd1 == and_ln165_reg_1359)) begin
            ap_phi_mux_u_4_phi_fu_123_p4 = empty_253_reg_1732;
        end else begin
            ap_phi_mux_u_4_phi_fu_123_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_u_4_phi_fu_123_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state194)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state194)) begin
        ap_return = ap_phi_mux_p_0_phi_fu_157_p12;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state90))) begin
        grp_fu_173_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state138))) begin
        grp_fu_173_opcode = 2'd0;
    end else begin
        grp_fu_173_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_173_p0 = select_ln169_reg_1567;
    end else if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state90))) begin
        grp_fu_173_p0 = reg_217;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_173_p0 = select_ln189_reg_1391;
    end else begin
        grp_fu_173_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state174) | (1'b1 == ap_CS_fsm_state90))) begin
        grp_fu_173_p1 = reg_230;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state138))) begin
        grp_fu_173_p1 = 64'd13830554455654793216;
    end else begin
        grp_fu_173_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state114))) begin
        grp_fu_178_p0 = p_1_reg_130;
    end else if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_178_p0 = reg_223;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_178_p0 = p_3_reg_98;
    end else begin
        grp_fu_178_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_178_p1 = 64'd4598175219545276416;
    end else if (((1'b1 == ap_CS_fsm_state152) | (1'b1 == ap_CS_fsm_state68))) begin
        grp_fu_178_p1 = reg_230;
    end else if (((1'b1 == ap_CS_fsm_state127) | (1'b1 == ap_CS_fsm_state43))) begin
        grp_fu_178_p1 = 64'd4602678819172646912;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_178_p1 = 64'd4616189618054758400;
    end else begin
        grp_fu_178_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_55_reg_1580 == 1'd1) & (1'b1 == ap_CS_fsm_state138)) | ((grp_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23)))) begin
        grp_fu_187_opcode = 5'd2;
    end else if (((grp_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        grp_fu_187_opcode = 5'd5;
    end else if (((1'b1 == ap_CS_fsm_state111) | (1'b1 == ap_CS_fsm_state188) | ((1'd0 == and_ln168_fu_840_p2) & (1'b1 == ap_CS_fsm_state114)) | ((icmp_ln188_reg_1369 == 1'd1) & (1'b1 == ap_CS_fsm_state104)) | ((1'd0 == and_ln188_fu_424_p2) & (1'b1 == ap_CS_fsm_state30)) | ((grp_fu_212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_fu_187_opcode = 5'd3;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((or_ln141_reg_1328 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((1'd0 == and_ln140_fu_327_p2) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_187_opcode = 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state27) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        grp_fu_187_opcode = 5'd4;
    end else begin
        grp_fu_187_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state138)) begin
        grp_fu_187_p0 = select_ln169_reg_1567;
    end else if ((1'b1 == ap_CS_fsm_state114)) begin
        grp_fu_187_p0 = p_1_reg_130;
    end else if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_187_p0 = ap_phi_mux_p_1_phi_fu_133_p4;
    end else if (((1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_187_p0 = reg_223;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_187_p0 = p_3_reg_98;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_187_p0 = ap_phi_mux_p_3_phi_fu_101_p4;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_187_p0 = select_ln136_reg_1284;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_187_p0 = f;
    end else begin
        grp_fu_187_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        grp_fu_187_p1 = 64'd4616189618054758400;
    end else if (((1'b1 == ap_CS_fsm_state188) | (1'b1 == ap_CS_fsm_state104))) begin
        grp_fu_187_p1 = 64'd4602678819172646912;
    end else if (((1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_187_p1 = 64'd4611686018427387904;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_187_p1 = 64'd4481081629233643520;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_187_p1 = 64'd4733283208366391296;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state138) | (1'b1 == ap_CS_fsm_state23))) begin
        grp_fu_187_p1 = 64'd4607182418800017408;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_187_p1 = 64'd9218868437227405312;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_187_p1 = 64'd0;
    end else begin
        grp_fu_187_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state166)) begin
        grp_fu_209_p0 = zext_ln122_fu_1041_p1;
    end else if ((1'b1 == ap_CS_fsm_state144)) begin
        grp_fu_209_p0 = zext_ln120_fu_920_p1;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_209_p0 = zext_ln122_1_fu_588_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_209_p0 = zext_ln120_1_fu_467_p1;
    end else begin
        grp_fu_209_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'd1 == and_ln140_fu_327_p2) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state194;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((or_ln141_reg_1328 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state194;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state194;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state194;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state194;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'd0 == and_ln188_fu_424_p2) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state194;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            if (((1'd0 == and_ln168_fu_840_p2) & (1'b1 == ap_CS_fsm_state114))) begin
                ap_NS_fsm = ap_ST_fsm_state124;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state160;
        end
        ap_ST_fsm_state160 : begin
            ap_NS_fsm = ap_ST_fsm_state161;
        end
        ap_ST_fsm_state161 : begin
            ap_NS_fsm = ap_ST_fsm_state162;
        end
        ap_ST_fsm_state162 : begin
            ap_NS_fsm = ap_ST_fsm_state163;
        end
        ap_ST_fsm_state163 : begin
            ap_NS_fsm = ap_ST_fsm_state164;
        end
        ap_ST_fsm_state164 : begin
            ap_NS_fsm = ap_ST_fsm_state165;
        end
        ap_ST_fsm_state165 : begin
            ap_NS_fsm = ap_ST_fsm_state166;
        end
        ap_ST_fsm_state166 : begin
            ap_NS_fsm = ap_ST_fsm_state167;
        end
        ap_ST_fsm_state167 : begin
            ap_NS_fsm = ap_ST_fsm_state168;
        end
        ap_ST_fsm_state168 : begin
            ap_NS_fsm = ap_ST_fsm_state169;
        end
        ap_ST_fsm_state169 : begin
            ap_NS_fsm = ap_ST_fsm_state170;
        end
        ap_ST_fsm_state170 : begin
            ap_NS_fsm = ap_ST_fsm_state171;
        end
        ap_ST_fsm_state171 : begin
            ap_NS_fsm = ap_ST_fsm_state172;
        end
        ap_ST_fsm_state172 : begin
            ap_NS_fsm = ap_ST_fsm_state173;
        end
        ap_ST_fsm_state173 : begin
            ap_NS_fsm = ap_ST_fsm_state174;
        end
        ap_ST_fsm_state174 : begin
            ap_NS_fsm = ap_ST_fsm_state175;
        end
        ap_ST_fsm_state175 : begin
            ap_NS_fsm = ap_ST_fsm_state176;
        end
        ap_ST_fsm_state176 : begin
            ap_NS_fsm = ap_ST_fsm_state177;
        end
        ap_ST_fsm_state177 : begin
            ap_NS_fsm = ap_ST_fsm_state178;
        end
        ap_ST_fsm_state178 : begin
            ap_NS_fsm = ap_ST_fsm_state179;
        end
        ap_ST_fsm_state179 : begin
            ap_NS_fsm = ap_ST_fsm_state180;
        end
        ap_ST_fsm_state180 : begin
            ap_NS_fsm = ap_ST_fsm_state181;
        end
        ap_ST_fsm_state181 : begin
            ap_NS_fsm = ap_ST_fsm_state182;
        end
        ap_ST_fsm_state182 : begin
            ap_NS_fsm = ap_ST_fsm_state183;
        end
        ap_ST_fsm_state183 : begin
            ap_NS_fsm = ap_ST_fsm_state184;
        end
        ap_ST_fsm_state184 : begin
            ap_NS_fsm = ap_ST_fsm_state185;
        end
        ap_ST_fsm_state185 : begin
            ap_NS_fsm = ap_ST_fsm_state186;
        end
        ap_ST_fsm_state186 : begin
            ap_NS_fsm = ap_ST_fsm_state187;
        end
        ap_ST_fsm_state187 : begin
            ap_NS_fsm = ap_ST_fsm_state188;
        end
        ap_ST_fsm_state188 : begin
            ap_NS_fsm = ap_ST_fsm_state189;
        end
        ap_ST_fsm_state189 : begin
            ap_NS_fsm = ap_ST_fsm_state190;
        end
        ap_ST_fsm_state190 : begin
            ap_NS_fsm = ap_ST_fsm_state191;
        end
        ap_ST_fsm_state191 : begin
            ap_NS_fsm = ap_ST_fsm_state192;
        end
        ap_ST_fsm_state192 : begin
            ap_NS_fsm = ap_ST_fsm_state193;
        end
        ap_ST_fsm_state193 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state194 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln502_1_fu_493_p2 = ($signed(12'd3073) + $signed(zext_ln502_2_fu_489_p1));

assign add_ln502_fu_946_p2 = ($signed(12'd3073) + $signed(zext_ln502_fu_942_p1));

assign and_ln140_fu_327_p2 = (tmp_11_reg_1309 & or_ln140_reg_1302);

assign and_ln141_fu_345_p2 = (or_ln140_reg_1302 & grp_fu_187_p2);

assign and_ln168_1_fu_835_p2 = (or_ln168_reg_1542 & grp_fu_187_p2);

assign and_ln168_fu_840_p2 = (icmp_ln168_fu_829_p2 & and_ln168_1_fu_835_p2);

assign and_ln169_fu_852_p2 = (or_ln168_reg_1542 & grp_fu_187_p2);

assign and_ln173_fu_1118_p2 = (tmp_30_reg_1597 & or_ln173_fu_1114_p2);

assign and_ln183_1_fu_1240_p2 = (xor_ln171_fu_1217_p2 & and_ln183_fu_1235_p2);

assign and_ln183_fu_1235_p2 = (or_ln183_3_reg_1727 & bitNPlusOne_fu_1222_p2);

assign and_ln188_1_fu_413_p2 = (or_ln188_reg_1363 & grp_fu_187_p2);

assign and_ln188_2_fu_683_p2 = (icmp_ln188_reg_1369 & bitsMore_1_fu_679_p2);

assign and_ln188_fu_424_p2 = (icmp_ln188_fu_418_p2 & and_ln188_1_fu_413_p2);

assign and_ln189_fu_436_p2 = (or_ln188_reg_1363 & grp_fu_187_p2);

assign and_ln18_fu_341_p2 = (icmp_ln837_reg_1323 & icmp_ln833_reg_1318);

assign and_ln202_fu_772_p2 = (select_ln188_fu_757_p3 & or_ln202_3_reg_1527);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd109];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd110];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state126 = ap_CS_fsm[32'd125];

assign ap_CS_fsm_state127 = ap_CS_fsm[32'd126];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state136 = ap_CS_fsm[32'd135];

assign ap_CS_fsm_state137 = ap_CS_fsm[32'd136];

assign ap_CS_fsm_state138 = ap_CS_fsm[32'd137];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state141 = ap_CS_fsm[32'd140];

assign ap_CS_fsm_state143 = ap_CS_fsm[32'd142];

assign ap_CS_fsm_state144 = ap_CS_fsm[32'd143];

assign ap_CS_fsm_state151 = ap_CS_fsm[32'd150];

assign ap_CS_fsm_state152 = ap_CS_fsm[32'd151];

assign ap_CS_fsm_state161 = ap_CS_fsm[32'd160];

assign ap_CS_fsm_state162 = ap_CS_fsm[32'd161];

assign ap_CS_fsm_state163 = ap_CS_fsm[32'd162];

assign ap_CS_fsm_state164 = ap_CS_fsm[32'd163];

assign ap_CS_fsm_state165 = ap_CS_fsm[32'd164];

assign ap_CS_fsm_state166 = ap_CS_fsm[32'd165];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state173 = ap_CS_fsm[32'd172];

assign ap_CS_fsm_state174 = ap_CS_fsm[32'd173];

assign ap_CS_fsm_state187 = ap_CS_fsm[32'd186];

assign ap_CS_fsm_state188 = ap_CS_fsm[32'd187];

assign ap_CS_fsm_state190 = ap_CS_fsm[32'd189];

assign ap_CS_fsm_state191 = ap_CS_fsm[32'd190];

assign ap_CS_fsm_state192 = ap_CS_fsm[32'd191];

assign ap_CS_fsm_state193 = ap_CS_fsm[32'd192];

assign ap_CS_fsm_state194 = ap_CS_fsm[32'd193];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_phi_mux_p_1_phi_fu_133_p4 = p_1_reg_130;

assign ap_phi_mux_p_3_phi_fu_101_p4 = p_3_reg_98;

assign bitNPlusOne_1_fu_753_p2 = (tmp_33_reg_1490 & or_ln123_1_reg_1468);

assign bitNPlusOne_fu_1222_p2 = (tmp_27_reg_1690 & or_ln123_reg_1668);

assign bitcast_ln123_1_fu_592_p1 = reg_223;

assign bitcast_ln123_fu_1045_p1 = reg_223;

assign bitcast_ln136_fu_236_p1 = f;

assign bitcast_ln137_fu_282_p1 = xor_ln137_fu_277_p2;

assign bitcast_ln168_fu_793_p1 = p_1_reg_130;

assign bitcast_ln173_fu_882_p1 = select_ln169_reg_1567;

assign bitcast_ln188_fu_377_p1 = p_3_reg_98;

assign bitsMore_1_fu_679_p2 = (tmp_34_reg_1495 & or_ln123_1_reg_1468);

assign bitsMore_fu_1109_p2 = (or_ln123_reg_1668 & grp_fu_201_p2);

assign empty_253_fu_1250_p2 = (empty_fu_1246_p1 + or_ln181_1_fu_1230_p2);

assign empty_254_fu_777_p1 = and_ln202_fu_772_p2;

assign empty_255_fu_781_p2 = (empty_254_fu_777_p1 + or_ln200_1_fu_767_p2);

assign empty_fu_1246_p1 = and_ln183_1_fu_1240_p2;

assign fracLength_1_fu_452_p2 = (5'd13 - zext_ln190_1_fu_448_p1);

assign fracLength_fu_868_p2 = (5'd13 - zext_ln170_1_fu_864_p1);

assign grp_fu_1002_p1 = $unsigned(sext_ln1311_3_fu_991_p1);

assign grp_fu_1008_p0 = mantissa_V_fu_978_p4;

assign grp_fu_1008_p1 = $unsigned(sext_ln1311_3_fu_991_p1);

assign grp_fu_212_p2 = (or_ln140_reg_1302 & grp_fu_187_p2);

assign grp_fu_549_p1 = $unsigned(sext_ln1311_5_fu_538_p1);

assign grp_fu_555_p0 = mantissa_V_1_fu_525_p4;

assign grp_fu_555_p1 = $unsigned(sext_ln1311_5_fu_538_p1);

assign icmp_ln123_1_fu_1069_p2 = ((trunc_ln123_fu_1059_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln123_2_fu_610_p2 = ((tmp_32_fu_596_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln123_3_fu_616_p2 = ((trunc_ln123_1_fu_606_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_1063_p2 = ((tmp_26_fu_1049_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln136_2_fu_259_p2 = ((trunc_ln136_fu_249_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_253_p2 = ((tmp_fu_239_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln140_1_fu_315_p2 = ((tmp_V_203_fu_305_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln140_fu_309_p2 = ((tmp_V_fu_295_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln168_1_fu_811_p2 = ((tmp_22_fu_797_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln168_2_fu_817_p2 = ((trunc_ln168_fu_807_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_829_p2 = ((reg_0_reg_140 < 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln173_1_fu_905_p2 = ((trunc_ln173_fu_895_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_899_p2 = ((tmp_29_fu_885_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln175_1_fu_1136_p2 = ((select_ln171_1_fu_1130_p3 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln175_fu_1085_p2 = ((reg_0_reg_140 != 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln188_1_fu_395_p2 = ((tmp_24_fu_381_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln188_2_fu_401_p2 = ((trunc_ln188_fu_391_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln188_fu_418_p2 = ((reg_1_reg_108 < 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln195_1_fu_662_p2 = ((select_ln188_1_fu_656_p3 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_632_p2 = ((reg_1_reg_108 != 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln833_fu_331_p2 = ((tmp_V_reg_1292 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln837_fu_336_p2 = ((tmp_V_203_reg_1297 != 52'd0) ? 1'b1 : 1'b0);

assign isNeg_1_fu_499_p3 = add_ln502_1_fu_493_p2[32'd11];

assign isNeg_fu_952_p3 = add_ln502_fu_946_p2[32'd11];

assign mantissa_V_1_fu_525_p4 = {{{{1'd1}, {tmp_V_207_reg_1412}}}, {1'd0}};

assign mantissa_V_fu_978_p4 = {{{{1'd1}, {tmp_V_205_reg_1612}}}, {1'd0}};

assign or_ln123_1_fu_622_p2 = (icmp_ln123_3_fu_616_p2 | icmp_ln123_2_fu_610_p2);

assign or_ln123_fu_1075_p2 = (icmp_ln123_fu_1063_p2 | icmp_ln123_1_fu_1069_p2);

assign or_ln136_fu_265_p2 = (icmp_ln136_fu_253_p2 | icmp_ln136_2_fu_259_p2);

assign or_ln140_fu_321_p2 = (icmp_ln140_fu_309_p2 | icmp_ln140_1_fu_315_p2);

assign or_ln141_fu_350_p2 = (and_ln18_fu_341_p2 | and_ln141_fu_345_p2);

assign or_ln168_fu_823_p2 = (icmp_ln168_2_fu_817_p2 | icmp_ln168_1_fu_811_p2);

assign or_ln173_fu_1114_p2 = (icmp_ln173_reg_1587 | icmp_ln173_1_reg_1592);

assign or_ln175_1_fu_1157_p2 = (icmp_ln175_reg_1674 | icmp_ln175_1_reg_1705);

assign or_ln175_fu_1153_p2 = (icmp_ln175_reg_1674 | icmp_ln175_1_reg_1705);

assign or_ln181_1_fu_1230_p2 = (shl_ln181_1_reg_1722 | or_ln181_fu_1226_p2);

assign or_ln181_fu_1226_p2 = (shl_ln181_reg_1711 | select_ln175_reg_1717);

assign or_ln183_1_fu_1200_p2 = (xor_ln175_fu_1161_p2 | select_ln171_reg_1695);

assign or_ln183_2_fu_1205_p2 = (trunc_ln181_2_fu_1190_p1 | or_ln183_1_fu_1200_p2);

assign or_ln183_3_fu_1211_p2 = (or_ln183_fu_1194_p2 | or_ln183_2_fu_1205_p2);

assign or_ln183_fu_1194_p2 = (trunc_ln181_fu_1183_p1 | trunc_ln181_1_fu_1186_p1);

assign or_ln188_fu_407_p2 = (icmp_ln188_2_fu_401_p2 | icmp_ln188_1_fu_395_p2);

assign or_ln195_1_fu_692_p2 = (icmp_ln195_reg_1474 | icmp_ln195_1_reg_1505);

assign or_ln195_fu_688_p2 = (icmp_ln195_reg_1474 | icmp_ln195_1_reg_1505);

assign or_ln200_1_fu_767_p2 = (shl_ln200_1_reg_1522 | or_ln200_fu_763_p2);

assign or_ln200_fu_763_p2 = (shl_ln200_reg_1511 | select_ln195_reg_1517);

assign or_ln202_1_fu_735_p2 = (xor_ln195_fu_696_p2 | and_ln188_2_fu_683_p2);

assign or_ln202_2_fu_741_p2 = (trunc_ln200_2_fu_725_p1 | or_ln202_1_fu_735_p2);

assign or_ln202_3_fu_747_p2 = (or_ln202_fu_729_p2 | or_ln202_2_fu_741_p2);

assign or_ln202_fu_729_p2 = (trunc_ln200_fu_718_p1 | trunc_ln200_1_fu_721_p1);

assign p_Val2_107_fu_924_p1 = reg_217;

assign p_Val2_111_fu_471_p1 = reg_217;

assign p_Val2_s_fu_292_p1 = select_ln136_reg_1284;

assign reg_2_fu_430_p2 = (4'd1 + reg_1_reg_108);

assign reg_fu_846_p2 = (reg_0_reg_140 + 4'd1);

assign regime_1_fu_644_p2 = ($signed(16'd65534) + $signed(shl_ln199_fu_638_p2));

assign regime_fu_1097_p2 = ($signed(16'd65534) + $signed(shl_ln180_fu_1091_p2));

assign select_ln136_fu_286_p3 = ((sign_reg_1275[0:0] === 1'b1) ? bitcast_ln137_fu_282_p1 : f);

assign select_ln143_fu_356_p3 = ((sign_reg_1275[0:0] === 1'b1) ? 16'd49152 : 16'd16384);

assign select_ln148_fu_363_p3 = ((sign_reg_1275[0:0] === 1'b1) ? 16'd32769 : 16'd32767);

assign select_ln153_fu_370_p3 = ((sign_reg_1275[0:0] === 1'b1) ? 16'd65535 : 16'd1);

assign select_ln169_fu_857_p3 = ((and_ln169_reg_1561[0:0] === 1'b1) ? reg_217 : p_1_reg_130);

assign select_ln171_1_fu_1130_p3 = ((tmp_55_reg_1580[0:0] === 1'b1) ? 16'd0 : val_V_reg_1657);

assign select_ln171_fu_1123_p3 = ((tmp_55_reg_1580[0:0] === 1'b1) ? and_ln173_fu_1118_p2 : bitsMore_fu_1109_p2);

assign select_ln175_fu_1167_p3 = ((or_ln175_fu_1153_p2[0:0] === 1'b1) ? select_ln171_1_reg_1700 : 16'd0);

assign select_ln188_1_fu_656_p3 = ((icmp_ln188_reg_1369[0:0] === 1'b1) ? val_V_1_reg_1457 : 16'd0);

assign select_ln188_fu_757_p3 = ((icmp_ln188_reg_1369[0:0] === 1'b1) ? bitNPlusOne_1_fu_753_p2 : and_ln189_reg_1384);

assign select_ln189_fu_441_p3 = ((and_ln189_reg_1384[0:0] === 1'b1) ? reg_217 : p_3_reg_98);

assign select_ln195_fu_702_p3 = ((or_ln195_fu_688_p2[0:0] === 1'b1) ? select_ln188_1_reg_1500 : 16'd0);

assign select_ln206_fu_1256_p3 = ((sign_reg_1275[0:0] === 1'b1) ? sub_ln207_reg_1537 : u_4_reg_120);

assign sext_ln1311_3_fu_991_p1 = $signed(ush_reg_1622);

assign sext_ln1311_4_fu_513_p1 = $signed(sub_ln1311_1_fu_507_p2);

assign sext_ln1311_5_fu_538_p1 = $signed(ush_2_reg_1422);

assign sext_ln1311_fu_966_p1 = $signed(sub_ln1311_fu_960_p2);

assign sext_ln170_1_fu_1150_p1 = fracLength_reg_1574;

assign sext_ln170_fu_911_p1 = fracLength_reg_1574;

assign sext_ln190_1_fu_676_p1 = fracLength_1_reg_1396;

assign sext_ln190_fu_458_p1 = fracLength_1_reg_1396;

assign shl_ln120_1_fu_461_p2 = 14'd1 << sext_ln190_fu_458_p1;

assign shl_ln120_fu_914_p2 = 14'd1 << sext_ln170_fu_911_p1;

assign shl_ln180_fu_1091_p2 = 16'd2 << zext_ln170_fu_1081_p1;

assign shl_ln181_1_fu_1177_p2 = zext_ln181_1_fu_1174_p1 << sext_ln170_1_fu_1150_p1;

assign shl_ln181_fu_1145_p2 = regime_reg_1680 << zext_ln181_fu_1142_p1;

assign shl_ln199_fu_638_p2 = 16'd2 << zext_ln190_fu_628_p1;

assign shl_ln200_1_fu_712_p2 = zext_ln200_1_fu_709_p1 << sext_ln190_1_fu_676_p1;

assign shl_ln200_fu_671_p2 = regime_1_reg_1480 << zext_ln200_fu_668_p1;

assign sign_fu_271_p2 = (or_ln136_fu_265_p2 & grp_fu_187_p2);

assign sub_ln1311_1_fu_507_p2 = (11'd1023 - tmp_V_206_fu_475_p4);

assign sub_ln1311_fu_960_p2 = (11'd1023 - tmp_V_204_fu_928_p4);

assign sub_ln181_fu_1103_p2 = ($signed(4'd14) - $signed(reg_0_reg_140));

assign sub_ln200_fu_650_p2 = ($signed(4'd14) - $signed(reg_1_reg_108));

assign sub_ln207_fu_787_p2 = (16'd0 - ap_phi_mux_u_4_phi_fu_123_p4);

assign tmp_22_fu_797_p4 = {{bitcast_ln168_fu_793_p1[62:52]}};

assign tmp_24_fu_381_p4 = {{bitcast_ln188_fu_377_p1[62:52]}};

assign tmp_26_fu_1049_p4 = {{bitcast_ln123_fu_1045_p1[62:52]}};

assign tmp_29_fu_885_p4 = {{bitcast_ln173_fu_882_p1[62:52]}};

assign tmp_32_fu_596_p4 = {{bitcast_ln123_1_fu_592_p1[62:52]}};

assign tmp_V_203_fu_305_p1 = p_Val2_s_fu_292_p1[51:0];

assign tmp_V_204_fu_928_p4 = {{p_Val2_107_fu_924_p1[62:52]}};

assign tmp_V_205_fu_938_p1 = p_Val2_107_fu_924_p1[51:0];

assign tmp_V_206_fu_475_p4 = {{p_Val2_111_fu_471_p1[62:52]}};

assign tmp_V_207_fu_485_p1 = p_Val2_111_fu_471_p1[51:0];

assign tmp_V_fu_295_p4 = {{p_Val2_s_fu_292_p1[62:52]}};

assign tmp_fu_239_p4 = {{bitcast_ln136_fu_236_p1[62:52]}};

assign trunc_ln123_1_fu_606_p1 = bitcast_ln123_1_fu_592_p1[51:0];

assign trunc_ln123_fu_1059_p1 = bitcast_ln123_fu_1045_p1[51:0];

assign trunc_ln136_fu_249_p1 = bitcast_ln136_fu_236_p1[51:0];

assign trunc_ln168_fu_807_p1 = bitcast_ln168_fu_793_p1[51:0];

assign trunc_ln173_fu_895_p1 = bitcast_ln173_fu_882_p1[51:0];

assign trunc_ln181_1_fu_1186_p1 = shl_ln181_1_fu_1177_p2[0:0];

assign trunc_ln181_2_fu_1190_p1 = select_ln175_fu_1167_p3[0:0];

assign trunc_ln181_fu_1183_p1 = shl_ln181_reg_1711[0:0];

assign trunc_ln188_fu_391_p1 = bitcast_ln188_fu_377_p1[51:0];

assign trunc_ln200_1_fu_721_p1 = shl_ln200_1_fu_712_p2[0:0];

assign trunc_ln200_2_fu_725_p1 = select_ln195_fu_702_p3[0:0];

assign trunc_ln200_fu_718_p1 = shl_ln200_reg_1511[0:0];

assign ush_2_fu_517_p3 = ((isNeg_1_fu_499_p3[0:0] === 1'b1) ? sext_ln1311_4_fu_513_p1 : add_ln502_1_fu_493_p2);

assign ush_fu_970_p3 = ((isNeg_fu_952_p3[0:0] === 1'b1) ? sext_ln1311_fu_966_p1 : add_ln502_fu_946_p2);

assign val_V_1_fu_582_p3 = ((isNeg_1_reg_1417[0:0] === 1'b1) ? zext_ln662_1_fu_579_p1 : tmp_36_reg_1452);

assign val_V_fu_1035_p3 = ((isNeg_reg_1617[0:0] === 1'b1) ? zext_ln662_fu_1032_p1 : tmp_35_reg_1652);

assign xor_ln137_fu_277_p2 = (bitcast_ln136_reg_1270 ^ 64'd9223372036854775808);

assign xor_ln171_fu_1217_p2 = (tmp_55_reg_1580 ^ 1'd1);

assign xor_ln175_fu_1161_p2 = (or_ln175_1_fu_1157_p2 ^ 1'd1);

assign xor_ln195_fu_696_p2 = (or_ln195_1_fu_692_p2 ^ 1'd1);

assign zext_ln120_1_fu_467_p1 = shl_ln120_1_reg_1402;

assign zext_ln120_fu_920_p1 = shl_ln120_reg_1602;

assign zext_ln122_1_fu_588_p1 = val_V_1_reg_1457;

assign zext_ln122_fu_1041_p1 = val_V_reg_1657;

assign zext_ln170_1_fu_864_p1 = reg_0_reg_140;

assign zext_ln170_fu_1081_p1 = reg_0_reg_140;

assign zext_ln181_1_fu_1174_p1 = and_ln169_reg_1561;

assign zext_ln181_fu_1142_p1 = sub_ln181_reg_1685;

assign zext_ln190_1_fu_448_p1 = reg_1_reg_108;

assign zext_ln190_fu_628_p1 = reg_1_reg_108;

assign zext_ln200_1_fu_709_p1 = and_ln189_reg_1384;

assign zext_ln200_fu_668_p1 = sub_ln200_reg_1485;

assign zext_ln502_2_fu_489_p1 = tmp_V_206_fu_475_p4;

assign zext_ln502_fu_942_p1 = tmp_V_204_fu_928_p4;

assign zext_ln662_1_fu_579_p1 = tmp_59_reg_1447;

assign zext_ln662_fu_1032_p1 = tmp_57_reg_1647;

endmodule //double_to_posit16
