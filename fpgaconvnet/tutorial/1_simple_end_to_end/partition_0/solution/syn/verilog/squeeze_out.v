// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module squeeze_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_9_V_V_dout,
        in_9_V_V_empty_n,
        in_9_V_V_read,
        in_13_V_V_dout,
        in_13_V_V_empty_n,
        in_13_V_V_read,
        in_5_V_V_dout,
        in_5_V_V_empty_n,
        in_5_V_V_read,
        in_1_V_V_dout,
        in_1_V_V_empty_n,
        in_1_V_V_read,
        in_15_V_V_dout,
        in_15_V_V_empty_n,
        in_15_V_V_read,
        in_0_V_V_dout,
        in_0_V_V_empty_n,
        in_0_V_V_read,
        in_2_V_V_dout,
        in_2_V_V_empty_n,
        in_2_V_V_read,
        in_3_V_V_dout,
        in_3_V_V_empty_n,
        in_3_V_V_read,
        in_4_V_V_dout,
        in_4_V_V_empty_n,
        in_4_V_V_read,
        in_6_V_V_dout,
        in_6_V_V_empty_n,
        in_6_V_V_read,
        in_7_V_V_dout,
        in_7_V_V_empty_n,
        in_7_V_V_read,
        in_8_V_V_dout,
        in_8_V_V_empty_n,
        in_8_V_V_read,
        in_10_V_V_dout,
        in_10_V_V_empty_n,
        in_10_V_V_read,
        in_11_V_V_dout,
        in_11_V_V_empty_n,
        in_11_V_V_read,
        in_12_V_V_dout,
        in_12_V_V_empty_n,
        in_12_V_V_read,
        in_14_V_V_dout,
        in_14_V_V_empty_n,
        in_14_V_V_read,
        out_0_V_V_din,
        out_0_V_V_full_n,
        out_0_V_V_write,
        out_1_V_V_din,
        out_1_V_V_full_n,
        out_1_V_V_write,
        out_2_V_V_din,
        out_2_V_V_full_n,
        out_2_V_V_write,
        out_3_V_V_din,
        out_3_V_V_full_n,
        out_3_V_V_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_pp0_stage1 = 5'd4;
parameter    ap_ST_fsm_pp0_stage2 = 5'd8;
parameter    ap_ST_fsm_pp0_stage3 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] in_9_V_V_dout;
input   in_9_V_V_empty_n;
output   in_9_V_V_read;
input  [15:0] in_13_V_V_dout;
input   in_13_V_V_empty_n;
output   in_13_V_V_read;
input  [15:0] in_5_V_V_dout;
input   in_5_V_V_empty_n;
output   in_5_V_V_read;
input  [15:0] in_1_V_V_dout;
input   in_1_V_V_empty_n;
output   in_1_V_V_read;
input  [15:0] in_15_V_V_dout;
input   in_15_V_V_empty_n;
output   in_15_V_V_read;
input  [15:0] in_0_V_V_dout;
input   in_0_V_V_empty_n;
output   in_0_V_V_read;
input  [15:0] in_2_V_V_dout;
input   in_2_V_V_empty_n;
output   in_2_V_V_read;
input  [15:0] in_3_V_V_dout;
input   in_3_V_V_empty_n;
output   in_3_V_V_read;
input  [15:0] in_4_V_V_dout;
input   in_4_V_V_empty_n;
output   in_4_V_V_read;
input  [15:0] in_6_V_V_dout;
input   in_6_V_V_empty_n;
output   in_6_V_V_read;
input  [15:0] in_7_V_V_dout;
input   in_7_V_V_empty_n;
output   in_7_V_V_read;
input  [15:0] in_8_V_V_dout;
input   in_8_V_V_empty_n;
output   in_8_V_V_read;
input  [15:0] in_10_V_V_dout;
input   in_10_V_V_empty_n;
output   in_10_V_V_read;
input  [15:0] in_11_V_V_dout;
input   in_11_V_V_empty_n;
output   in_11_V_V_read;
input  [15:0] in_12_V_V_dout;
input   in_12_V_V_empty_n;
output   in_12_V_V_read;
input  [15:0] in_14_V_V_dout;
input   in_14_V_V_empty_n;
output   in_14_V_V_read;
output  [15:0] out_0_V_V_din;
input   out_0_V_V_full_n;
output   out_0_V_V_write;
output  [15:0] out_1_V_V_din;
input   out_1_V_V_full_n;
output   out_1_V_V_write;
output  [15:0] out_2_V_V_din;
input   out_2_V_V_full_n;
output   out_2_V_V_write;
output  [15:0] out_3_V_V_din;
input   out_3_V_V_full_n;
output   out_3_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_9_V_V_read;
reg in_13_V_V_read;
reg in_5_V_V_read;
reg in_1_V_V_read;
reg in_15_V_V_read;
reg in_0_V_V_read;
reg in_2_V_V_read;
reg in_3_V_V_read;
reg in_4_V_V_read;
reg in_6_V_V_read;
reg in_7_V_V_read;
reg in_8_V_V_read;
reg in_10_V_V_read;
reg in_11_V_V_read;
reg in_12_V_V_read;
reg in_14_V_V_read;
reg out_0_V_V_write;
reg out_1_V_V_write;
reg out_2_V_V_write;
reg out_3_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln122_fu_336_p2;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter0;
reg   [3:0] cache_index_01_reg_216;
reg    ap_predicate_op59_read_state5;
reg    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    in_0_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [3:0] ap_phi_mux_cache_index_01_phi_fu_220_p6;
reg    in_1_V_V_blk_n;
wire    ap_block_pp0_stage3;
reg    in_2_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    in_3_V_V_blk_n;
reg    in_4_V_V_blk_n;
reg    in_5_V_V_blk_n;
reg    in_6_V_V_blk_n;
reg    in_7_V_V_blk_n;
reg    in_8_V_V_blk_n;
reg    in_9_V_V_blk_n;
reg    in_10_V_V_blk_n;
reg    in_11_V_V_blk_n;
reg    in_12_V_V_blk_n;
reg    in_13_V_V_blk_n;
reg    in_14_V_V_blk_n;
reg    in_15_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    out_0_V_V_blk_n;
reg    out_1_V_V_blk_n;
reg    out_2_V_V_blk_n;
reg    out_3_V_V_blk_n;
reg   [11:0] i_02_reg_264;
reg    ap_predicate_op38_read_state3;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state6_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op43_read_state4;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
wire   [11:0] i_fu_324_p2;
reg   [11:0] i_reg_374;
wire   [3:0] cache_index_fu_330_p2;
reg   [3:0] cache_index_reg_404;
reg   [0:0] icmp_ln122_reg_409;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op93_read_state7;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_state1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage1_subdone;
reg   [15:0] ap_phi_reg_pp0_iter0_tmp_V_20_reg_231;
wire   [15:0] ap_phi_reg_pp0_iter0_tmp_V_32_reg_278;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_V_32_reg_278;
wire   [15:0] ap_phi_reg_pp0_iter0_tmp_V_37_reg_294;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_V_37_reg_294;
reg   [15:0] ap_phi_reg_pp0_iter0_tmp_V_26_reg_308;
reg   [15:0] ap_phi_reg_pp0_iter1_tmp_V_26_reg_308;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage0_01001;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_245;
reg    ap_condition_238;
reg    ap_condition_301;
reg    ap_condition_96;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln122_reg_409 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_301)) begin
        if ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0)) begin
            ap_phi_reg_pp0_iter0_tmp_V_20_reg_231 <= in_0_V_V_dout;
        end else if ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4)) begin
            ap_phi_reg_pp0_iter0_tmp_V_20_reg_231 <= in_4_V_V_dout;
        end else if ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8)) begin
            ap_phi_reg_pp0_iter0_tmp_V_20_reg_231 <= in_8_V_V_dout;
        end else if ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12)) begin
            ap_phi_reg_pp0_iter0_tmp_V_20_reg_231 <= in_12_V_V_dout;
        end else if ((1'b1 == ap_condition_238)) begin
            ap_phi_reg_pp0_iter0_tmp_V_20_reg_231 <= in_15_V_V_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_96)) begin
        if ((cache_index_01_reg_216 == 4'd0)) begin
            ap_phi_reg_pp0_iter1_tmp_V_26_reg_308 <= in_1_V_V_dout;
        end else if ((cache_index_01_reg_216 == 4'd4)) begin
            ap_phi_reg_pp0_iter1_tmp_V_26_reg_308 <= in_5_V_V_dout;
        end else if ((cache_index_01_reg_216 == 4'd12)) begin
            ap_phi_reg_pp0_iter1_tmp_V_26_reg_308 <= in_13_V_V_dout;
        end else if ((cache_index_01_reg_216 == 4'd8)) begin
            ap_phi_reg_pp0_iter1_tmp_V_26_reg_308 <= in_9_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_V_26_reg_308 <= ap_phi_reg_pp0_iter0_tmp_V_26_reg_308;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((cache_index_01_reg_216 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_32_reg_278 <= in_2_V_V_dout;
    end else if (((cache_index_01_reg_216 == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_32_reg_278 <= in_14_V_V_dout;
    end else if (((cache_index_01_reg_216 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_32_reg_278 <= in_6_V_V_dout;
    end else if (((cache_index_01_reg_216 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_32_reg_278 <= in_10_V_V_dout;
    end else if ((~(cache_index_01_reg_216 == 4'd0) & ~(cache_index_01_reg_216 == 4'd4) & ~(cache_index_01_reg_216 == 4'd12) & ~(cache_index_01_reg_216 == 4'd8) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter1_tmp_V_32_reg_278 <= in_15_V_V_dout;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter1_tmp_V_32_reg_278 <= ap_phi_reg_pp0_iter0_tmp_V_32_reg_278;
    end
end

always @ (posedge ap_clk) begin
    if (((cache_index_01_reg_216 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_37_reg_294 <= in_3_V_V_dout;
    end else if (((cache_index_01_reg_216 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_37_reg_294 <= in_11_V_V_dout;
    end else if (((cache_index_01_reg_216 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_37_reg_294 <= in_7_V_V_dout;
    end else if ((~(cache_index_01_reg_216 == 4'd0) & ~(cache_index_01_reg_216 == 4'd4) & ~(cache_index_01_reg_216 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_tmp_V_37_reg_294 <= in_15_V_V_dout;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_phi_reg_pp0_iter1_tmp_V_37_reg_294 <= ap_phi_reg_pp0_iter0_tmp_V_37_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_reg_409 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        cache_index_01_reg_216 <= cache_index_reg_404;
    end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln122_reg_409 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        cache_index_01_reg_216 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_reg_409 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_02_reg_264 <= i_reg_374;
    end else if (((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln122_reg_409 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        i_02_reg_264 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(cache_index_01_reg_216 == 4'd0) & ~(cache_index_01_reg_216 == 4'd4) & ~(cache_index_01_reg_216 == 4'd12) & ~(cache_index_01_reg_216 == 4'd8) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter0_tmp_V_26_reg_308 <= in_15_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        cache_index_reg_404 <= cache_index_fu_330_p2;
        i_reg_374 <= i_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln122_reg_409 <= icmp_ln122_fu_336_p2;
    end
end

always @ (*) begin
    if (((icmp_ln122_reg_409 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_245)) begin
        if ((icmp_ln122_reg_409 == 1'd1)) begin
            ap_phi_mux_cache_index_01_phi_fu_220_p6 = 4'd0;
        end else if ((icmp_ln122_reg_409 == 1'd0)) begin
            ap_phi_mux_cache_index_01_phi_fu_220_p6 = cache_index_reg_404;
        end else begin
            ap_phi_mux_cache_index_01_phi_fu_220_p6 = cache_index_01_reg_216;
        end
    end else begin
        ap_phi_mux_cache_index_01_phi_fu_220_p6 = cache_index_01_reg_216;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln122_fu_336_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        in_0_V_V_blk_n = in_0_V_V_empty_n;
    end else begin
        in_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_0_V_V_read = 1'b1;
    end else begin
        in_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_10_V_V_blk_n = in_10_V_V_empty_n;
    end else begin
        in_10_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_10_V_V_read = 1'b1;
    end else begin
        in_10_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_11_V_V_blk_n = in_11_V_V_empty_n;
    end else begin
        in_11_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_11_V_V_read = 1'b1;
    end else begin
        in_11_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        in_12_V_V_blk_n = in_12_V_V_empty_n;
    end else begin
        in_12_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_12_V_V_read = 1'b1;
    end else begin
        in_12_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        in_13_V_V_blk_n = in_13_V_V_empty_n;
    end else begin
        in_13_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (cache_index_01_reg_216 == 4'd12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_13_V_V_read = 1'b1;
    end else begin
        in_13_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_14_V_V_blk_n = in_14_V_V_empty_n;
    end else begin
        in_14_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_14_V_V_read = 1'b1;
    end else begin
        in_14_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~(cache_index_01_reg_216 == 4'd0) & ~(cache_index_01_reg_216 == 4'd4) & ~(cache_index_01_reg_216 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | (~(cache_index_01_reg_216 == 4'd0) & ~(cache_index_01_reg_216 == 4'd4) & ~(cache_index_01_reg_216 == 4'd12) & ~(cache_index_01_reg_216 == 4'd8) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | (~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_predicate_op59_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)))) begin
        in_15_V_V_blk_n = in_15_V_V_empty_n;
    end else begin
        in_15_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op43_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_predicate_op38_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op59_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op93_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_15_V_V_read = 1'b1;
    end else begin
        in_15_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        in_1_V_V_blk_n = in_1_V_V_empty_n;
    end else begin
        in_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (cache_index_01_reg_216 == 4'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_1_V_V_read = 1'b1;
    end else begin
        in_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_2_V_V_blk_n = in_2_V_V_empty_n;
    end else begin
        in_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_2_V_V_read = 1'b1;
    end else begin
        in_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_3_V_V_blk_n = in_3_V_V_empty_n;
    end else begin
        in_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_3_V_V_read = 1'b1;
    end else begin
        in_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        in_4_V_V_blk_n = in_4_V_V_empty_n;
    end else begin
        in_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_4_V_V_read = 1'b1;
    end else begin
        in_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        in_5_V_V_blk_n = in_5_V_V_empty_n;
    end else begin
        in_5_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (cache_index_01_reg_216 == 4'd4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_5_V_V_read = 1'b1;
    end else begin
        in_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_6_V_V_blk_n = in_6_V_V_empty_n;
    end else begin
        in_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_6_V_V_read = 1'b1;
    end else begin
        in_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        in_7_V_V_blk_n = in_7_V_V_empty_n;
    end else begin
        in_7_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_7_V_V_read = 1'b1;
    end else begin
        in_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        in_8_V_V_blk_n = in_8_V_V_empty_n;
    end else begin
        in_8_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_8_V_V_read = 1'b1;
    end else begin
        in_8_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((cache_index_01_reg_216 == 4'd8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        in_9_V_V_blk_n = in_9_V_V_empty_n;
    end else begin
        in_9_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (cache_index_01_reg_216 == 4'd8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_9_V_V_read = 1'b1;
    end else begin
        in_9_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_0_V_V_blk_n = out_0_V_V_full_n;
    end else begin
        out_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        out_0_V_V_write = 1'b1;
    end else begin
        out_0_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        out_1_V_V_blk_n = out_1_V_V_full_n;
    end else begin
        out_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_1_V_V_write = 1'b1;
    end else begin
        out_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_2_V_V_blk_n = out_2_V_V_full_n;
    end else begin
        out_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_2_V_V_write = 1'b1;
    end else begin
        out_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        out_3_V_V_blk_n = out_3_V_V_full_n;
    end else begin
        out_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_3_V_V_write = 1'b1;
    end else begin
        out_3_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((out_1_V_V_full_n == 1'b0) | ((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op93_read_state7 == 1'b1)) | ((cache_index_01_reg_216 == 4'd0) & (in_3_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd0) & (in_2_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_7_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_6_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd12) & (in_14_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_11_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_10_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((out_1_V_V_full_n == 1'b0) | ((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op93_read_state7 == 1'b1)) | ((cache_index_01_reg_216 == 4'd0) & (in_3_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd0) & (in_2_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_7_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_6_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd12) & (in_14_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_11_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_10_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((out_1_V_V_full_n == 1'b0) | ((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op93_read_state7 == 1'b1)) | ((cache_index_01_reg_216 == 4'd0) & (in_3_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd0) & (in_2_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_7_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_6_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd12) & (in_14_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_11_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_10_V_V_empty_n == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & (in_12_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & (in_8_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & (in_4_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0) & (in_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((out_3_V_V_full_n == 1'b0) | (out_2_V_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & (in_12_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & (in_8_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & (in_4_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0) & (in_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((out_3_V_V_full_n == 1'b0) | (out_2_V_V_full_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & (in_12_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & (in_8_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & (in_4_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0) & (in_0_V_V_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((out_3_V_V_full_n == 1'b0) | (out_2_V_V_full_n == 1'b0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_0_V_V_full_n == 1'b0) | ((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op43_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_0_V_V_full_n == 1'b0) | ((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op43_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((out_0_V_V_full_n == 1'b0) | ((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op43_read_state4 == 1'b1)))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op59_read_state5 == 1'b1)) | ((cache_index_01_reg_216 == 4'd0) & (in_1_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_5_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd12) & (in_13_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_9_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op59_read_state5 == 1'b1)) | ((cache_index_01_reg_216 == 4'd0) & (in_1_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_5_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd12) & (in_13_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_9_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = (((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & (in_12_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & (in_8_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & (in_4_V_V_empty_n == 1'b0)) | ((ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0) & (in_0_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((out_0_V_V_full_n == 1'b0) | ((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op43_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = (((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op59_read_state5 == 1'b1)) | ((cache_index_01_reg_216 == 4'd0) & (in_1_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_5_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd12) & (in_13_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_9_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state6_pp0_stage1_iter1 = ((out_3_V_V_full_n == 1'b0) | (out_2_V_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = ((out_1_V_V_full_n == 1'b0) | ((in_15_V_V_empty_n == 1'b0) & (ap_predicate_op93_read_state7 == 1'b1)) | ((cache_index_01_reg_216 == 4'd0) & (in_3_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd0) & (in_2_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_7_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd4) & (in_6_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd12) & (in_14_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_11_V_V_empty_n == 1'b0)) | ((cache_index_01_reg_216 == 4'd8) & (in_10_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_238 = (~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0));
end

always @ (*) begin
    ap_condition_245 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1));
end

always @ (*) begin
    ap_condition_301 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_96 = ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_V_32_reg_278 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_V_37_reg_294 = 'bx;

always @ (*) begin
    ap_predicate_op38_read_state3 = (~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd12) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd8) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd4) & ~(ap_phi_mux_cache_index_01_phi_fu_220_p6 == 4'd0));
end

always @ (*) begin
    ap_predicate_op43_read_state4 = (~(cache_index_01_reg_216 == 4'd0) & ~(cache_index_01_reg_216 == 4'd4) & ~(cache_index_01_reg_216 == 4'd12) & ~(cache_index_01_reg_216 == 4'd8));
end

always @ (*) begin
    ap_predicate_op59_read_state5 = (~(cache_index_01_reg_216 == 4'd0) & ~(cache_index_01_reg_216 == 4'd4) & ~(cache_index_01_reg_216 == 4'd12) & ~(cache_index_01_reg_216 == 4'd8));
end

always @ (*) begin
    ap_predicate_op93_read_state7 = (~(cache_index_01_reg_216 == 4'd0) & ~(cache_index_01_reg_216 == 4'd4) & ~(cache_index_01_reg_216 == 4'd8));
end

assign cache_index_fu_330_p2 = (cache_index_01_reg_216 + 4'd4);

assign i_fu_324_p2 = (i_02_reg_264 + 12'd1);

assign icmp_ln122_fu_336_p2 = ((i_02_reg_264 == 12'd2303) ? 1'b1 : 1'b0);

assign out_0_V_V_din = ap_phi_reg_pp0_iter0_tmp_V_20_reg_231;

assign out_1_V_V_din = ap_phi_reg_pp0_iter1_tmp_V_26_reg_308;

assign out_2_V_V_din = ap_phi_reg_pp0_iter1_tmp_V_32_reg_278;

assign out_3_V_V_din = ap_phi_reg_pp0_iter1_tmp_V_37_reg_294;

endmodule //squeeze_out
