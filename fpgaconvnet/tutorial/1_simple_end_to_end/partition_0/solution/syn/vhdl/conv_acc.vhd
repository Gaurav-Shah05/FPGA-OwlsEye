-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_acc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    acc_stream_0_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_0_V_V_empty_n : IN STD_LOGIC;
    acc_stream_0_V_V_read : OUT STD_LOGIC;
    acc_stream_1_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_1_V_V_empty_n : IN STD_LOGIC;
    acc_stream_1_V_V_read : OUT STD_LOGIC;
    acc_stream_2_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_2_V_V_empty_n : IN STD_LOGIC;
    acc_stream_2_V_V_read : OUT STD_LOGIC;
    acc_stream_3_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_3_V_V_empty_n : IN STD_LOGIC;
    acc_stream_3_V_V_read : OUT STD_LOGIC;
    acc_stream_4_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_4_V_V_empty_n : IN STD_LOGIC;
    acc_stream_4_V_V_read : OUT STD_LOGIC;
    acc_stream_5_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_5_V_V_empty_n : IN STD_LOGIC;
    acc_stream_5_V_V_read : OUT STD_LOGIC;
    acc_stream_6_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_6_V_V_empty_n : IN STD_LOGIC;
    acc_stream_6_V_V_read : OUT STD_LOGIC;
    acc_stream_7_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_7_V_V_empty_n : IN STD_LOGIC;
    acc_stream_7_V_V_read : OUT STD_LOGIC;
    acc_stream_8_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_8_V_V_empty_n : IN STD_LOGIC;
    acc_stream_8_V_V_read : OUT STD_LOGIC;
    acc_stream_9_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_9_V_V_empty_n : IN STD_LOGIC;
    acc_stream_9_V_V_read : OUT STD_LOGIC;
    acc_stream_10_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_10_V_V_empty_n : IN STD_LOGIC;
    acc_stream_10_V_V_read : OUT STD_LOGIC;
    acc_stream_11_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_11_V_V_empty_n : IN STD_LOGIC;
    acc_stream_11_V_V_read : OUT STD_LOGIC;
    acc_stream_12_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_12_V_V_empty_n : IN STD_LOGIC;
    acc_stream_12_V_V_read : OUT STD_LOGIC;
    acc_stream_13_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_13_V_V_empty_n : IN STD_LOGIC;
    acc_stream_13_V_V_read : OUT STD_LOGIC;
    acc_stream_14_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_14_V_V_empty_n : IN STD_LOGIC;
    acc_stream_14_V_V_read : OUT STD_LOGIC;
    acc_stream_15_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_15_V_V_empty_n : IN STD_LOGIC;
    acc_stream_15_V_V_read : OUT STD_LOGIC;
    acc_stream_16_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_16_V_V_empty_n : IN STD_LOGIC;
    acc_stream_16_V_V_read : OUT STD_LOGIC;
    acc_stream_17_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_17_V_V_empty_n : IN STD_LOGIC;
    acc_stream_17_V_V_read : OUT STD_LOGIC;
    acc_stream_18_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_18_V_V_empty_n : IN STD_LOGIC;
    acc_stream_18_V_V_read : OUT STD_LOGIC;
    acc_stream_19_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_19_V_V_empty_n : IN STD_LOGIC;
    acc_stream_19_V_V_read : OUT STD_LOGIC;
    acc_stream_20_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_20_V_V_empty_n : IN STD_LOGIC;
    acc_stream_20_V_V_read : OUT STD_LOGIC;
    acc_stream_21_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_21_V_V_empty_n : IN STD_LOGIC;
    acc_stream_21_V_V_read : OUT STD_LOGIC;
    acc_stream_22_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_22_V_V_empty_n : IN STD_LOGIC;
    acc_stream_22_V_V_read : OUT STD_LOGIC;
    acc_stream_23_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_23_V_V_empty_n : IN STD_LOGIC;
    acc_stream_23_V_V_read : OUT STD_LOGIC;
    acc_stream_24_V_V_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    acc_stream_24_V_V_empty_n : IN STD_LOGIC;
    acc_stream_24_V_V_read : OUT STD_LOGIC;
    out_V_V_din : OUT STD_LOGIC_VECTOR (29 downto 0);
    out_V_V_full_n : IN STD_LOGIC;
    out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_acc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_8FF : STD_LOGIC_VECTOR (11 downto 0) := "100011111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln273_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter6 : BOOLEAN;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal acc_stream_0_V_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal acc_stream_1_V_V_blk_n : STD_LOGIC;
    signal acc_stream_2_V_V_blk_n : STD_LOGIC;
    signal acc_stream_3_V_V_blk_n : STD_LOGIC;
    signal acc_stream_4_V_V_blk_n : STD_LOGIC;
    signal acc_stream_5_V_V_blk_n : STD_LOGIC;
    signal acc_stream_6_V_V_blk_n : STD_LOGIC;
    signal acc_stream_7_V_V_blk_n : STD_LOGIC;
    signal acc_stream_8_V_V_blk_n : STD_LOGIC;
    signal acc_stream_9_V_V_blk_n : STD_LOGIC;
    signal acc_stream_10_V_V_blk_n : STD_LOGIC;
    signal acc_stream_11_V_V_blk_n : STD_LOGIC;
    signal acc_stream_12_V_V_blk_n : STD_LOGIC;
    signal acc_stream_13_V_V_blk_n : STD_LOGIC;
    signal acc_stream_14_V_V_blk_n : STD_LOGIC;
    signal acc_stream_15_V_V_blk_n : STD_LOGIC;
    signal acc_stream_16_V_V_blk_n : STD_LOGIC;
    signal acc_stream_17_V_V_blk_n : STD_LOGIC;
    signal acc_stream_18_V_V_blk_n : STD_LOGIC;
    signal acc_stream_19_V_V_blk_n : STD_LOGIC;
    signal acc_stream_20_V_V_blk_n : STD_LOGIC;
    signal acc_stream_21_V_V_blk_n : STD_LOGIC;
    signal acc_stream_22_V_V_blk_n : STD_LOGIC;
    signal acc_stream_23_V_V_blk_n : STD_LOGIC;
    signal acc_stream_24_V_V_blk_n : STD_LOGIC;
    signal out_V_V_blk_n : STD_LOGIC;
    signal pixel_index_01_reg_269 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_V_reg_403 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_726_reg_408 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_726_reg_408_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_727_reg_413 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_728_reg_418 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_729_reg_423 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_730_reg_428 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_731_reg_433 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_731_reg_433_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_732_reg_438 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_733_reg_443 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_734_reg_448 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_735_reg_453 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_736_reg_458 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_737_reg_463 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_738_reg_468 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_739_reg_473 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_740_reg_478 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_741_reg_483 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_742_reg_488 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_743_reg_493 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_743_reg_493_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_743_reg_493_pp0_iter2_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_744_reg_498 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_745_reg_503 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_746_reg_508 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_746_reg_508_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_747_reg_513 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_747_reg_513_pp0_iter1_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_748_reg_518 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_749_reg_523 : STD_LOGIC_VECTOR (29 downto 0);
    signal pixel_index_fu_283_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal pixel_index_reg_528 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln273_reg_533 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln273_reg_533_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln273_reg_533_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln273_reg_533_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln273_reg_533_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln273_reg_533_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_fu_297_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_reg_537 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_3_fu_305_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_3_reg_542 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_5_fu_310_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_5_reg_547 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_8_fu_318_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_8_reg_552 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_12_fu_327_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_12_reg_557 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_12_reg_557_pp0_iter2_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_12_reg_557_pp0_iter3_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_14_fu_336_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_14_reg_562 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_14_reg_562_pp0_iter2_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_14_reg_562_pp0_iter3_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_16_fu_341_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_16_reg_567 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_16_reg_567_pp0_iter2_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_19_fu_345_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_19_reg_572 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_4_fu_353_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_4_reg_577 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_4_reg_577_pp0_iter3_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_4_reg_577_pp0_iter4_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_9_fu_362_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_9_reg_582 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_9_reg_582_pp0_iter3_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_9_reg_582_pp0_iter4_reg : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_20_fu_371_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_20_reg_587 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_21_fu_380_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_21_reg_592 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_22_fu_389_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_22_reg_597 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_750_fu_398_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_V_750_reg_602 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_phi_mux_pixel_index_01_phi_fu_273_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal add_ln703_2_fu_301_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_7_fu_314_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_11_fu_323_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_13_fu_332_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_1_fu_349_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_6_fu_358_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_18_fu_367_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_17_fu_376_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_15_fu_385_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln703_10_fu_394_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_382 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln273_reg_533_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    pixel_index_01_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln273_reg_533 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                pixel_index_01_reg_269 <= pixel_index_reg_528;
            elsif ((((icmp_ln273_reg_533 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                pixel_index_01_reg_269 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln703_12_reg_557 <= add_ln703_12_fu_327_p2;
                add_ln703_14_reg_562 <= add_ln703_14_fu_336_p2;
                add_ln703_16_reg_567 <= add_ln703_16_fu_341_p2;
                add_ln703_19_reg_572 <= add_ln703_19_fu_345_p2;
                add_ln703_3_reg_542 <= add_ln703_3_fu_305_p2;
                add_ln703_5_reg_547 <= add_ln703_5_fu_310_p2;
                add_ln703_8_reg_552 <= add_ln703_8_fu_318_p2;
                add_ln703_reg_537 <= add_ln703_fu_297_p2;
                icmp_ln273_reg_533 <= icmp_ln273_fu_289_p2;
                icmp_ln273_reg_533_pp0_iter1_reg <= icmp_ln273_reg_533;
                tmp_V_726_reg_408 <= acc_stream_1_V_V_dout;
                tmp_V_726_reg_408_pp0_iter1_reg <= tmp_V_726_reg_408;
                tmp_V_727_reg_413 <= acc_stream_2_V_V_dout;
                tmp_V_728_reg_418 <= acc_stream_3_V_V_dout;
                tmp_V_729_reg_423 <= acc_stream_4_V_V_dout;
                tmp_V_730_reg_428 <= acc_stream_5_V_V_dout;
                tmp_V_731_reg_433 <= acc_stream_6_V_V_dout;
                tmp_V_731_reg_433_pp0_iter1_reg <= tmp_V_731_reg_433;
                tmp_V_732_reg_438 <= acc_stream_7_V_V_dout;
                tmp_V_733_reg_443 <= acc_stream_8_V_V_dout;
                tmp_V_734_reg_448 <= acc_stream_9_V_V_dout;
                tmp_V_735_reg_453 <= acc_stream_10_V_V_dout;
                tmp_V_736_reg_458 <= acc_stream_11_V_V_dout;
                tmp_V_737_reg_463 <= acc_stream_12_V_V_dout;
                tmp_V_738_reg_468 <= acc_stream_13_V_V_dout;
                tmp_V_739_reg_473 <= acc_stream_14_V_V_dout;
                tmp_V_740_reg_478 <= acc_stream_15_V_V_dout;
                tmp_V_741_reg_483 <= acc_stream_16_V_V_dout;
                tmp_V_742_reg_488 <= acc_stream_17_V_V_dout;
                tmp_V_743_reg_493 <= acc_stream_18_V_V_dout;
                tmp_V_743_reg_493_pp0_iter1_reg <= tmp_V_743_reg_493;
                tmp_V_744_reg_498 <= acc_stream_19_V_V_dout;
                tmp_V_745_reg_503 <= acc_stream_20_V_V_dout;
                tmp_V_746_reg_508 <= acc_stream_21_V_V_dout;
                tmp_V_746_reg_508_pp0_iter1_reg <= tmp_V_746_reg_508;
                tmp_V_747_reg_513 <= acc_stream_22_V_V_dout;
                tmp_V_747_reg_513_pp0_iter1_reg <= tmp_V_747_reg_513;
                tmp_V_748_reg_518 <= acc_stream_23_V_V_dout;
                tmp_V_749_reg_523 <= acc_stream_24_V_V_dout;
                tmp_V_reg_403 <= acc_stream_0_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_12_reg_557_pp0_iter2_reg <= add_ln703_12_reg_557;
                add_ln703_12_reg_557_pp0_iter3_reg <= add_ln703_12_reg_557_pp0_iter2_reg;
                add_ln703_14_reg_562_pp0_iter2_reg <= add_ln703_14_reg_562;
                add_ln703_14_reg_562_pp0_iter3_reg <= add_ln703_14_reg_562_pp0_iter2_reg;
                add_ln703_16_reg_567_pp0_iter2_reg <= add_ln703_16_reg_567;
                add_ln703_20_reg_587 <= add_ln703_20_fu_371_p2;
                add_ln703_21_reg_592 <= add_ln703_21_fu_380_p2;
                add_ln703_22_reg_597 <= add_ln703_22_fu_389_p2;
                add_ln703_4_reg_577 <= add_ln703_4_fu_353_p2;
                add_ln703_4_reg_577_pp0_iter3_reg <= add_ln703_4_reg_577;
                add_ln703_4_reg_577_pp0_iter4_reg <= add_ln703_4_reg_577_pp0_iter3_reg;
                add_ln703_9_reg_582 <= add_ln703_9_fu_362_p2;
                add_ln703_9_reg_582_pp0_iter3_reg <= add_ln703_9_reg_582;
                add_ln703_9_reg_582_pp0_iter4_reg <= add_ln703_9_reg_582_pp0_iter3_reg;
                icmp_ln273_reg_533_pp0_iter2_reg <= icmp_ln273_reg_533_pp0_iter1_reg;
                icmp_ln273_reg_533_pp0_iter3_reg <= icmp_ln273_reg_533_pp0_iter2_reg;
                icmp_ln273_reg_533_pp0_iter4_reg <= icmp_ln273_reg_533_pp0_iter3_reg;
                icmp_ln273_reg_533_pp0_iter5_reg <= icmp_ln273_reg_533_pp0_iter4_reg;
                tmp_V_743_reg_493_pp0_iter2_reg <= tmp_V_743_reg_493_pp0_iter1_reg;
                tmp_V_750_reg_602 <= tmp_V_750_fu_398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                pixel_index_reg_528 <= pixel_index_fu_283_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    acc_stream_0_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_0_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_0_V_V_blk_n <= acc_stream_0_V_V_empty_n;
        else 
            acc_stream_0_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_0_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_0_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_10_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_10_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_10_V_V_blk_n <= acc_stream_10_V_V_empty_n;
        else 
            acc_stream_10_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_10_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_10_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_10_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_11_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_11_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_11_V_V_blk_n <= acc_stream_11_V_V_empty_n;
        else 
            acc_stream_11_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_11_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_11_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_11_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_12_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_12_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_12_V_V_blk_n <= acc_stream_12_V_V_empty_n;
        else 
            acc_stream_12_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_12_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_12_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_12_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_13_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_13_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_13_V_V_blk_n <= acc_stream_13_V_V_empty_n;
        else 
            acc_stream_13_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_13_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_13_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_13_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_14_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_14_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_14_V_V_blk_n <= acc_stream_14_V_V_empty_n;
        else 
            acc_stream_14_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_14_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_14_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_14_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_15_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_15_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_15_V_V_blk_n <= acc_stream_15_V_V_empty_n;
        else 
            acc_stream_15_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_15_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_15_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_15_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_16_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_16_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_16_V_V_blk_n <= acc_stream_16_V_V_empty_n;
        else 
            acc_stream_16_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_16_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_16_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_16_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_17_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_17_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_17_V_V_blk_n <= acc_stream_17_V_V_empty_n;
        else 
            acc_stream_17_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_17_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_17_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_17_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_18_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_18_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_18_V_V_blk_n <= acc_stream_18_V_V_empty_n;
        else 
            acc_stream_18_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_18_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_18_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_18_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_19_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_19_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_19_V_V_blk_n <= acc_stream_19_V_V_empty_n;
        else 
            acc_stream_19_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_19_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_19_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_19_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_1_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_1_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_1_V_V_blk_n <= acc_stream_1_V_V_empty_n;
        else 
            acc_stream_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_1_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_1_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_20_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_20_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_20_V_V_blk_n <= acc_stream_20_V_V_empty_n;
        else 
            acc_stream_20_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_20_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_20_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_20_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_21_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_21_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_21_V_V_blk_n <= acc_stream_21_V_V_empty_n;
        else 
            acc_stream_21_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_21_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_21_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_21_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_22_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_22_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_22_V_V_blk_n <= acc_stream_22_V_V_empty_n;
        else 
            acc_stream_22_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_22_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_22_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_22_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_23_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_23_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_23_V_V_blk_n <= acc_stream_23_V_V_empty_n;
        else 
            acc_stream_23_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_23_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_23_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_23_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_24_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_24_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_24_V_V_blk_n <= acc_stream_24_V_V_empty_n;
        else 
            acc_stream_24_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_24_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_24_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_24_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_2_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_2_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_2_V_V_blk_n <= acc_stream_2_V_V_empty_n;
        else 
            acc_stream_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_2_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_2_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_3_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_3_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_3_V_V_blk_n <= acc_stream_3_V_V_empty_n;
        else 
            acc_stream_3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_3_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_3_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_3_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_4_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_4_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_4_V_V_blk_n <= acc_stream_4_V_V_empty_n;
        else 
            acc_stream_4_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_4_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_4_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_4_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_5_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_5_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_5_V_V_blk_n <= acc_stream_5_V_V_empty_n;
        else 
            acc_stream_5_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_5_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_5_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_5_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_6_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_6_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_6_V_V_blk_n <= acc_stream_6_V_V_empty_n;
        else 
            acc_stream_6_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_6_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_6_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_6_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_7_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_7_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_7_V_V_blk_n <= acc_stream_7_V_V_empty_n;
        else 
            acc_stream_7_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_7_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_7_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_7_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_8_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_8_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_8_V_V_blk_n <= acc_stream_8_V_V_empty_n;
        else 
            acc_stream_8_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_8_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_8_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_8_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    acc_stream_9_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, acc_stream_9_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_9_V_V_blk_n <= acc_stream_9_V_V_empty_n;
        else 
            acc_stream_9_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    acc_stream_9_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            acc_stream_9_V_V_read <= ap_const_logic_1;
        else 
            acc_stream_9_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    add_ln703_10_fu_394_p2 <= std_logic_vector(unsigned(add_ln703_9_reg_582_pp0_iter4_reg) + unsigned(add_ln703_4_reg_577_pp0_iter4_reg));
    add_ln703_11_fu_323_p2 <= std_logic_vector(unsigned(tmp_V_738_reg_468) + unsigned(tmp_V_739_reg_473));
    add_ln703_12_fu_327_p2 <= std_logic_vector(unsigned(add_ln703_11_fu_323_p2) + unsigned(tmp_V_737_reg_463));
    add_ln703_13_fu_332_p2 <= std_logic_vector(unsigned(tmp_V_741_reg_483) + unsigned(tmp_V_742_reg_488));
    add_ln703_14_fu_336_p2 <= std_logic_vector(unsigned(add_ln703_13_fu_332_p2) + unsigned(tmp_V_740_reg_478));
    add_ln703_15_fu_385_p2 <= std_logic_vector(unsigned(add_ln703_14_reg_562_pp0_iter3_reg) + unsigned(add_ln703_12_reg_557_pp0_iter3_reg));
    add_ln703_16_fu_341_p2 <= std_logic_vector(unsigned(tmp_V_744_reg_498) + unsigned(tmp_V_745_reg_503));
    add_ln703_17_fu_376_p2 <= std_logic_vector(unsigned(add_ln703_16_reg_567_pp0_iter2_reg) + unsigned(tmp_V_743_reg_493_pp0_iter2_reg));
    add_ln703_18_fu_367_p2 <= std_logic_vector(unsigned(tmp_V_746_reg_508_pp0_iter1_reg) + unsigned(tmp_V_747_reg_513_pp0_iter1_reg));
    add_ln703_19_fu_345_p2 <= std_logic_vector(unsigned(tmp_V_748_reg_518) + unsigned(tmp_V_749_reg_523));
    add_ln703_1_fu_349_p2 <= std_logic_vector(unsigned(add_ln703_reg_537) + unsigned(tmp_V_726_reg_408_pp0_iter1_reg));
    add_ln703_20_fu_371_p2 <= std_logic_vector(unsigned(add_ln703_19_reg_572) + unsigned(add_ln703_18_fu_367_p2));
    add_ln703_21_fu_380_p2 <= std_logic_vector(unsigned(add_ln703_20_reg_587) + unsigned(add_ln703_17_fu_376_p2));
    add_ln703_22_fu_389_p2 <= std_logic_vector(unsigned(add_ln703_21_reg_592) + unsigned(add_ln703_15_fu_385_p2));
    add_ln703_2_fu_301_p2 <= std_logic_vector(unsigned(tmp_V_729_reg_423) + unsigned(tmp_V_730_reg_428));
    add_ln703_3_fu_305_p2 <= std_logic_vector(unsigned(add_ln703_2_fu_301_p2) + unsigned(tmp_V_728_reg_418));
    add_ln703_4_fu_353_p2 <= std_logic_vector(unsigned(add_ln703_3_reg_542) + unsigned(add_ln703_1_fu_349_p2));
    add_ln703_5_fu_310_p2 <= std_logic_vector(unsigned(tmp_V_732_reg_438) + unsigned(tmp_V_733_reg_443));
    add_ln703_6_fu_358_p2 <= std_logic_vector(unsigned(add_ln703_5_reg_547) + unsigned(tmp_V_731_reg_433_pp0_iter1_reg));
    add_ln703_7_fu_314_p2 <= std_logic_vector(unsigned(tmp_V_735_reg_453) + unsigned(tmp_V_736_reg_458));
    add_ln703_8_fu_318_p2 <= std_logic_vector(unsigned(add_ln703_7_fu_314_p2) + unsigned(tmp_V_734_reg_448));
    add_ln703_9_fu_362_p2 <= std_logic_vector(unsigned(add_ln703_8_reg_552) + unsigned(add_ln703_6_fu_358_p2));
    add_ln703_fu_297_p2 <= std_logic_vector(unsigned(tmp_V_reg_403) + unsigned(tmp_V_727_reg_413));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, acc_stream_0_V_V_empty_n, acc_stream_1_V_V_empty_n, acc_stream_2_V_V_empty_n, acc_stream_3_V_V_empty_n, acc_stream_4_V_V_empty_n, acc_stream_5_V_V_empty_n, acc_stream_6_V_V_empty_n, acc_stream_7_V_V_empty_n, acc_stream_8_V_V_empty_n, acc_stream_9_V_V_empty_n, acc_stream_10_V_V_empty_n, acc_stream_11_V_V_empty_n, acc_stream_12_V_V_empty_n, acc_stream_13_V_V_empty_n, acc_stream_14_V_V_empty_n, acc_stream_15_V_V_empty_n, acc_stream_16_V_V_empty_n, acc_stream_17_V_V_empty_n, acc_stream_18_V_V_empty_n, acc_stream_19_V_V_empty_n, acc_stream_20_V_V_empty_n, acc_stream_21_V_V_empty_n, acc_stream_22_V_V_empty_n, acc_stream_23_V_V_empty_n, acc_stream_24_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter6)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_const_logic_0 = acc_stream_10_V_V_empty_n) or (ap_const_logic_0 = acc_stream_9_V_V_empty_n) or (ap_const_logic_0 = acc_stream_8_V_V_empty_n) or (ap_const_logic_0 = acc_stream_7_V_V_empty_n) or (ap_const_logic_0 = acc_stream_6_V_V_empty_n) or (ap_const_logic_0 = acc_stream_5_V_V_empty_n) or (ap_const_logic_0 = acc_stream_4_V_V_empty_n) or (ap_const_logic_0 = acc_stream_3_V_V_empty_n) or (ap_const_logic_0 = acc_stream_2_V_V_empty_n) or (ap_const_logic_0 = acc_stream_1_V_V_empty_n) or (ap_const_logic_0 = acc_stream_0_V_V_empty_n) or (ap_const_logic_0 = acc_stream_24_V_V_empty_n) or (ap_const_logic_0 = acc_stream_23_V_V_empty_n) or (ap_const_logic_0 = acc_stream_22_V_V_empty_n) or (ap_const_logic_0 = acc_stream_21_V_V_empty_n) or (ap_const_logic_0 = acc_stream_20_V_V_empty_n) or (ap_const_logic_0 = acc_stream_19_V_V_empty_n) or (ap_const_logic_0 = acc_stream_18_V_V_empty_n) or (ap_const_logic_0 = acc_stream_17_V_V_empty_n) or (ap_const_logic_0 = acc_stream_16_V_V_empty_n) or (ap_const_logic_0 = acc_stream_15_V_V_empty_n) or (ap_const_logic_0 = acc_stream_14_V_V_empty_n) or (ap_const_logic_0 = acc_stream_13_V_V_empty_n) or (ap_const_logic_0 = acc_stream_12_V_V_empty_n) or (ap_const_logic_0 = acc_stream_11_V_V_empty_n))) or ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, acc_stream_0_V_V_empty_n, acc_stream_1_V_V_empty_n, acc_stream_2_V_V_empty_n, acc_stream_3_V_V_empty_n, acc_stream_4_V_V_empty_n, acc_stream_5_V_V_empty_n, acc_stream_6_V_V_empty_n, acc_stream_7_V_V_empty_n, acc_stream_8_V_V_empty_n, acc_stream_9_V_V_empty_n, acc_stream_10_V_V_empty_n, acc_stream_11_V_V_empty_n, acc_stream_12_V_V_empty_n, acc_stream_13_V_V_empty_n, acc_stream_14_V_V_empty_n, acc_stream_15_V_V_empty_n, acc_stream_16_V_V_empty_n, acc_stream_17_V_V_empty_n, acc_stream_18_V_V_empty_n, acc_stream_19_V_V_empty_n, acc_stream_20_V_V_empty_n, acc_stream_21_V_V_empty_n, acc_stream_22_V_V_empty_n, acc_stream_23_V_V_empty_n, acc_stream_24_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter6)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_const_logic_0 = acc_stream_10_V_V_empty_n) or (ap_const_logic_0 = acc_stream_9_V_V_empty_n) or (ap_const_logic_0 = acc_stream_8_V_V_empty_n) or (ap_const_logic_0 = acc_stream_7_V_V_empty_n) or (ap_const_logic_0 = acc_stream_6_V_V_empty_n) or (ap_const_logic_0 = acc_stream_5_V_V_empty_n) or (ap_const_logic_0 = acc_stream_4_V_V_empty_n) or (ap_const_logic_0 = acc_stream_3_V_V_empty_n) or (ap_const_logic_0 = acc_stream_2_V_V_empty_n) or (ap_const_logic_0 = acc_stream_1_V_V_empty_n) or (ap_const_logic_0 = acc_stream_0_V_V_empty_n) or (ap_const_logic_0 = acc_stream_24_V_V_empty_n) or (ap_const_logic_0 = acc_stream_23_V_V_empty_n) or (ap_const_logic_0 = acc_stream_22_V_V_empty_n) or (ap_const_logic_0 = acc_stream_21_V_V_empty_n) or (ap_const_logic_0 = acc_stream_20_V_V_empty_n) or (ap_const_logic_0 = acc_stream_19_V_V_empty_n) or (ap_const_logic_0 = acc_stream_18_V_V_empty_n) or (ap_const_logic_0 = acc_stream_17_V_V_empty_n) or (ap_const_logic_0 = acc_stream_16_V_V_empty_n) or (ap_const_logic_0 = acc_stream_15_V_V_empty_n) or (ap_const_logic_0 = acc_stream_14_V_V_empty_n) or (ap_const_logic_0 = acc_stream_13_V_V_empty_n) or (ap_const_logic_0 = acc_stream_12_V_V_empty_n) or (ap_const_logic_0 = acc_stream_11_V_V_empty_n))) or ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, acc_stream_0_V_V_empty_n, acc_stream_1_V_V_empty_n, acc_stream_2_V_V_empty_n, acc_stream_3_V_V_empty_n, acc_stream_4_V_V_empty_n, acc_stream_5_V_V_empty_n, acc_stream_6_V_V_empty_n, acc_stream_7_V_V_empty_n, acc_stream_8_V_V_empty_n, acc_stream_9_V_V_empty_n, acc_stream_10_V_V_empty_n, acc_stream_11_V_V_empty_n, acc_stream_12_V_V_empty_n, acc_stream_13_V_V_empty_n, acc_stream_14_V_V_empty_n, acc_stream_15_V_V_empty_n, acc_stream_16_V_V_empty_n, acc_stream_17_V_V_empty_n, acc_stream_18_V_V_empty_n, acc_stream_19_V_V_empty_n, acc_stream_20_V_V_empty_n, acc_stream_21_V_V_empty_n, acc_stream_22_V_V_empty_n, acc_stream_23_V_V_empty_n, acc_stream_24_V_V_empty_n, out_V_V_full_n, ap_enable_reg_pp0_iter6)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_const_logic_0 = acc_stream_10_V_V_empty_n) or (ap_const_logic_0 = acc_stream_9_V_V_empty_n) or (ap_const_logic_0 = acc_stream_8_V_V_empty_n) or (ap_const_logic_0 = acc_stream_7_V_V_empty_n) or (ap_const_logic_0 = acc_stream_6_V_V_empty_n) or (ap_const_logic_0 = acc_stream_5_V_V_empty_n) or (ap_const_logic_0 = acc_stream_4_V_V_empty_n) or (ap_const_logic_0 = acc_stream_3_V_V_empty_n) or (ap_const_logic_0 = acc_stream_2_V_V_empty_n) or (ap_const_logic_0 = acc_stream_1_V_V_empty_n) or (ap_const_logic_0 = acc_stream_0_V_V_empty_n) or (ap_const_logic_0 = acc_stream_24_V_V_empty_n) or (ap_const_logic_0 = acc_stream_23_V_V_empty_n) or (ap_const_logic_0 = acc_stream_22_V_V_empty_n) or (ap_const_logic_0 = acc_stream_21_V_V_empty_n) or (ap_const_logic_0 = acc_stream_20_V_V_empty_n) or (ap_const_logic_0 = acc_stream_19_V_V_empty_n) or (ap_const_logic_0 = acc_stream_18_V_V_empty_n) or (ap_const_logic_0 = acc_stream_17_V_V_empty_n) or (ap_const_logic_0 = acc_stream_16_V_V_empty_n) or (ap_const_logic_0 = acc_stream_15_V_V_empty_n) or (ap_const_logic_0 = acc_stream_14_V_V_empty_n) or (ap_const_logic_0 = acc_stream_13_V_V_empty_n) or (ap_const_logic_0 = acc_stream_12_V_V_empty_n) or (ap_const_logic_0 = acc_stream_11_V_V_empty_n))) or ((out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(acc_stream_0_V_V_empty_n, acc_stream_1_V_V_empty_n, acc_stream_2_V_V_empty_n, acc_stream_3_V_V_empty_n, acc_stream_4_V_V_empty_n, acc_stream_5_V_V_empty_n, acc_stream_6_V_V_empty_n, acc_stream_7_V_V_empty_n, acc_stream_8_V_V_empty_n, acc_stream_9_V_V_empty_n, acc_stream_10_V_V_empty_n, acc_stream_11_V_V_empty_n, acc_stream_12_V_V_empty_n, acc_stream_13_V_V_empty_n, acc_stream_14_V_V_empty_n, acc_stream_15_V_V_empty_n, acc_stream_16_V_V_empty_n, acc_stream_17_V_V_empty_n, acc_stream_18_V_V_empty_n, acc_stream_19_V_V_empty_n, acc_stream_20_V_V_empty_n, acc_stream_21_V_V_empty_n, acc_stream_22_V_V_empty_n, acc_stream_23_V_V_empty_n, acc_stream_24_V_V_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((ap_const_logic_0 = acc_stream_10_V_V_empty_n) or (ap_const_logic_0 = acc_stream_9_V_V_empty_n) or (ap_const_logic_0 = acc_stream_8_V_V_empty_n) or (ap_const_logic_0 = acc_stream_7_V_V_empty_n) or (ap_const_logic_0 = acc_stream_6_V_V_empty_n) or (ap_const_logic_0 = acc_stream_5_V_V_empty_n) or (ap_const_logic_0 = acc_stream_4_V_V_empty_n) or (ap_const_logic_0 = acc_stream_3_V_V_empty_n) or (ap_const_logic_0 = acc_stream_2_V_V_empty_n) or (ap_const_logic_0 = acc_stream_1_V_V_empty_n) or (ap_const_logic_0 = acc_stream_0_V_V_empty_n) or (ap_const_logic_0 = acc_stream_24_V_V_empty_n) or (ap_const_logic_0 = acc_stream_23_V_V_empty_n) or (ap_const_logic_0 = acc_stream_22_V_V_empty_n) or (ap_const_logic_0 = acc_stream_21_V_V_empty_n) or (ap_const_logic_0 = acc_stream_20_V_V_empty_n) or (ap_const_logic_0 = acc_stream_19_V_V_empty_n) or (ap_const_logic_0 = acc_stream_18_V_V_empty_n) or (ap_const_logic_0 = acc_stream_17_V_V_empty_n) or (ap_const_logic_0 = acc_stream_16_V_V_empty_n) or (ap_const_logic_0 = acc_stream_15_V_V_empty_n) or (ap_const_logic_0 = acc_stream_14_V_V_empty_n) or (ap_const_logic_0 = acc_stream_13_V_V_empty_n) or (ap_const_logic_0 = acc_stream_12_V_V_empty_n) or (ap_const_logic_0 = acc_stream_11_V_V_empty_n));
    end process;


    ap_block_state3_pp0_stage0_iter6_assign_proc : process(out_V_V_full_n)
    begin
                ap_block_state3_pp0_stage0_iter6 <= (out_V_V_full_n = ap_const_logic_0);
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_382_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_382 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, icmp_ln273_reg_533_pp0_iter5_reg)
    begin
        if (((icmp_ln273_reg_533_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_pixel_index_01_phi_fu_273_p6_assign_proc : process(pixel_index_01_reg_269, pixel_index_reg_528, icmp_ln273_reg_533, ap_condition_382)
    begin
        if ((ap_const_boolean_1 = ap_condition_382)) then
            if ((icmp_ln273_reg_533 = ap_const_lv1_1)) then 
                ap_phi_mux_pixel_index_01_phi_fu_273_p6 <= ap_const_lv12_0;
            elsif ((icmp_ln273_reg_533 = ap_const_lv1_0)) then 
                ap_phi_mux_pixel_index_01_phi_fu_273_p6 <= pixel_index_reg_528;
            else 
                ap_phi_mux_pixel_index_01_phi_fu_273_p6 <= pixel_index_01_reg_269;
            end if;
        else 
            ap_phi_mux_pixel_index_01_phi_fu_273_p6 <= pixel_index_01_reg_269;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, icmp_ln273_fu_289_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln273_fu_289_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln273_fu_289_p2 <= "1" when (ap_phi_mux_pixel_index_01_phi_fu_273_p6 = ap_const_lv12_8FF) else "0";

    out_V_V_blk_n_assign_proc : process(out_V_V_full_n, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_V_V_blk_n <= out_V_V_full_n;
        else 
            out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V_V_din <= tmp_V_750_reg_602;

    out_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_V_V_write <= ap_const_logic_1;
        else 
            out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    pixel_index_fu_283_p2 <= std_logic_vector(unsigned(ap_phi_mux_pixel_index_01_phi_fu_273_p6) + unsigned(ap_const_lv12_1));
    tmp_V_750_fu_398_p2 <= std_logic_vector(unsigned(add_ln703_22_reg_597) + unsigned(add_ln703_10_fu_394_p2));
end behav;
